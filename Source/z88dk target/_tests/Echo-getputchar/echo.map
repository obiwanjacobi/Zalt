ASMHEAD                         = 0000, G: 
ASMHEAD_BSS                     = 0D32, G: 
ASMHEAD_BSS_END                 = 0D3B, G: 
ASMHEAD_BSS_UNINITIALIZED       = 0D33, G: 
ASMHEAD_CODE                    = 0000, G: 
ASMHEAD_CODE_END                = 0C6D, G: 
ASMHEAD_DATA                    = 0C6D, G: 
ASMHEAD_DATA_END                = 0D32, G: 
ASMHEAD_IGNORE                  = 0D3B, G: 
ASMHEAD_bss_alloc_balloc        = 0D33, G: 
ASMHEAD_bss_alloc_malloc        = 0D33, G: 
ASMHEAD_bss_arch                = 0D33, G: 
ASMHEAD_bss_clib                = 0D33, G: 
ASMHEAD_bss_compiler            = 0D3B, G: 
ASMHEAD_bss_driver              = 0D33, G: 
ASMHEAD_bss_error               = 0D33, G: 
ASMHEAD_bss_fcntl               = 0D35, G: 
ASMHEAD_bss_font                = 0D33, G: 
ASMHEAD_bss_input               = 0D35, G: 
ASMHEAD_bss_lib                 = 0D3B, G: 
ASMHEAD_bss_sound_bit           = 0D35, G: 
ASMHEAD_bss_stdio               = 0D35, G: 
ASMHEAD_bss_stdlib              = 0D35, G: 
ASMHEAD_bss_string              = 0D3B, G: 
ASMHEAD_bss_user                = 0D3B, G: 
ASMHEAD_code_adt_b_array        = 009F, G: 
ASMHEAD_code_adt_b_vector       = 009F, G: 
ASMHEAD_code_adt_ba_priority_queue = 009F, G: 
ASMHEAD_code_adt_ba_stack       = 009F, G: 
ASMHEAD_code_adt_bv_priority_queue = 009F, G: 
ASMHEAD_code_adt_bv_stack       = 009F, G: 
ASMHEAD_code_adt_p_forward_list = 009F, G: 
ASMHEAD_code_adt_p_forward_list_alt = 00A5, G: 
ASMHEAD_code_adt_p_list         = 00A5, G: 
ASMHEAD_code_adt_p_queue        = 00A5, G: 
ASMHEAD_code_adt_p_stack        = 00A5, G: 
ASMHEAD_code_adt_w_array        = 00A5, G: 
ASMHEAD_code_adt_w_vector       = 00A5, G: 
ASMHEAD_code_adt_wa_priority_queue = 00A5, G: 
ASMHEAD_code_adt_wa_stack       = 00A5, G: 
ASMHEAD_code_adt_wv_priority_queue = 00A5, G: 
ASMHEAD_code_adt_wv_stack       = 00A5, G: 
ASMHEAD_code_alloc_balloc       = 00A5, G: 
ASMHEAD_code_alloc_malloc       = 00A5, G: 
ASMHEAD_code_alloc_obstack      = 00C7, G: 
ASMHEAD_code_arch               = 00C7, G: 
ASMHEAD_code_bifrost2           = 00C7, G: 
ASMHEAD_code_bifrost_h          = 00C7, G: 
ASMHEAD_code_bifrost_l          = 00C7, G: 
ASMHEAD_code_clib               = 009F, G: 
ASMHEAD_code_compiler           = 0BC8, G: 
ASMHEAD_code_compress_zx7       = 00C7, G: 
ASMHEAD_code_crt_common         = 009F, G: 
ASMHEAD_code_crt_exit           = 009C, G: 
ASMHEAD_code_crt_init           = 0071, G: 
ASMHEAD_code_crt_main           = 0095, G: 
ASMHEAD_code_crt_return         = 009C, G: 
ASMHEAD_code_ctype              = 00C7, G: 
ASMHEAD_code_driver             = 009F, G: 
ASMHEAD_code_driver_character_input = 00F5, G: 
ASMHEAD_code_driver_character_output = 01CD, G: 
ASMHEAD_code_driver_general     = 00D0, G: 
ASMHEAD_code_driver_memstream   = 0256, G: 
ASMHEAD_code_driver_terminal_input = 0256, G: 
ASMHEAD_code_driver_terminal_output = 0256, G: 
ASMHEAD_code_driver_tty         = 0256, G: 
ASMHEAD_code_error              = 0256, G: 
ASMHEAD_code_fcntl              = 02D7, G: 
ASMHEAD_code_font               = 009F, G: 
ASMHEAD_code_font_fzx           = 0373, G: 
ASMHEAD_code_fp_genmath         = 0373, G: 
ASMHEAD_code_fp_math48          = 0373, G: 
ASMHEAD_code_input              = 0373, G: 
ASMHEAD_code_inttypes           = 0373, G: 
ASMHEAD_code_l                  = 0373, G: 
ASMHEAD_code_l_sccz80           = 0460, G: 
ASMHEAD_code_l_sdcc             = 0460, G: 
ASMHEAD_code_lib                = 0BC8, G: 
ASMHEAD_code_locale             = 0460, G: 
ASMHEAD_code_math               = 0460, G: 
ASMHEAD_code_nirvanam           = 04FA, G: 
ASMHEAD_code_nirvanap           = 04FA, G: 
ASMHEAD_code_setjmp             = 04FA, G: 
ASMHEAD_code_sound_bit          = 04FA, G: 
ASMHEAD_code_stdio              = 04FA, G: 
ASMHEAD_code_stdlib             = 0B00, G: 
ASMHEAD_code_string             = 0B7F, G: 
ASMHEAD_code_temp_sp1           = 0BA9, G: 
ASMHEAD_code_threads            = 0BA9, G: 
ASMHEAD_code_threads_mutex      = 0BA9, G: 
ASMHEAD_code_user               = 0C36, G: 
ASMHEAD_code_z80                = 0BC8, G: 
ASMHEAD_data_alloc_balloc       = 0C6E, G: 
ASMHEAD_data_alloc_malloc       = 0C6E, G: 
ASMHEAD_data_clib               = 0C6E, G: 
ASMHEAD_data_compiler           = 0D32, G: 
ASMHEAD_data_driver             = 0C6E, G: 
ASMHEAD_data_fcntl              = 0C70, G: 
ASMHEAD_data_fcntl_fdtable_body = 0CF2, G: 
ASMHEAD_data_fcntl_stdio_heap_body = 0C78, G: 
ASMHEAD_data_fcntl_stdio_heap_head = 0C72, G: 
ASMHEAD_data_fcntl_stdio_heap_tail = 0CF0, G: 
ASMHEAD_data_font               = 0C6E, G: 
ASMHEAD_data_lib                = 0D32, G: 
ASMHEAD_data_sound_bit          = 0CF8, G: 
ASMHEAD_data_stdio              = 0CF8, G: 
ASMHEAD_data_stdlib             = 0D31, G: 
ASMHEAD_data_threads            = 0D31, G: 
ASMHEAD_data_user               = 0D32, G: 
ASMHEAD_rodata_clib             = 0C36, G: 
ASMHEAD_rodata_compiler         = 0C6D, G: 
ASMHEAD_rodata_driver           = 0C36, G: 
ASMHEAD_rodata_error_string_end = 0C6C, G: 
ASMHEAD_rodata_error_strings    = 0C36, G: 
ASMHEAD_rodata_fcntl            = 0C6D, G: 
ASMHEAD_rodata_font             = 0C36, G: 
ASMHEAD_rodata_font_4x8         = 0C6D, G: 
ASMHEAD_rodata_font_8x8         = 0C6D, G: 
ASMHEAD_rodata_font_fzx         = 0C6D, G: 
ASMHEAD_rodata_input            = 0C6D, G: 
ASMHEAD_rodata_lib              = 0C6D, G: 
ASMHEAD_rodata_sound_bit        = 0C6D, G: 
ASMHEAD_rodata_stdio            = 0C6D, G: 
ASMHEAD_rodata_stdlib           = 0C6D, G: 
ASMHEAD_rodata_user             = 0C6D, G: 
ASMHEAD_smc_clib                = 0C6E, G: 
ASMHEAD_smc_compiler            = 0C6E, G: 
ASMHEAD_smc_driver              = 0C6E, G: 
ASMHEAD_smc_fcntl               = 0C6E, G: 
ASMHEAD_smc_font                = 0C6E, G: 
ASMHEAD_smc_l                   = 0C6E, G: 
ASMHEAD_smc_lib                 = 0C6E, G: 
ASMHEAD_smc_sound_bit           = 0C6E, G: 
ASMHEAD_smc_user                = 0C6E, G: 
ASMSIZE                         = 0D3B, G: 
ASMSIZE_BSS                     = 0001, G: 
ASMSIZE_BSS_END                 = 0000, G: 
ASMSIZE_BSS_UNINITIALIZED       = 0000, G: 
ASMSIZE_CODE                    = 0071, G: 
ASMSIZE_CODE_END                = 0000, G: 
ASMSIZE_DATA                    = 0001, G: 
ASMSIZE_DATA_END                = 0000, G: 
ASMSIZE_IGNORE                  = 0000, G: 
ASMSIZE_bss_alloc_balloc        = 0000, G: 
ASMSIZE_bss_alloc_malloc        = 0000, G: 
ASMSIZE_bss_arch                = 0000, G: 
ASMSIZE_bss_clib                = 0000, G: 
ASMSIZE_bss_compiler            = 0000, G: 
ASMSIZE_bss_driver              = 0000, G: 
ASMSIZE_bss_error               = 0002, G: 
ASMSIZE_bss_fcntl               = 0000, G: 
ASMSIZE_bss_font                = 0000, G: 
ASMSIZE_bss_input               = 0000, G: 
ASMSIZE_bss_lib                 = 0000, G: 
ASMSIZE_bss_sound_bit           = 0000, G: 
ASMSIZE_bss_stdio               = 0000, G: 
ASMSIZE_bss_stdlib              = 0006, G: 
ASMSIZE_bss_string              = 0000, G: 
ASMSIZE_bss_user                = 0000, G: 
ASMSIZE_code_adt_b_array        = 0000, G: 
ASMSIZE_code_adt_b_vector       = 0000, G: 
ASMSIZE_code_adt_ba_priority_queue = 0000, G: 
ASMSIZE_code_adt_ba_stack       = 0000, G: 
ASMSIZE_code_adt_bv_priority_queue = 0000, G: 
ASMSIZE_code_adt_bv_stack       = 0000, G: 
ASMSIZE_code_adt_p_forward_list = 0006, G: 
ASMSIZE_code_adt_p_forward_list_alt = 0000, G: 
ASMSIZE_code_adt_p_list         = 0000, G: 
ASMSIZE_code_adt_p_queue        = 0000, G: 
ASMSIZE_code_adt_p_stack        = 0000, G: 
ASMSIZE_code_adt_w_array        = 0000, G: 
ASMSIZE_code_adt_w_vector       = 0000, G: 
ASMSIZE_code_adt_wa_priority_queue = 0000, G: 
ASMSIZE_code_adt_wa_stack       = 0000, G: 
ASMSIZE_code_adt_wv_priority_queue = 0000, G: 
ASMSIZE_code_adt_wv_stack       = 0000, G: 
ASMSIZE_code_alloc_balloc       = 0000, G: 
ASMSIZE_code_alloc_malloc       = 0022, G: 
ASMSIZE_code_alloc_obstack      = 0000, G: 
ASMSIZE_code_arch               = 0000, G: 
ASMSIZE_code_bifrost2           = 0000, G: 
ASMSIZE_code_bifrost_h          = 0000, G: 
ASMSIZE_code_bifrost_l          = 0000, G: 
ASMSIZE_code_clib               = 0000, G: 
ASMSIZE_code_compiler           = 006E, G: 
ASMSIZE_code_compress_zx7       = 0000, G: 
ASMSIZE_code_crt_common         = 0000, G: 
ASMSIZE_code_crt_exit           = 0000, G: 
ASMSIZE_code_crt_init           = 0024, G: 
ASMSIZE_code_crt_main           = 0007, G: 
ASMSIZE_code_crt_return         = 0003, G: 
ASMSIZE_code_ctype              = 0009, G: 
ASMSIZE_code_driver             = 0000, G: 
ASMSIZE_code_driver_character_input = 00D8, G: 
ASMSIZE_code_driver_character_output = 0089, G: 
ASMSIZE_code_driver_general     = 0025, G: 
ASMSIZE_code_driver_memstream   = 0000, G: 
ASMSIZE_code_driver_terminal_input = 0000, G: 
ASMSIZE_code_driver_terminal_output = 0000, G: 
ASMSIZE_code_driver_tty         = 0000, G: 
ASMSIZE_code_error              = 0081, G: 
ASMSIZE_code_fcntl              = 009C, G: 
ASMSIZE_code_font               = 0000, G: 
ASMSIZE_code_font_fzx           = 0000, G: 
ASMSIZE_code_fp_genmath         = 0000, G: 
ASMSIZE_code_fp_math48          = 0000, G: 
ASMSIZE_code_input              = 0000, G: 
ASMSIZE_code_inttypes           = 0000, G: 
ASMSIZE_code_l                  = 00ED, G: 
ASMSIZE_code_l_sccz80           = 0000, G: 
ASMSIZE_code_l_sdcc             = 0000, G: 
ASMSIZE_code_lib                = 0000, G: 
ASMSIZE_code_locale             = 0000, G: 
ASMSIZE_code_math               = 009A, G: 
ASMSIZE_code_nirvanam           = 0000, G: 
ASMSIZE_code_nirvanap           = 0000, G: 
ASMSIZE_code_setjmp             = 0000, G: 
ASMSIZE_code_sound_bit          = 0000, G: 
ASMSIZE_code_stdio              = 0606, G: 
ASMSIZE_code_stdlib             = 007F, G: 
ASMSIZE_code_string             = 002A, G: 
ASMSIZE_code_temp_sp1           = 0000, G: 
ASMSIZE_code_threads            = 0000, G: 
ASMSIZE_code_threads_mutex      = 001F, G: 
ASMSIZE_code_user               = 0000, G: 
ASMSIZE_code_z80                = 0000, G: 
ASMSIZE_data_alloc_balloc       = 0000, G: 
ASMSIZE_data_alloc_malloc       = 0002, G: 
ASMSIZE_data_clib               = 0000, G: 
ASMSIZE_data_compiler           = 0000, G: 
ASMSIZE_data_driver             = 0000, G: 
ASMSIZE_data_fcntl              = 0002, G: 
ASMSIZE_data_fcntl_fdtable_body = 0006, G: 
ASMSIZE_data_fcntl_stdio_heap_body = 0078, G: 
ASMSIZE_data_fcntl_stdio_heap_head = 0006, G: 
ASMSIZE_data_fcntl_stdio_heap_tail = 0002, G: 
ASMSIZE_data_font               = 0000, G: 
ASMSIZE_data_lib                = 0000, G: 
ASMSIZE_data_sound_bit          = 0000, G: 
ASMSIZE_data_stdio              = 0039, G: 
ASMSIZE_data_stdlib             = 0000, G: 
ASMSIZE_data_threads            = 0001, G: 
ASMSIZE_data_user               = 0000, G: 
ASMSIZE_rodata_clib             = 0000, G: 
ASMSIZE_rodata_compiler         = 0000, G: 
ASMSIZE_rodata_driver           = 0000, G: 
ASMSIZE_rodata_error_string_end = 0001, G: 
ASMSIZE_rodata_error_strings    = 0036, G: 
ASMSIZE_rodata_fcntl            = 0000, G: 
ASMSIZE_rodata_font             = 0000, G: 
ASMSIZE_rodata_font_4x8         = 0000, G: 
ASMSIZE_rodata_font_8x8         = 0000, G: 
ASMSIZE_rodata_font_fzx         = 0000, G: 
ASMSIZE_rodata_input            = 0000, G: 
ASMSIZE_rodata_lib              = 0000, G: 
ASMSIZE_rodata_sound_bit        = 0000, G: 
ASMSIZE_rodata_stdio            = 0000, G: 
ASMSIZE_rodata_stdlib           = 0000, G: 
ASMSIZE_rodata_user             = 0000, G: 
ASMSIZE_smc_clib                = 0000, G: 
ASMSIZE_smc_compiler            = 0000, G: 
ASMSIZE_smc_driver              = 0000, G: 
ASMSIZE_smc_fcntl               = 0000, G: 
ASMSIZE_smc_font                = 0000, G: 
ASMSIZE_smc_l                   = 0000, G: 
ASMSIZE_smc_lib                 = 0000, G: 
ASMSIZE_smc_sound_bit           = 0000, G: 
ASMSIZE_smc_user                = 0000, G: 
ASMTAIL                         = 0D3B, G: 
ASMTAIL_BSS                     = 0D33, G: 
ASMTAIL_BSS_END                 = 0D3B, G: 
ASMTAIL_BSS_UNINITIALIZED       = 0D33, G: 
ASMTAIL_CODE                    = 0071, G: 
ASMTAIL_CODE_END                = 0C6D, G: 
ASMTAIL_DATA                    = 0C6E, G: 
ASMTAIL_DATA_END                = 0D32, G: 
ASMTAIL_IGNORE                  = 0D3B, G: 
ASMTAIL_bss_alloc_balloc        = 0D33, G: 
ASMTAIL_bss_alloc_malloc        = 0D33, G: 
ASMTAIL_bss_arch                = 0D33, G: 
ASMTAIL_bss_clib                = 0D33, G: 
ASMTAIL_bss_compiler            = 0D3B, G: 
ASMTAIL_bss_driver              = 0D33, G: 
ASMTAIL_bss_error               = 0D35, G: 
ASMTAIL_bss_fcntl               = 0D35, G: 
ASMTAIL_bss_font                = 0D33, G: 
ASMTAIL_bss_input               = 0D35, G: 
ASMTAIL_bss_lib                 = 0D3B, G: 
ASMTAIL_bss_sound_bit           = 0D35, G: 
ASMTAIL_bss_stdio               = 0D35, G: 
ASMTAIL_bss_stdlib              = 0D3B, G: 
ASMTAIL_bss_string              = 0D3B, G: 
ASMTAIL_bss_user                = 0D3B, G: 
ASMTAIL_code_adt_b_array        = 009F, G: 
ASMTAIL_code_adt_b_vector       = 009F, G: 
ASMTAIL_code_adt_ba_priority_queue = 009F, G: 
ASMTAIL_code_adt_ba_stack       = 009F, G: 
ASMTAIL_code_adt_bv_priority_queue = 009F, G: 
ASMTAIL_code_adt_bv_stack       = 009F, G: 
ASMTAIL_code_adt_p_forward_list = 00A5, G: 
ASMTAIL_code_adt_p_forward_list_alt = 00A5, G: 
ASMTAIL_code_adt_p_list         = 00A5, G: 
ASMTAIL_code_adt_p_queue        = 00A5, G: 
ASMTAIL_code_adt_p_stack        = 00A5, G: 
ASMTAIL_code_adt_w_array        = 00A5, G: 
ASMTAIL_code_adt_w_vector       = 00A5, G: 
ASMTAIL_code_adt_wa_priority_queue = 00A5, G: 
ASMTAIL_code_adt_wa_stack       = 00A5, G: 
ASMTAIL_code_adt_wv_priority_queue = 00A5, G: 
ASMTAIL_code_adt_wv_stack       = 00A5, G: 
ASMTAIL_code_alloc_balloc       = 00A5, G: 
ASMTAIL_code_alloc_malloc       = 00C7, G: 
ASMTAIL_code_alloc_obstack      = 00C7, G: 
ASMTAIL_code_arch               = 00C7, G: 
ASMTAIL_code_bifrost2           = 00C7, G: 
ASMTAIL_code_bifrost_h          = 00C7, G: 
ASMTAIL_code_bifrost_l          = 00C7, G: 
ASMTAIL_code_clib               = 009F, G: 
ASMTAIL_code_compiler           = 0C36, G: 
ASMTAIL_code_compress_zx7       = 00C7, G: 
ASMTAIL_code_crt_common         = 009F, G: 
ASMTAIL_code_crt_exit           = 009C, G: 
ASMTAIL_code_crt_init           = 0095, G: 
ASMTAIL_code_crt_main           = 009C, G: 
ASMTAIL_code_crt_return         = 009F, G: 
ASMTAIL_code_ctype              = 00D0, G: 
ASMTAIL_code_driver             = 009F, G: 
ASMTAIL_code_driver_character_input = 01CD, G: 
ASMTAIL_code_driver_character_output = 0256, G: 
ASMTAIL_code_driver_general     = 00F5, G: 
ASMTAIL_code_driver_memstream   = 0256, G: 
ASMTAIL_code_driver_terminal_input = 0256, G: 
ASMTAIL_code_driver_terminal_output = 0256, G: 
ASMTAIL_code_driver_tty         = 0256, G: 
ASMTAIL_code_error              = 02D7, G: 
ASMTAIL_code_fcntl              = 0373, G: 
ASMTAIL_code_font               = 009F, G: 
ASMTAIL_code_font_fzx           = 0373, G: 
ASMTAIL_code_fp_genmath         = 0373, G: 
ASMTAIL_code_fp_math48          = 0373, G: 
ASMTAIL_code_input              = 0373, G: 
ASMTAIL_code_inttypes           = 0373, G: 
ASMTAIL_code_l                  = 0460, G: 
ASMTAIL_code_l_sccz80           = 0460, G: 
ASMTAIL_code_l_sdcc             = 0460, G: 
ASMTAIL_code_lib                = 0BC8, G: 
ASMTAIL_code_locale             = 0460, G: 
ASMTAIL_code_math               = 04FA, G: 
ASMTAIL_code_nirvanam           = 04FA, G: 
ASMTAIL_code_nirvanap           = 04FA, G: 
ASMTAIL_code_setjmp             = 04FA, G: 
ASMTAIL_code_sound_bit          = 04FA, G: 
ASMTAIL_code_stdio              = 0B00, G: 
ASMTAIL_code_stdlib             = 0B7F, G: 
ASMTAIL_code_string             = 0BA9, G: 
ASMTAIL_code_temp_sp1           = 0BA9, G: 
ASMTAIL_code_threads            = 0BA9, G: 
ASMTAIL_code_threads_mutex      = 0BC8, G: 
ASMTAIL_code_user               = 0C36, G: 
ASMTAIL_code_z80                = 0BC8, G: 
ASMTAIL_data_alloc_balloc       = 0C6E, G: 
ASMTAIL_data_alloc_malloc       = 0C70, G: 
ASMTAIL_data_clib               = 0C6E, G: 
ASMTAIL_data_compiler           = 0D32, G: 
ASMTAIL_data_driver             = 0C6E, G: 
ASMTAIL_data_fcntl              = 0C72, G: 
ASMTAIL_data_fcntl_fdtable_body = 0CF8, G: 
ASMTAIL_data_fcntl_stdio_heap_body = 0CF0, G: 
ASMTAIL_data_fcntl_stdio_heap_head = 0C78, G: 
ASMTAIL_data_fcntl_stdio_heap_tail = 0CF2, G: 
ASMTAIL_data_font               = 0C6E, G: 
ASMTAIL_data_lib                = 0D32, G: 
ASMTAIL_data_sound_bit          = 0CF8, G: 
ASMTAIL_data_stdio              = 0D31, G: 
ASMTAIL_data_stdlib             = 0D31, G: 
ASMTAIL_data_threads            = 0D32, G: 
ASMTAIL_data_user               = 0D32, G: 
ASMTAIL_rodata_clib             = 0C36, G: 
ASMTAIL_rodata_compiler         = 0C6D, G: 
ASMTAIL_rodata_driver           = 0C36, G: 
ASMTAIL_rodata_error_string_end = 0C6D, G: 
ASMTAIL_rodata_error_strings    = 0C6C, G: 
ASMTAIL_rodata_fcntl            = 0C6D, G: 
ASMTAIL_rodata_font             = 0C36, G: 
ASMTAIL_rodata_font_4x8         = 0C6D, G: 
ASMTAIL_rodata_font_8x8         = 0C6D, G: 
ASMTAIL_rodata_font_fzx         = 0C6D, G: 
ASMTAIL_rodata_input            = 0C6D, G: 
ASMTAIL_rodata_lib              = 0C6D, G: 
ASMTAIL_rodata_sound_bit        = 0C6D, G: 
ASMTAIL_rodata_stdio            = 0C6D, G: 
ASMTAIL_rodata_stdlib           = 0C6D, G: 
ASMTAIL_rodata_user             = 0C6D, G: 
ASMTAIL_smc_clib                = 0C6E, G: 
ASMTAIL_smc_compiler            = 0C6E, G: 
ASMTAIL_smc_driver              = 0C6E, G: 
ASMTAIL_smc_fcntl               = 0C6E, G: 
ASMTAIL_smc_font                = 0C6E, G: 
ASMTAIL_smc_l                   = 0C6E, G: 
ASMTAIL_smc_lib                 = 0C6E, G: 
ASMTAIL_smc_sound_bit           = 0C6E, G: 
ASMTAIL_smc_user                = 0C6E, G: 
CHAR_CR                         = 000D, L: character_00_input_stdio_msg_getc
CHAR_CR                         = 000D, L: character_00_output_ochar_putc_bin
CHAR_LF                         = 000A, L: character_00_input_stdio_msg_read
CHAR_LF                         = 000A, L: character_00_output_ochar_putc_bin
DEFINED_Z88DK_USES_SDCC         = 0001, L: s6b0_1
ICHAR_MSG_GETC                  = 000F, G: s6b0_1
IOCTL_ICHAR_CRLF                = C103, G: s6b0_1
IOCTL_ITERM_CAPS                = C009, G: s6b0_1
IOCTL_ITERM_COOK                = C011, G: s6b0_1
IOCTL_ITERM_CRLF                = C101, G: s6b0_1
IOCTL_ITERM_CURS                = C201, G: s6b0_1
IOCTL_ITERM_ECHO                = C081, G: s6b0_1
IOCTL_ITERM_GET_EDITBUF         = 0381, G: s6b0_1
IOCTL_ITERM_LINE                = C021, G: s6b0_1
IOCTL_ITERM_PASS                = C041, G: s6b0_1
IOCTL_ITERM_SET_EDITBUF         = 0301, G: s6b0_1
IOCTL_ITERM_TIE                 = 0201, G: s6b0_1
IOCTL_OCHAR_CRLF                = C014, G: s6b0_1
IOCTL_OTERM_BELL                = C102, G: s6b0_1
IOCTL_OTERM_CLEAR               = E002, G: s6b0_1
IOCTL_OTERM_CLS                 = 0102, G: s6b0_1
IOCTL_OTERM_COOK                = C022, G: s6b0_1
IOCTL_OTERM_CRLF                = C012, G: s6b0_1
IOCTL_OTERM_FONT                = 0802, G: s6b0_1
IOCTL_OTERM_FZX_GET_FZX_STATE   = 0F82, G: s6b0_1
IOCTL_OTERM_FZX_GET_PAPER_COORD = 0A82, G: s6b0_1
IOCTL_OTERM_FZX_GET_PAPER_RECT  = 0B82, G: s6b0_1
IOCTL_OTERM_FZX_LEFT_MARGIN     = 0C02, G: s6b0_1
IOCTL_OTERM_FZX_LINE_SPACING    = 0D02, G: s6b0_1
IOCTL_OTERM_FZX_SET_FZX_STATE   = 0F02, G: s6b0_1
IOCTL_OTERM_FZX_SET_PAPER_COORD = 0A02, G: s6b0_1
IOCTL_OTERM_FZX_SET_PAPER_RECT  = 0B02, G: s6b0_1
IOCTL_OTERM_FZX_SPACE_EXPAND    = 0E02, G: s6b0_1
IOCTL_OTERM_GET_CURSOR_COORD    = 0582, G: s6b0_1
IOCTL_OTERM_GET_OTERM           = 0602, G: s6b0_1
IOCTL_OTERM_GET_WINDOW_COORD    = 0382, G: s6b0_1
IOCTL_OTERM_GET_WINDOW_RECT     = 0482, G: s6b0_1
IOCTL_OTERM_PAGE                = C082, G: s6b0_1
IOCTL_OTERM_PAUSE               = C042, G: s6b0_1
IOCTL_OTERM_RESET_SCROLL        = 0202, G: s6b0_1
IOCTL_OTERM_SCROLL              = 0702, G: s6b0_1
IOCTL_OTERM_SET_CURSOR_COORD    = 0502, G: s6b0_1
IOCTL_OTERM_SET_WINDOW_COORD    = 0302, G: s6b0_1
IOCTL_OTERM_SET_WINDOW_RECT     = 0402, G: s6b0_1
IOCTL_OTERM_SIGNAL              = C202, G: s6b0_1
IOCTL_RESET                     = 0000, G: s6b0_1
ITERM_MSG_BELL                  = 0019, G: s6b0_1
ITERM_MSG_BS                    = 0015, G: s6b0_1
ITERM_MSG_BS_PWD                = 0016, G: s6b0_1
ITERM_MSG_ERASE_CURSOR          = 0013, G: s6b0_1
ITERM_MSG_ERASE_CURSOR_PWD      = 0014, G: s6b0_1
ITERM_MSG_GETC                  = 000F, G: s6b0_1
ITERM_MSG_INTERRUPT             = 0010, G: s6b0_1
ITERM_MSG_PRINT_CURSOR          = 0012, G: s6b0_1
ITERM_MSG_PUTC                  = 0011, G: s6b0_1
ITERM_MSG_READLINE_BEGIN        = 0017, G: s6b0_1
ITERM_MSG_READLINE_END          = 0018, G: s6b0_1
OCHAR_MSG_PUTC                  = 0020, G: s6b0_1
OCHAR_MSG_PUTC_BIN              = 001E, G: s6b0_1
OTERM_MSG_BELL                  = 0024, G: s6b0_1
OTERM_MSG_CLS                   = 0022, G: s6b0_1
OTERM_MSG_PAUSE                 = 0023, G: s6b0_1
OTERM_MSG_PRINTC                = 0020, G: s6b0_1
OTERM_MSG_PSCROLL               = 0025, G: s6b0_1
OTERM_MSG_PUTC                  = 001E, G: s6b0_1
OTERM_MSG_SCROLL                = 0021, G: s6b0_1
OTERM_MSG_TTY                   = 001F, G: s6b0_1
STDIO_MSG_CLOS                  = 0009, G: s6b0_1
STDIO_MSG_EATC                  = 0004, G: s6b0_1
STDIO_MSG_FLSH                  = 0008, G: s6b0_1
STDIO_MSG_GETC                  = 0003, G: s6b0_1
STDIO_MSG_ICTL                  = 0007, G: s6b0_1
STDIO_MSG_PUTC                  = 0001, G: s6b0_1
STDIO_MSG_READ                  = 0005, G: s6b0_1
STDIO_MSG_SEEK                  = 0006, G: s6b0_1
STDIO_MSG_WRIT                  = 0002, G: s6b0_1
STDIO_SEEK_CUR                  = 0001, G: s6b0_1
STDIO_SEEK_END                  = 0002, G: s6b0_1
STDIO_SEEK_SET                  = 0000, G: s6b0_1
TAR__clib_balloc_table_size     = 0000, L: s6b0_1
TAR__clib_exit_stack_size       = 0002, L: s6b0_1
TAR__clib_fopen_max             = 0000, L: s6b0_1
TAR__clib_malloc_heap_size      = FFFFFFFF, L: s6b0_1
TAR__clib_open_max              = 0000, L: s6b0_1
TAR__clib_quickexit_stack_size  = 0000, L: s6b0_1
TAR__clib_stdio_heap_size       = 0080, L: s6b0_1
TAR__crt_enable_close           = 0001, L: s6b0_1
TAR__crt_enable_commandline     = 0000, L: s6b0_1
TAR__crt_enable_nmi             = 0000, L: s6b0_1
TAR__crt_enable_restart         = 0000, L: s6b0_1
TAR__crt_enable_rst             = 0000, L: s6b0_1
TAR__crt_initialize_bss         = 0000, L: s6b0_1
TAR__crt_model                  = 0000, L: s6b0_1
TAR__crt_org_bss                = 0000, L: s6b0_1
TAR__crt_org_code               = 0000, L: s6b0_1
TAR__crt_org_data               = 0000, L: s6b0_1
TAR__crt_stack_size             = 0200, L: s6b0_1
TAR__register_sp                = 0000, L: s6b0_1
_CLIB_CFG_ASM_                  = 0001, L: asm__fflushall_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_fflush_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_fgetc_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_fputc_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_putchar_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_ultoa
_CLIB_CFG_ASM_                  = 0001, L: asm_utoa
_CLIB_CFG_ASM_                  = 0001, L: asm_vfprintf_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_vioctl
_CLIB_CFG_ASM_                  = 0001, L: character_00_input_stdio_msg_getc
_CLIB_CFG_ASM_                  = 0001, L: character_00_input_stdio_msg_read
_CLIB_CFG_ASM_                  = 0001, L: character_00_output_ochar_putc_bin
_CLIB_CFG_ASM_                  = 0001, L: console_01_input_terminal_fdriver
_CLIB_CFG_ASM_                  = 0001, L: error_eacces_mc
_CLIB_CFG_ASM_                  = 0001, L: error_ebdfd_mc
_CLIB_CFG_ASM_                  = 0001, L: error_ebdfd_zc
_CLIB_CFG_ASM_                  = 0001, L: error_edom_mc
_CLIB_CFG_ASM_                  = 0001, L: error_einval_mc
_CLIB_CFG_ASM_                  = 0001, L: error_einval_zc
_CLIB_CFG_ASM_                  = 0001, L: error_enolck_mc
_CLIB_CFG_ASM_                  = 0001, L: error_enolck_zc
_CLIB_CFG_ASM_                  = 0001, L: error_enotsup_mc
_CLIB_CFG_ASM_                  = 0001, L: error_enotsup_zc
_CLIB_CFG_ASM_                  = 0001, L: error_erange_mc
_CLIB_CFG_ASM_                  = 0001, L: error_erange_zc
_CLIB_CFG_ASM_                  = 0001, L: getchar
_CLIB_CFG_ASM_                  = 0001, L: l_atou
_CLIB_CFG_ASM_                  = 0001, L: l_divu_16_16x8
_CLIB_CFG_ASM_                  = 0001, L: l_divu_32_32x8
_CLIB_CFG_ASM_                  = 0001, L: l_utoa
_CLIB_CFG_ASM_                  = 0001, L: printf
_CLIB_CFG_ASM_                  = 0001, L: putchar_fastcall
__CLIB_OPT_ERROR                = 0001, L: error_eacces_mc
__CLIB_OPT_ERROR                = 0001, L: error_ebdfd_mc
__CLIB_OPT_ERROR                = 0001, L: error_ebdfd_zc
__CLIB_OPT_ERROR                = 0001, L: error_edom_mc
__CLIB_OPT_ERROR                = 0001, L: error_einval_mc
__CLIB_OPT_ERROR                = 0001, L: error_einval_zc
__CLIB_OPT_ERROR                = 0001, L: error_enolck_mc
__CLIB_OPT_ERROR                = 0001, L: error_enolck_zc
__CLIB_OPT_ERROR                = 0001, L: error_enotsup_mc
__CLIB_OPT_ERROR                = 0001, L: error_enotsup_zc
__CLIB_OPT_ERROR                = 0001, L: error_erange_mc
__CLIB_OPT_ERROR                = 0001, L: error_erange_zc
__CLIB_OPT_IMATH                = 0000, L: l_divu_16_16x8
__CLIB_OPT_IMATH                = 0000, L: l_divu_32_32x8
__CLIB_OPT_MULTITHREAD          = 0000, L: asm__fflushall_unlocked
__CLIB_OPT_MULTITHREAD          = 0000, L: asm_vioctl
__CLIB_OPT_MULTITHREAD          = 0000, L: getchar
__CLIB_OPT_MULTITHREAD          = 0000, L: printf
__CLIB_OPT_MULTITHREAD          = 0000, L: putchar_fastcall
__CLIB_OPT_NUM2TXT              = 0000, L: asm_ultoa
__CLIB_OPT_NUM2TXT              = 0000, L: asm_utoa
__CLIB_OPT_NUM2TXT_SELECT       = 0000, L: l_utoa
__CLIB_OPT_PRINTF               = 3FFFFF, L: asm_vfprintf_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_fflush_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_fgetc_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_fputc_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_putchar_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_vfprintf_unlocked
__CLIB_OPT_TXT2NUM_SELECT       = 0000, L: l_atou
__CRTDEF                        = 0000, L: s6b0_1
__EACCES                        = 0001, G: s6b0_1
__EAGAIN                        = 000F, G: s6b0_1
__EBADF                         = 0002, G: s6b0_1
__EBDFD                         = 0003, G: s6b0_1
__EDOM                          = 0004, G: s6b0_1
__EFBIG                         = 0005, G: s6b0_1
__EINVAL                        = 0006, G: s6b0_1
__EMFILE                        = 0007, G: s6b0_1
__ENFILE                        = 0008, G: s6b0_1
__ENOLCK                        = 0009, G: s6b0_1
__ENOMEM                        = 000A, G: s6b0_1
__ENOTSUP                       = 000B, G: s6b0_1
__EOK                           = 0000, G: s6b0_1
__EOVERFLOW                     = 000C, G: s6b0_1
__ERANGE                        = 000D, G: s6b0_1
__ESTAT                         = 000E, G: s6b0_1
__EWOULDBLOCK                   = 000F, G: s6b0_1
__Exit                          = 009B, G: s6b0_1
__MMAP                          = 0000, L: s6b0_1
__SDCC                          = 0001, L: __stdio_nextarg_bc
__SDCC                          = 0001, L: __stdio_nextarg_de
__SDCC                          = 0001, L: __stdio_nextarg_hl
__SDCC                          = 0001, L: __stdio_printf_ii
__SDCC                          = 0001, L: __stdio_printf_number_tail_long
__SDCC                          = 0001, L: __stdio_varg
__SDCC                          = 0001, L: asm__fflushall_unlocked
__SDCC                          = 0001, L: asm_fflush_unlocked
__SDCC                          = 0001, L: asm_fgetc_unlocked
__SDCC                          = 0001, L: asm_fputc_unlocked
__SDCC                          = 0001, L: asm_putchar_unlocked
__SDCC                          = 0001, L: asm_ultoa
__SDCC                          = 0001, L: asm_utoa
__SDCC                          = 0001, L: asm_vfprintf_unlocked
__SDCC                          = 0001, L: asm_vioctl
__SDCC                          = 0001, L: character_00_input_stdio_msg_getc
__SDCC                          = 0001, L: character_00_input_stdio_msg_read
__SDCC                          = 0001, L: character_00_output_ochar_putc_bin
__SDCC                          = 0001, L: console_01_input_terminal_fdriver
__SDCC                          = 0001, L: error_eacces_mc
__SDCC                          = 0001, L: error_ebdfd_mc
__SDCC                          = 0001, L: error_ebdfd_zc
__SDCC                          = 0001, L: error_edom_mc
__SDCC                          = 0001, L: error_einval_mc
__SDCC                          = 0001, L: error_einval_zc
__SDCC                          = 0001, L: error_enolck_mc
__SDCC                          = 0001, L: error_enolck_zc
__SDCC                          = 0001, L: error_enotsup_mc
__SDCC                          = 0001, L: error_enotsup_zc
__SDCC                          = 0001, L: error_erange_mc
__SDCC                          = 0001, L: error_erange_zc
__SDCC                          = 0001, L: getchar
__SDCC                          = 0001, L: l_atou
__SDCC                          = 0001, L: l_divu_16_16x8
__SDCC                          = 0001, L: l_divu_32_32x8
__SDCC                          = 0001, L: l_utoa
__SDCC                          = 0001, L: printf
__SDCC                          = 0001, L: putchar_fastcall
__SDCC_IY                       = 0001, L: __stdio_nextarg_bc
__SDCC_IY                       = 0001, L: __stdio_nextarg_de
__SDCC_IY                       = 0001, L: __stdio_nextarg_hl
__SDCC_IY                       = 0001, L: __stdio_printf_ii
__SDCC_IY                       = 0001, L: __stdio_printf_number_tail_long
__SDCC_IY                       = 0001, L: __stdio_varg
__SDCC_IY                       = 0001, L: asm__fflushall_unlocked
__SDCC_IY                       = 0001, L: asm_fflush_unlocked
__SDCC_IY                       = 0001, L: asm_fgetc_unlocked
__SDCC_IY                       = 0001, L: asm_fputc_unlocked
__SDCC_IY                       = 0001, L: asm_putchar_unlocked
__SDCC_IY                       = 0001, L: asm_ultoa
__SDCC_IY                       = 0001, L: asm_utoa
__SDCC_IY                       = 0001, L: asm_vfprintf_unlocked
__SDCC_IY                       = 0001, L: asm_vioctl
__SDCC_IY                       = 0001, L: character_00_input_stdio_msg_getc
__SDCC_IY                       = 0001, L: character_00_input_stdio_msg_read
__SDCC_IY                       = 0001, L: character_00_output_ochar_putc_bin
__SDCC_IY                       = 0001, L: console_01_input_terminal_fdriver
__SDCC_IY                       = 0001, L: error_eacces_mc
__SDCC_IY                       = 0001, L: error_ebdfd_mc
__SDCC_IY                       = 0001, L: error_ebdfd_zc
__SDCC_IY                       = 0001, L: error_edom_mc
__SDCC_IY                       = 0001, L: error_einval_mc
__SDCC_IY                       = 0001, L: error_einval_zc
__SDCC_IY                       = 0001, L: error_enolck_mc
__SDCC_IY                       = 0001, L: error_enolck_zc
__SDCC_IY                       = 0001, L: error_enotsup_mc
__SDCC_IY                       = 0001, L: error_enotsup_zc
__SDCC_IY                       = 0001, L: error_erange_mc
__SDCC_IY                       = 0001, L: error_erange_zc
__SDCC_IY                       = 0001, L: getchar
__SDCC_IY                       = 0001, L: l_atou
__SDCC_IY                       = 0001, L: l_divu_16_16x8
__SDCC_IY                       = 0001, L: l_divu_32_32x8
__SDCC_IY                       = 0001, L: l_utoa
__SDCC_IY                       = 0001, L: printf
__SDCC_IY                       = 0001, L: putchar_fastcall
__Start                         = 006B, G: s6b0_1
___str_0                        = 0C26, L: s6b0_
__bool                          = 0309, L: asm_vioctl
__ch_system                     = 027C, G: s6b0_1
__clib_balloc_table_size        = 0000, L: s6b0_1
__clib_exit_stack_size          = 0002, L: s6b0_1
__clib_fopen_max                = 0000, L: s6b0_1
__clib_malloc_heap_size         = FFFFFFFF, L: s6b0_1
__clib_open_max                 = 0000, L: s6b0_1
__clib_quickexit_stack_size     = 0000, L: s6b0_1
__clib_stdio_heap_size          = 0080, L: s6b0_1
__crt_enable_close              = 0001, L: s6b0_1
__crt_initialize_bss            = 0000, L: s6b0_1
__crt_model                     = 0000, L: s6b0_1
__crt_org_bss                   = 0000, L: s6b0_1
__crt_org_code                  = 0000, L: s6b0_1
__crt_org_data                  = 0000, L: s6b0_1
__crt_stack_size                = 0200, L: s6b0_1
__error_stream                  = 06EC, L: asm_vfprintf_unlocked
__exit_stack                    = 0D35, G: s6b0_1
__exit_stack_size               = 0002, G: s6b0_1
__fcntl_fdchain_descend         = 034B, G: __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_1      = 035D, G: __fcntl_fdstruct_from_fd_1
__fcntl_fdstruct_from_fd_2      = 0352, G: __fcntl_fdstruct_from_fd_2
__fcntl_fdtbl                   = 0CF2, G: s6b0_1
__fcntl_fdtbl_size              = 0003, G: s6b0_1
__format_loop                   = 0546, L: asm_vfprintf_unlocked
__getf                          = 0324, L: asm_vioctl
__i_fcntl_fdstruct_0            = 0C7E, L: s6b0_1
__i_fcntl_fdstruct_1            = 0C95, L: s6b0_1
__i_fcntl_fdstruct_2            = 0000, L: character_00_output_stdio_msg_writ
__i_fcntl_fdstruct_2            = 0C95, L: s6b0_1
__i_fcntl_heap_0                = 0C78, L: s6b0_1
__i_fcntl_heap_1                = 0C8F, L: s6b0_1
__i_fcntl_heap_2                = 0CA6, L: s6b0_1
__i_fcntl_heap_3                = 0CF0, L: s6b0_1
__i_stdio_file_0                = 0CFA, L: s6b0_1
__i_stdio_file_1                = 0D0B, L: s6b0_1
__i_stdio_file_2                = 0D1C, L: s6b0_1
__malloc_heap                   = 0C6E, G: s6b0_1
__quickexit_stack               = 0D3A, G: s6b0_1
__quickexit_stack_size          = 0000, G: s6b0_1
__setf                          = 0310, L: asm_vioctl
__stdio_block                   = 0C72, L: s6b0_1
__stdio_closed_file_list        = 0D2D, G: s6b0_1
__stdio_heap                    = 0C70, G: s6b0_1
__stdio_length_modifier         = 06FF, G: __stdio_length_modifier
__stdio_nextarg_bc              = 0AFB, G: __stdio_nextarg_bc
__stdio_nextarg_de              = 072D, G: __stdio_nextarg_de
__stdio_nextarg_hl              = 082D, G: __stdio_nextarg_hl
__stdio_open_file_list          = 0D2B, G: s6b0_1
__stdio_printf_bb               = 0802, G: __stdio_printf_bb
__stdio_printf_c                = 0808, G: __stdio_printf_c
__stdio_printf_d                = 0832, G: __stdio_printf_d
__stdio_printf_ii               = 0838, G: __stdio_printf_ii
__stdio_printf_lbb              = 0894, G: __stdio_printf_lbb
__stdio_printf_ld               = 089A, G: __stdio_printf_ld
__stdio_printf_ln               = 08A0, G: __stdio_printf_ln
__stdio_printf_lo               = 08B5, G: __stdio_printf_lo
__stdio_printf_lp               = 08BB, G: __stdio_printf_lp
__stdio_printf_lu               = 08D5, G: __stdio_printf_lu
__stdio_printf_lx               = 08DB, G: __stdio_printf_lx
__stdio_printf_n                = 08E1, G: __stdio_printf_n
__stdio_printf_number_tail      = 0929, G: __stdio_printf_number_tail
__stdio_printf_number_tail_int  = 08F4, G: __stdio_printf_number_tail_int
__stdio_printf_number_tail_long = 09DC, G: __stdio_printf_number_tail_long
__stdio_printf_number_tail_uint = 0908, G: __stdio_printf_number_tail_int
__stdio_printf_number_tail_ulong = 09F6, G: __stdio_printf_number_tail_long
__stdio_printf_number_tail_zero = 091C, G: __stdio_printf_number_tail
__stdio_printf_o                = 0A1F, G: __stdio_printf_o
__stdio_printf_p                = 0A25, G: __stdio_printf_p
__stdio_printf_padding_precision = 0AA7, G: __stdio_send_output
__stdio_printf_padding_precision_bc = 0AA7, G: __stdio_send_output
__stdio_printf_padding_precision_hl = 0AA5, G: __stdio_send_output
__stdio_printf_padding_width    = 0AAD, G: __stdio_send_output
__stdio_printf_padding_width_bc = 0AAD, G: __stdio_send_output
__stdio_printf_padding_width_hl = 0AAB, G: __stdio_send_output
__stdio_printf_s                = 0A3F, G: __stdio_printf_s
__stdio_printf_sign             = 0A82, G: __stdio_printf_sign
__stdio_printf_sign_0           = 0A85, G: __stdio_printf_sign
__stdio_printf_u                = 0A99, G: __stdio_printf_u
__stdio_printf_x                = 0A9F, G: __stdio_printf_x
__stdio_recv_input_raw_getc     = 07D0, G: __stdio_recv_input_raw_getc
__stdio_send_output             = 0ABB, G: __stdio_send_output
__stdio_send_output_buffer      = 0AB6, G: __stdio_send_output
__stdio_send_output_chars       = 0AAF, G: __stdio_send_output
__stdio_send_output_raw         = 0AE8, G: __stdio_send_output_raw
__stdio_send_output_raw_buffer  = 0AE2, G: __stdio_send_output_raw
__stdio_send_output_raw_buffer_unchecked = 0AE6, G: __stdio_send_output_raw
__stdio_send_output_raw_chars   = 0ADA, G: __stdio_send_output_raw
__stdio_send_output_raw_chars_unchecked = 0ADE, G: __stdio_send_output_raw
__stdio_varg_2                  = 0732, G: __stdio_varg
__stdio_verify_input            = 0739, G: __stdio_verify_input
__stdio_verify_output           = 07AB, G: __stdio_verify_output
__thrd_id                       = 0D31, G: s6b0_1
__thread_block_timeout          = 0376, G: s6b0_1
__thread_context_switch         = 0376, G: s6b0_1
__thread_unblock                = 0376, G: s6b0_1
_errno                          = 0D33, G: _errno
_getchar                        = 04FA, G: getchar
_getchar_unlocked               = 04FA, G: getchar_unlocked
_ictl_messages                  = 017A, L: character_00_input_stdio_msg_ictl
_main                           = 0BC8, G: s6b0_
_no_ungetc_gc                   = 07EE, L: __stdio_recv_input_raw_getc
_printf                         = 050C, G: printf
_printf_unlocked                = 050C, G: printf_unlocked
_putchar_fastcall               = 0514, G: putchar_fastcall
_putchar_unlocked_fastcall      = 0514, G: putchar_unlocked_fastcall
_return_join_2                  = 06D7, L: asm_vfprintf_unlocked
_return_join_4                  = 06D2, L: asm_vfprintf_unlocked
_stderr                         = 0D1A, G: s6b0_1
_stdin                          = 0CF8, G: s6b0_1
_stdout                         = 0D09, G: s6b0_1
acon_tbl                        = 067E, L: asm_vfprintf_unlocked
alpha                           = 043F, L: l_num2char
asm0_exit                       = 0B03, G: asm_exit
asm0_fflush_unlocked            = 0765, G: asm_fflush_unlocked
asm0_fgetc_unlocked             = 0501, G: asm_fgetc_unlocked
asm0_fputc_unlocked             = 051C, G: asm_fputc_unlocked
asm0_putchar_unlocked           = 0518, G: asm_putchar_unlocked
asm0_ultoa                      = 0B27, G: asm_ultoa
asm0_utoa                       = 0B59, G: asm_utoa
asm0_vfprintf_unlocked          = 0539, G: asm_vfprintf_unlocked
asm1_fflush_unlocked            = 0765, G: asm_fflush_unlocked
asm1_ultoa                      = 0B2C, G: asm_ultoa
asm1_utoa                       = 0B5F, G: asm_utoa
asm1_vfprintf_unlocked          = 0535, G: asm_vfprintf_unlocked
asm2_ultoa                      = 0B48, G: asm_ultoa
asm3_ultoa                      = 0B4E, G: asm_ultoa
asm__fflushall_unlocked         = 079A, G: asm__fflushall_unlocked
asm__memlwr                     = 0B99, G: asm__memlwr
asm_exit                        = 0B00, G: asm_exit
asm_fflush_unlocked             = 075E, G: asm_fflush_unlocked
asm_fgetc_unlocked              = 0501, G: asm_fgetc_unlocked
asm_fputc_unlocked              = 051C, G: asm_fputc_unlocked
asm_getchar_unlocked            = 04FA, G: asm_getchar_unlocked
asm_heap_init                   = 00A5, G: asm_heap_init
asm_mtx_init                    = 0BA9, G: asm_mtx_init
asm_p_forward_list_front        = 009F, G: asm_p_forward_list_front
asm_p_forward_list_next         = 009F, G: asm_p_forward_list_next
asm_printf_unlocked             = 050C, G: asm_printf_unlocked
asm_putchar_unlocked            = 0514, G: asm_putchar_unlocked
asm_strchrnul                   = 0B7F, G: asm_strchrnul
asm_strnlen                     = 0B89, G: asm_strnlen
asm_tolower                     = 00C7, G: asm_tolower
asm_ultoa                       = 0B21, G: asm_ultoa
asm_utoa                        = 0B54, G: asm_utoa
asm_vfprintf_unlocked           = 0535, G: asm_vfprintf_unlocked
asm_vioctl                      = 02D7, G: asm_vioctl
asm_vioctl_driver               = 032F, G: asm_vioctl
asm_vprintf_unlocked            = 052E, G: asm_vprintf_unlocked
bc_larger                       = 041C, L: l_maxu_bc_hl
character_00_input              = 0104, G: character_00_input
character_00_input_stdio_msg_eatc = 012A, G: character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_getc = 014C, G: character_00_input_stdio_msg_getc
character_00_input_stdio_msg_ictl = 016C, G: character_00_input_stdio_msg_ictl
character_00_input_stdio_msg_read = 0181, G: character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = 01AB, G: character_00_input_stdio_msg_seek
character_00_output             = 01D9, G: character_00_output
character_00_output_ochar_msg_putc_bin = 01FF, G: character_00_output_ochar_putc_bin
character_00_output_stdio_msg_ictl = 0219, G: character_00_output_stdio_msg_ictl
character_00_output_stdio_msg_putc = 0229, G: character_00_output_stdio_msg_putc
character_00_output_stdio_msg_writ = 023D, G: character_00_output_stdio_msg_writ
common_spec                     = 060D, L: asm_vfprintf_unlocked
compute_lp                      = 0B2E, L: asm_ultoa
compute_lp                      = 0B66, L: asm_utoa
console_01_input_terminal_fdriver = 00D0, G: console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = 00D0, G: console_01_output_terminal_fdriver
converter_specifier             = 05F9, L: asm_vfprintf_unlocked
cr                              = 0165, L: character_00_input_stdio_msg_getc
critical_section                = 02D7, L: asm_vioctl
deliver_message                 = 02F5, L: asm_vioctl
device_reset_error              = 00D8, G: device_reset_error
device_return_error             = 00E1, G: device_return_error
device_set_error                = 00E8, G: device_set_error
divide                          = 03FE, L: l_small_utoa
divide_zero                     = 04F6, L: l_small_divu_16_16x16
divide_zero                     = 04BB, L: l_small_divu_32_32x32
divisor_sixteen_bit             = 04C8, L: l_small_divu_16_16x16
divloop                         = 0400, L: l_small_utoa
eatc_exit                       = 0149, L: character_00_input_stdio_msg_eatc
eatc_loop                       = 012F, L: character_00_input_stdio_msg_eatc
end_precision                   = 05F4, L: asm_vfprintf_unlocked
errno_mc                        = 0268, G: errno_mc
error_detected                  = 0AD0, L: __stdio_send_output
error_detected                  = 0AF0, L: __stdio_send_output_raw
error_divide_by_zero_mc         = 02AB, G: error_divide_by_zero_mc
error_eacces_mc                 = 029C, G: error_eacces_mc
error_ebdfd_mc                  = 02D2, G: error_ebdfd_mc
error_ebdfd_zc                  = 02CB, G: error_ebdfd_zc
error_edom_mc                   = 02AB, G: error_edom_mc
error_einval_mc                 = 028A, G: error_einval_mc
error_einval_zc                 = 0284, G: error_einval_zc
error_enolck_mc                 = 025E, G: error_enolck_mc
error_enolck_zc                 = 0258, G: error_enolck_zc
error_enotsup_mc                = 02B7, G: error_enotsup_mc
error_enotsup_zc                = 02B1, G: error_enotsup_zc
error_erange_mc                 = 0296, G: error_erange_mc
error_erange_zc                 = 0290, G: error_erange_zc
error_format_precision          = 06E5, L: asm_vfprintf_unlocked
error_format_width              = 06E6, L: asm_vfprintf_unlocked
error_lzc                       = 02BD, G: error_lzc
error_lznc                      = 02C4, G: error_lznc
error_mc                        = 0273, G: error_mc
error_printf_converter          = 06FA, L: asm_vfprintf_unlocked
error_stream                    = 06E9, L: asm_vfprintf_unlocked
error_zc                        = 027C, G: error_zc
error_znc                       = 02A4, G: error_znc
errors                          = 0756, L: __stdio_verify_input
errors                          = 07C8, L: __stdio_verify_output
exit                            = 0ACB, L: __stdio_send_output
exit_buf_is_null                = 0B48, L: asm_ultoa
exit_error                      = 017F, L: character_00_input_stdio_msg_ictl
exit_error                      = 0227, L: character_00_output_stdio_msg_ictl
exit_radix_no_good              = 0B4E, L: asm_ultoa
external_required               = 095B, L: __stdio_printf_number_tail
file_loop                       = 079D, L: asm__fflushall_unlocked
find_driver_loop                = 02E5, L: asm_vioctl
flag_chars                      = 0575, L: asm_vfprintf_unlocked
flag_found                      = 05AE, L: asm_vfprintf_unlocked
flags                           = 0582, L: asm_vfprintf_unlocked
flags_id                        = 0589, L: asm_vfprintf_unlocked
format_end                      = 0568, L: asm_vfprintf_unlocked
format_loop                     = 0544, L: asm_vfprintf_unlocked
forward_flush                   = 078F, L: asm_fflush_unlocked
forward_ioctl                   = 031B, L: asm_vioctl
hex_base                        = 099B, L: __stdio_printf_number_tail
internal_required               = 093D, L: __stdio_printf_number_tail
interpret                       = 057F, L: asm_vfprintf_unlocked
l0_divu_16_16x8                 = 04E4, G: l_divu_16_16x8
l0_divu_32_32x8                 = 0461, G: l_divu_32_32x8
l0_small_divu_16_16x16          = 04C4, G: l_small_divu_16_16x16
l0_small_divu_16_16x8           = 04E4, G: l_small_divu_16_16x16
l0_small_divu_32_32x32          = 0479, G: l_small_divu_32_32x32
l_addu_hl_bc                    = 0431, G: l_addu_hl_bc
l_addu_hl_de                    = 040E, G: l_addu_hl_de
l_atou                          = 0398, G: l_atou
l_decu_dehl                     = 044F, G: l_decu_dehl
l_divu_16_16x8                  = 04E0, G: l_divu_16_16x8
l_divu_32_32x8                  = 0460, G: l_divu_32_32x8
l_jphl                          = 0437, G: l_jphl
l_jpix                          = 0373, G: l_jpix
l_main_00102                    = 0C15, L: s6b0_
l_main_00104                    = 0BE3, L: s6b0_
l_main_00107                    = 0C21, L: s6b0_
l_maxu_bc_hl                    = 0414, G: l_maxu_bc_hl
l_neg_dehl                      = 041F, G: l_neg_dehl
l_neg_hl                        = 03C0, G: l_neg_hl
l_num2char                      = 0438, G: l_num2char
l_ret                           = 0376, G: l_ret
l_setmem_hl                     = 0397, G: l_setmem_hl
l_small_atou                    = 0398, G: l_small_atou
l_small_divu_16_16x16           = 04C0, G: l_small_divu_16_16x16
l_small_divu_16_16x8            = 04E0, G: l_small_divu_16_16x16
l_small_divu_32_32x32           = 0473, G: l_small_divu_32_32x32
l_small_utoa                    = 03CF, G: l_small_utoa
l_utoa                          = 03CF, G: l_utoa
l_utoa_lib                      = 03E2, G: l_small_utoa
l_utod_de                       = 0407, G: l_utod_de
l_utod_hl                       = 03C8, G: l_utod_hl
l_valid_base                    = 0442, G: l_valid_base
last_was_read                   = 0772, L: asm_fflush_unlocked
last_was_write                  = 078F, L: asm_fflush_unlocked
lcon_tbl                        = 06AC, L: asm_vfprintf_unlocked
leading_zeroes                  = 03F0, L: l_small_utoa
left_justify                    = 081F, L: __stdio_printf_c
left_justify                    = 087E, L: __stdio_printf_ii
left_justify                    = 09D2, L: __stdio_printf_number_tail
left_justify                    = 0A6F, L: __stdio_printf_s
length_modifier                 = 05F6, L: asm_vfprintf_unlocked
limit                           = 045B, L: l_decu_dehl
lm_chars                        = 0721, L: __stdio_length_modifier
lm_double                       = 0718, L: __stdio_length_modifier
lm_found                        = 070F, L: __stdio_length_modifier
lm_loop                         = 0705, L: __stdio_length_modifier
long_spec                       = 061E, L: asm_vfprintf_unlocked
loop                            = 0B9D, L: asm__memlwr
loop                            = 0B0F, L: asm_exit
loop                            = 0B7F, L: asm_strchrnul
loop                            = 039D, L: l_small_atou
loop_0                          = 048A, L: l_small_divu_32_32x32
loop_16_0                       = 04CE, L: l_small_divu_16_16x16
loop_16_1                       = 04D6, L: l_small_divu_16_16x16
loop_1                          = 04A6, L: l_small_divu_32_32x32
loop_8_0                        = 04E8, L: l_small_divu_16_16x16
loop_8_1                        = 04F1, L: l_small_divu_16_16x16
loop_8_2                        = 04EF, L: l_small_divu_16_16x16
match_con                       = 066A, L: asm_vfprintf_unlocked
match_ret                       = 0676, L: asm_vfprintf_unlocked
msw                             = 0455, L: l_decu_dehl
mtx_plain                       = 0001, G: s6b0_1
mtx_recursive                   = 0002, G: s6b0_1
mtx_timed                       = 0004, G: s6b0_1
no_base_indicator               = 0953, L: __stdio_printf_number_tail
no_base_indicator_2             = 09A7, L: __stdio_printf_number_tail
no_leading_zeroes               = 03E4, L: l_small_utoa
no_prefix_chars                 = 09B4, L: __stdio_printf_number_tail
no_sign                         = 0945, L: __stdio_printf_number_tail
not_negative                    = 0A8C, L: __stdio_printf_sign
not_plus                        = 0A93, L: __stdio_printf_sign
notend                          = 0B96, L: asm_strnlen
null_s                          = 0A7B, L: __stdio_printf_s
num_is_zero                     = 09CE, L: __stdio_printf_number_tail
number_zero                     = 095C, L: __stdio_printf_number_tail
octal_base                      = 09A6, L: __stdio_printf_number_tail
out_internal                    = 097B, L: __stdio_printf_number_tail
output_char                     = 0819, L: __stdio_printf_c
overflow                        = 03BD, L: l_small_atou
padding_required                = 086D, L: __stdio_printf_ii
padding_required                = 0A5E, L: __stdio_printf_s
precision                       = 05C0, L: asm_vfprintf_unlocked
precision_defined               = 08C7, L: __stdio_printf_lp
precision_defined               = 0A31, L: __stdio_printf_p
precision_from_format           = 05E9, L: asm_vfprintf_unlocked
precision_positive              = 05E4, L: asm_vfprintf_unlocked
precision_specified             = 0A52, L: __stdio_printf_s
printf_I                        = 062B, L: asm_vfprintf_unlocked
printf_invoke                   = 064A, L: asm_vfprintf_unlocked
printf_invoke_flags             = 0635, L: asm_vfprintf_unlocked
printf_return_2                 = 06D6, L: asm_vfprintf_unlocked
printf_return_4                 = 06D1, L: asm_vfprintf_unlocked
printf_return_is_2              = 0632, L: asm_vfprintf_unlocked
printf_return_is_4              = 0626, L: asm_vfprintf_unlocked
putc_loop                       = 022D, L: character_00_output_stdio_msg_putc
putchar                         = 0215, L: character_00_output_ochar_putc_bin
rcon_tbl                        = 0687, L: asm_vfprintf_unlocked
read_exit                       = 0198, L: character_00_input_stdio_msg_read
read_exit_error                 = 01A0, L: character_00_input_stdio_msg_read
read_loop                       = 0182, L: character_00_input_stdio_msg_read
reject_cr                       = 0154, L: character_00_input_stdio_msg_getc
return_zero                     = 0AF5, L: __stdio_send_output_raw
right_justify                   = 0812, L: __stdio_printf_c
right_justify                   = 0873, L: __stdio_printf_ii
right_justify                   = 0973, L: __stdio_printf_number_tail
right_justify                   = 0A64, L: __stdio_printf_s
seek_loop                       = 01B7, L: character_00_input_stdio_msg_seek
signed_join                     = 090F, L: __stdio_printf_number_tail_int
signed_join                     = 0A03, L: __stdio_printf_number_tail_long
skip_00                         = 063D, L: asm_vfprintf_unlocked
skip_11                         = 0645, L: asm_vfprintf_unlocked
spacing_ok                      = 096C, L: __stdio_printf_number_tail
startup                         = 0000, L: s6b0_1
stream_error                    = 09B9, L: __stdio_printf_number_tail
stream_error                    = 07FD, L: __stdio_recv_input_raw_getc
string_valid                    = 0A49, L: __stdio_printf_s
thrd_busy                       = 0004, G: s6b0_1
thrd_error                      = 0001, G: s6b0_1
thrd_nomem                      = 0002, G: s6b0_1
thrd_success                    = 0000, G: s6b0_1
thrd_timedout                   = 0008, G: s6b0_1
unknown_type                    = 0BC3, L: asm_mtx_init
unrecognized                    = 0615, L: asm_vfprintf_unlocked
width                           = 0593, L: asm_vfprintf_unlocked
width_from_format               = 05B3, L: asm_vfprintf_unlocked
width_padding                   = 0826, L: __stdio_printf_c
width_positive                  = 05A9, L: asm_vfprintf_unlocked
writ_end                        = 0252, L: character_00_output_stdio_msg_writ
writ_loop                       = 0241, L: character_00_output_stdio_msg_writ
write1s                         = 03F8, L: l_small_utoa
write                           = 03F3, L: l_small_utoa
write_lp                        = 0B41, L: asm_ultoa
write_lp                        = 0B78, L: asm_utoa
write_octet                     = 088B, L: __stdio_printf_ii
zalt_00_input_sysctrl           = 00F5, G: zalt_00_input_sysctrl_driver
zalt_00_input_sysctrl_ichar_msg_getc = 00FC, L: zalt_00_input_sysctrl_driver
zalt_00_output_sysctrl          = 01CD, G: zalt_00_output_sysctrl_driver
zalt_00_output_sysctrl_ochar_msg_putc = 01D4, L: zalt_00_output_sysctrl_driver
zero                            = 0A1B, L: __stdio_printf_number_tail_long


TAR__clib_malloc_heap_size      = FFFFFFFF, L: s6b0_1
__clib_malloc_heap_size         = FFFFFFFF, L: s6b0_1
ASMHEAD                         = 0000, G: 
ASMHEAD_CODE                    = 0000, G: 
ASMSIZE_BSS_END                 = 0000, G: 
ASMSIZE_BSS_UNINITIALIZED       = 0000, G: 
ASMSIZE_CODE_END                = 0000, G: 
ASMSIZE_DATA_END                = 0000, G: 
ASMSIZE_IGNORE                  = 0000, G: 
ASMSIZE_bss_alloc_balloc        = 0000, G: 
ASMSIZE_bss_alloc_malloc        = 0000, G: 
ASMSIZE_bss_arch                = 0000, G: 
ASMSIZE_bss_clib                = 0000, G: 
ASMSIZE_bss_compiler            = 0000, G: 
ASMSIZE_bss_driver              = 0000, G: 
ASMSIZE_bss_fcntl               = 0000, G: 
ASMSIZE_bss_font                = 0000, G: 
ASMSIZE_bss_input               = 0000, G: 
ASMSIZE_bss_lib                 = 0000, G: 
ASMSIZE_bss_sound_bit           = 0000, G: 
ASMSIZE_bss_stdio               = 0000, G: 
ASMSIZE_bss_string              = 0000, G: 
ASMSIZE_bss_user                = 0000, G: 
ASMSIZE_code_adt_b_array        = 0000, G: 
ASMSIZE_code_adt_b_vector       = 0000, G: 
ASMSIZE_code_adt_ba_priority_queue = 0000, G: 
ASMSIZE_code_adt_ba_stack       = 0000, G: 
ASMSIZE_code_adt_bv_priority_queue = 0000, G: 
ASMSIZE_code_adt_bv_stack       = 0000, G: 
ASMSIZE_code_adt_p_forward_list_alt = 0000, G: 
ASMSIZE_code_adt_p_list         = 0000, G: 
ASMSIZE_code_adt_p_queue        = 0000, G: 
ASMSIZE_code_adt_p_stack        = 0000, G: 
ASMSIZE_code_adt_w_array        = 0000, G: 
ASMSIZE_code_adt_w_vector       = 0000, G: 
ASMSIZE_code_adt_wa_priority_queue = 0000, G: 
ASMSIZE_code_adt_wa_stack       = 0000, G: 
ASMSIZE_code_adt_wv_priority_queue = 0000, G: 
ASMSIZE_code_adt_wv_stack       = 0000, G: 
ASMSIZE_code_alloc_balloc       = 0000, G: 
ASMSIZE_code_alloc_obstack      = 0000, G: 
ASMSIZE_code_arch               = 0000, G: 
ASMSIZE_code_bifrost2           = 0000, G: 
ASMSIZE_code_bifrost_h          = 0000, G: 
ASMSIZE_code_bifrost_l          = 0000, G: 
ASMSIZE_code_clib               = 0000, G: 
ASMSIZE_code_compress_zx7       = 0000, G: 
ASMSIZE_code_crt_common         = 0000, G: 
ASMSIZE_code_crt_exit           = 0000, G: 
ASMSIZE_code_driver             = 0000, G: 
ASMSIZE_code_driver_memstream   = 0000, G: 
ASMSIZE_code_driver_terminal_input = 0000, G: 
ASMSIZE_code_driver_terminal_output = 0000, G: 
ASMSIZE_code_driver_tty         = 0000, G: 
ASMSIZE_code_font               = 0000, G: 
ASMSIZE_code_font_fzx           = 0000, G: 
ASMSIZE_code_fp_genmath         = 0000, G: 
ASMSIZE_code_fp_math48          = 0000, G: 
ASMSIZE_code_input              = 0000, G: 
ASMSIZE_code_inttypes           = 0000, G: 
ASMSIZE_code_l_sccz80           = 0000, G: 
ASMSIZE_code_l_sdcc             = 0000, G: 
ASMSIZE_code_lib                = 0000, G: 
ASMSIZE_code_locale             = 0000, G: 
ASMSIZE_code_nirvanam           = 0000, G: 
ASMSIZE_code_nirvanap           = 0000, G: 
ASMSIZE_code_setjmp             = 0000, G: 
ASMSIZE_code_sound_bit          = 0000, G: 
ASMSIZE_code_temp_sp1           = 0000, G: 
ASMSIZE_code_threads            = 0000, G: 
ASMSIZE_code_user               = 0000, G: 
ASMSIZE_code_z80                = 0000, G: 
ASMSIZE_data_alloc_balloc       = 0000, G: 
ASMSIZE_data_clib               = 0000, G: 
ASMSIZE_data_compiler           = 0000, G: 
ASMSIZE_data_driver             = 0000, G: 
ASMSIZE_data_font               = 0000, G: 
ASMSIZE_data_lib                = 0000, G: 
ASMSIZE_data_sound_bit          = 0000, G: 
ASMSIZE_data_stdlib             = 0000, G: 
ASMSIZE_data_user               = 0000, G: 
ASMSIZE_rodata_clib             = 0000, G: 
ASMSIZE_rodata_compiler         = 0000, G: 
ASMSIZE_rodata_driver           = 0000, G: 
ASMSIZE_rodata_fcntl            = 0000, G: 
ASMSIZE_rodata_font             = 0000, G: 
ASMSIZE_rodata_font_4x8         = 0000, G: 
ASMSIZE_rodata_font_8x8         = 0000, G: 
ASMSIZE_rodata_font_fzx         = 0000, G: 
ASMSIZE_rodata_input            = 0000, G: 
ASMSIZE_rodata_lib              = 0000, G: 
ASMSIZE_rodata_sound_bit        = 0000, G: 
ASMSIZE_rodata_stdio            = 0000, G: 
ASMSIZE_rodata_stdlib           = 0000, G: 
ASMSIZE_rodata_user             = 0000, G: 
ASMSIZE_smc_clib                = 0000, G: 
ASMSIZE_smc_compiler            = 0000, G: 
ASMSIZE_smc_driver              = 0000, G: 
ASMSIZE_smc_fcntl               = 0000, G: 
ASMSIZE_smc_font                = 0000, G: 
ASMSIZE_smc_l                   = 0000, G: 
ASMSIZE_smc_lib                 = 0000, G: 
ASMSIZE_smc_sound_bit           = 0000, G: 
ASMSIZE_smc_user                = 0000, G: 
IOCTL_RESET                     = 0000, G: s6b0_1
STDIO_SEEK_SET                  = 0000, G: s6b0_1
TAR__clib_balloc_table_size     = 0000, L: s6b0_1
TAR__clib_fopen_max             = 0000, L: s6b0_1
TAR__clib_open_max              = 0000, L: s6b0_1
TAR__clib_quickexit_stack_size  = 0000, L: s6b0_1
TAR__crt_enable_commandline     = 0000, L: s6b0_1
TAR__crt_enable_nmi             = 0000, L: s6b0_1
TAR__crt_enable_restart         = 0000, L: s6b0_1
TAR__crt_enable_rst             = 0000, L: s6b0_1
TAR__crt_initialize_bss         = 0000, L: s6b0_1
TAR__crt_model                  = 0000, L: s6b0_1
TAR__crt_org_bss                = 0000, L: s6b0_1
TAR__crt_org_code               = 0000, L: s6b0_1
TAR__crt_org_data               = 0000, L: s6b0_1
TAR__register_sp                = 0000, L: s6b0_1
__CLIB_OPT_IMATH                = 0000, L: l_divu_16_16x8
__CLIB_OPT_IMATH                = 0000, L: l_divu_32_32x8
__CLIB_OPT_MULTITHREAD          = 0000, L: asm__fflushall_unlocked
__CLIB_OPT_MULTITHREAD          = 0000, L: asm_vioctl
__CLIB_OPT_MULTITHREAD          = 0000, L: getchar
__CLIB_OPT_MULTITHREAD          = 0000, L: printf
__CLIB_OPT_MULTITHREAD          = 0000, L: putchar_fastcall
__CLIB_OPT_NUM2TXT              = 0000, L: asm_ultoa
__CLIB_OPT_NUM2TXT              = 0000, L: asm_utoa
__CLIB_OPT_NUM2TXT_SELECT       = 0000, L: l_utoa
__CLIB_OPT_STDIO                = 0000, L: asm_fflush_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_fgetc_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_fputc_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_putchar_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_vfprintf_unlocked
__CLIB_OPT_TXT2NUM_SELECT       = 0000, L: l_atou
__CRTDEF                        = 0000, L: s6b0_1
__EOK                           = 0000, G: s6b0_1
__MMAP                          = 0000, L: s6b0_1
__clib_balloc_table_size        = 0000, L: s6b0_1
__clib_fopen_max                = 0000, L: s6b0_1
__clib_open_max                 = 0000, L: s6b0_1
__clib_quickexit_stack_size     = 0000, L: s6b0_1
__crt_initialize_bss            = 0000, L: s6b0_1
__crt_model                     = 0000, L: s6b0_1
__crt_org_bss                   = 0000, L: s6b0_1
__crt_org_code                  = 0000, L: s6b0_1
__crt_org_data                  = 0000, L: s6b0_1
__i_fcntl_fdstruct_2            = 0000, L: character_00_output_stdio_msg_writ
__quickexit_stack_size          = 0000, G: s6b0_1
startup                         = 0000, L: s6b0_1
thrd_success                    = 0000, G: s6b0_1
ASMSIZE_BSS                     = 0001, G: 
ASMSIZE_DATA                    = 0001, G: 
ASMSIZE_data_threads            = 0001, G: 
ASMSIZE_rodata_error_string_end = 0001, G: 
DEFINED_Z88DK_USES_SDCC         = 0001, L: s6b0_1
STDIO_MSG_PUTC                  = 0001, G: s6b0_1
STDIO_SEEK_CUR                  = 0001, G: s6b0_1
TAR__crt_enable_close           = 0001, L: s6b0_1
_CLIB_CFG_ASM_                  = 0001, L: asm__fflushall_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_fflush_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_fgetc_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_fputc_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_putchar_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_ultoa
_CLIB_CFG_ASM_                  = 0001, L: asm_utoa
_CLIB_CFG_ASM_                  = 0001, L: asm_vfprintf_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_vioctl
_CLIB_CFG_ASM_                  = 0001, L: character_00_input_stdio_msg_getc
_CLIB_CFG_ASM_                  = 0001, L: character_00_input_stdio_msg_read
_CLIB_CFG_ASM_                  = 0001, L: character_00_output_ochar_putc_bin
_CLIB_CFG_ASM_                  = 0001, L: console_01_input_terminal_fdriver
_CLIB_CFG_ASM_                  = 0001, L: error_eacces_mc
_CLIB_CFG_ASM_                  = 0001, L: error_ebdfd_mc
_CLIB_CFG_ASM_                  = 0001, L: error_ebdfd_zc
_CLIB_CFG_ASM_                  = 0001, L: error_edom_mc
_CLIB_CFG_ASM_                  = 0001, L: error_einval_mc
_CLIB_CFG_ASM_                  = 0001, L: error_einval_zc
_CLIB_CFG_ASM_                  = 0001, L: error_enolck_mc
_CLIB_CFG_ASM_                  = 0001, L: error_enolck_zc
_CLIB_CFG_ASM_                  = 0001, L: error_enotsup_mc
_CLIB_CFG_ASM_                  = 0001, L: error_enotsup_zc
_CLIB_CFG_ASM_                  = 0001, L: error_erange_mc
_CLIB_CFG_ASM_                  = 0001, L: error_erange_zc
_CLIB_CFG_ASM_                  = 0001, L: getchar
_CLIB_CFG_ASM_                  = 0001, L: l_atou
_CLIB_CFG_ASM_                  = 0001, L: l_divu_16_16x8
_CLIB_CFG_ASM_                  = 0001, L: l_divu_32_32x8
_CLIB_CFG_ASM_                  = 0001, L: l_utoa
_CLIB_CFG_ASM_                  = 0001, L: printf
_CLIB_CFG_ASM_                  = 0001, L: putchar_fastcall
__CLIB_OPT_ERROR                = 0001, L: error_eacces_mc
__CLIB_OPT_ERROR                = 0001, L: error_ebdfd_mc
__CLIB_OPT_ERROR                = 0001, L: error_ebdfd_zc
__CLIB_OPT_ERROR                = 0001, L: error_edom_mc
__CLIB_OPT_ERROR                = 0001, L: error_einval_mc
__CLIB_OPT_ERROR                = 0001, L: error_einval_zc
__CLIB_OPT_ERROR                = 0001, L: error_enolck_mc
__CLIB_OPT_ERROR                = 0001, L: error_enolck_zc
__CLIB_OPT_ERROR                = 0001, L: error_enotsup_mc
__CLIB_OPT_ERROR                = 0001, L: error_enotsup_zc
__CLIB_OPT_ERROR                = 0001, L: error_erange_mc
__CLIB_OPT_ERROR                = 0001, L: error_erange_zc
__EACCES                        = 0001, G: s6b0_1
__SDCC                          = 0001, L: __stdio_nextarg_bc
__SDCC                          = 0001, L: __stdio_nextarg_de
__SDCC                          = 0001, L: __stdio_nextarg_hl
__SDCC                          = 0001, L: __stdio_printf_ii
__SDCC                          = 0001, L: __stdio_printf_number_tail_long
__SDCC                          = 0001, L: __stdio_varg
__SDCC                          = 0001, L: asm__fflushall_unlocked
__SDCC                          = 0001, L: asm_fflush_unlocked
__SDCC                          = 0001, L: asm_fgetc_unlocked
__SDCC                          = 0001, L: asm_fputc_unlocked
__SDCC                          = 0001, L: asm_putchar_unlocked
__SDCC                          = 0001, L: asm_ultoa
__SDCC                          = 0001, L: asm_utoa
__SDCC                          = 0001, L: asm_vfprintf_unlocked
__SDCC                          = 0001, L: asm_vioctl
__SDCC                          = 0001, L: character_00_input_stdio_msg_getc
__SDCC                          = 0001, L: character_00_input_stdio_msg_read
__SDCC                          = 0001, L: character_00_output_ochar_putc_bin
__SDCC                          = 0001, L: console_01_input_terminal_fdriver
__SDCC                          = 0001, L: error_eacces_mc
__SDCC                          = 0001, L: error_ebdfd_mc
__SDCC                          = 0001, L: error_ebdfd_zc
__SDCC                          = 0001, L: error_edom_mc
__SDCC                          = 0001, L: error_einval_mc
__SDCC                          = 0001, L: error_einval_zc
__SDCC                          = 0001, L: error_enolck_mc
__SDCC                          = 0001, L: error_enolck_zc
__SDCC                          = 0001, L: error_enotsup_mc
__SDCC                          = 0001, L: error_enotsup_zc
__SDCC                          = 0001, L: error_erange_mc
__SDCC                          = 0001, L: error_erange_zc
__SDCC                          = 0001, L: getchar
__SDCC                          = 0001, L: l_atou
__SDCC                          = 0001, L: l_divu_16_16x8
__SDCC                          = 0001, L: l_divu_32_32x8
__SDCC                          = 0001, L: l_utoa
__SDCC                          = 0001, L: printf
__SDCC                          = 0001, L: putchar_fastcall
__SDCC_IY                       = 0001, L: __stdio_nextarg_bc
__SDCC_IY                       = 0001, L: __stdio_nextarg_de
__SDCC_IY                       = 0001, L: __stdio_nextarg_hl
__SDCC_IY                       = 0001, L: __stdio_printf_ii
__SDCC_IY                       = 0001, L: __stdio_printf_number_tail_long
__SDCC_IY                       = 0001, L: __stdio_varg
__SDCC_IY                       = 0001, L: asm__fflushall_unlocked
__SDCC_IY                       = 0001, L: asm_fflush_unlocked
__SDCC_IY                       = 0001, L: asm_fgetc_unlocked
__SDCC_IY                       = 0001, L: asm_fputc_unlocked
__SDCC_IY                       = 0001, L: asm_putchar_unlocked
__SDCC_IY                       = 0001, L: asm_ultoa
__SDCC_IY                       = 0001, L: asm_utoa
__SDCC_IY                       = 0001, L: asm_vfprintf_unlocked
__SDCC_IY                       = 0001, L: asm_vioctl
__SDCC_IY                       = 0001, L: character_00_input_stdio_msg_getc
__SDCC_IY                       = 0001, L: character_00_input_stdio_msg_read
__SDCC_IY                       = 0001, L: character_00_output_ochar_putc_bin
__SDCC_IY                       = 0001, L: console_01_input_terminal_fdriver
__SDCC_IY                       = 0001, L: error_eacces_mc
__SDCC_IY                       = 0001, L: error_ebdfd_mc
__SDCC_IY                       = 0001, L: error_ebdfd_zc
__SDCC_IY                       = 0001, L: error_edom_mc
__SDCC_IY                       = 0001, L: error_einval_mc
__SDCC_IY                       = 0001, L: error_einval_zc
__SDCC_IY                       = 0001, L: error_enolck_mc
__SDCC_IY                       = 0001, L: error_enolck_zc
__SDCC_IY                       = 0001, L: error_enotsup_mc
__SDCC_IY                       = 0001, L: error_enotsup_zc
__SDCC_IY                       = 0001, L: error_erange_mc
__SDCC_IY                       = 0001, L: error_erange_zc
__SDCC_IY                       = 0001, L: getchar
__SDCC_IY                       = 0001, L: l_atou
__SDCC_IY                       = 0001, L: l_divu_16_16x8
__SDCC_IY                       = 0001, L: l_divu_32_32x8
__SDCC_IY                       = 0001, L: l_utoa
__SDCC_IY                       = 0001, L: printf
__SDCC_IY                       = 0001, L: putchar_fastcall
__crt_enable_close              = 0001, L: s6b0_1
mtx_plain                       = 0001, G: s6b0_1
thrd_error                      = 0001, G: s6b0_1
ASMSIZE_bss_error               = 0002, G: 
ASMSIZE_data_alloc_malloc       = 0002, G: 
ASMSIZE_data_fcntl              = 0002, G: 
ASMSIZE_data_fcntl_stdio_heap_tail = 0002, G: 
STDIO_MSG_WRIT                  = 0002, G: s6b0_1
STDIO_SEEK_END                  = 0002, G: s6b0_1
TAR__clib_exit_stack_size       = 0002, L: s6b0_1
__EBADF                         = 0002, G: s6b0_1
__clib_exit_stack_size          = 0002, L: s6b0_1
__exit_stack_size               = 0002, G: s6b0_1
mtx_recursive                   = 0002, G: s6b0_1
thrd_nomem                      = 0002, G: s6b0_1
ASMSIZE_code_crt_return         = 0003, G: 
STDIO_MSG_GETC                  = 0003, G: s6b0_1
__EBDFD                         = 0003, G: s6b0_1
__fcntl_fdtbl_size              = 0003, G: s6b0_1
STDIO_MSG_EATC                  = 0004, G: s6b0_1
__EDOM                          = 0004, G: s6b0_1
mtx_timed                       = 0004, G: s6b0_1
thrd_busy                       = 0004, G: s6b0_1
STDIO_MSG_READ                  = 0005, G: s6b0_1
__EFBIG                         = 0005, G: s6b0_1
ASMSIZE_bss_stdlib              = 0006, G: 
ASMSIZE_code_adt_p_forward_list = 0006, G: 
ASMSIZE_data_fcntl_fdtable_body = 0006, G: 
ASMSIZE_data_fcntl_stdio_heap_head = 0006, G: 
STDIO_MSG_SEEK                  = 0006, G: s6b0_1
__EINVAL                        = 0006, G: s6b0_1
ASMSIZE_code_crt_main           = 0007, G: 
STDIO_MSG_ICTL                  = 0007, G: s6b0_1
__EMFILE                        = 0007, G: s6b0_1
STDIO_MSG_FLSH                  = 0008, G: s6b0_1
__ENFILE                        = 0008, G: s6b0_1
thrd_timedout                   = 0008, G: s6b0_1
ASMSIZE_code_ctype              = 0009, G: 
STDIO_MSG_CLOS                  = 0009, G: s6b0_1
__ENOLCK                        = 0009, G: s6b0_1
CHAR_LF                         = 000A, L: character_00_input_stdio_msg_read
CHAR_LF                         = 000A, L: character_00_output_ochar_putc_bin
__ENOMEM                        = 000A, G: s6b0_1
__ENOTSUP                       = 000B, G: s6b0_1
__EOVERFLOW                     = 000C, G: s6b0_1
CHAR_CR                         = 000D, L: character_00_input_stdio_msg_getc
CHAR_CR                         = 000D, L: character_00_output_ochar_putc_bin
__ERANGE                        = 000D, G: s6b0_1
__ESTAT                         = 000E, G: s6b0_1
ICHAR_MSG_GETC                  = 000F, G: s6b0_1
ITERM_MSG_GETC                  = 000F, G: s6b0_1
__EAGAIN                        = 000F, G: s6b0_1
__EWOULDBLOCK                   = 000F, G: s6b0_1
ITERM_MSG_INTERRUPT             = 0010, G: s6b0_1
ITERM_MSG_PUTC                  = 0011, G: s6b0_1
ITERM_MSG_PRINT_CURSOR          = 0012, G: s6b0_1
ITERM_MSG_ERASE_CURSOR          = 0013, G: s6b0_1
ITERM_MSG_ERASE_CURSOR_PWD      = 0014, G: s6b0_1
ITERM_MSG_BS                    = 0015, G: s6b0_1
ITERM_MSG_BS_PWD                = 0016, G: s6b0_1
ITERM_MSG_READLINE_BEGIN        = 0017, G: s6b0_1
ITERM_MSG_READLINE_END          = 0018, G: s6b0_1
ITERM_MSG_BELL                  = 0019, G: s6b0_1
OCHAR_MSG_PUTC_BIN              = 001E, G: s6b0_1
OTERM_MSG_PUTC                  = 001E, G: s6b0_1
ASMSIZE_code_threads_mutex      = 001F, G: 
OTERM_MSG_TTY                   = 001F, G: s6b0_1
OCHAR_MSG_PUTC                  = 0020, G: s6b0_1
OTERM_MSG_PRINTC                = 0020, G: s6b0_1
OTERM_MSG_SCROLL                = 0021, G: s6b0_1
ASMSIZE_code_alloc_malloc       = 0022, G: 
OTERM_MSG_CLS                   = 0022, G: s6b0_1
OTERM_MSG_PAUSE                 = 0023, G: s6b0_1
ASMSIZE_code_crt_init           = 0024, G: 
OTERM_MSG_BELL                  = 0024, G: s6b0_1
ASMSIZE_code_driver_general     = 0025, G: 
OTERM_MSG_PSCROLL               = 0025, G: s6b0_1
ASMSIZE_code_string             = 002A, G: 
ASMSIZE_rodata_error_strings    = 0036, G: 
ASMSIZE_data_stdio              = 0039, G: 
__Start                         = 006B, G: s6b0_1
ASMSIZE_code_compiler           = 006E, G: 
ASMHEAD_code_crt_init           = 0071, G: 
ASMSIZE_CODE                    = 0071, G: 
ASMTAIL_CODE                    = 0071, G: 
ASMSIZE_data_fcntl_stdio_heap_body = 0078, G: 
ASMSIZE_code_stdlib             = 007F, G: 
TAR__clib_stdio_heap_size       = 0080, L: s6b0_1
__clib_stdio_heap_size          = 0080, L: s6b0_1
ASMSIZE_code_error              = 0081, G: 
ASMSIZE_code_driver_character_output = 0089, G: 
ASMHEAD_code_crt_main           = 0095, G: 
ASMTAIL_code_crt_init           = 0095, G: 
ASMSIZE_code_math               = 009A, G: 
__Exit                          = 009B, G: s6b0_1
ASMHEAD_code_crt_exit           = 009C, G: 
ASMHEAD_code_crt_return         = 009C, G: 
ASMSIZE_code_fcntl              = 009C, G: 
ASMTAIL_code_crt_exit           = 009C, G: 
ASMTAIL_code_crt_main           = 009C, G: 
ASMHEAD_code_adt_b_array        = 009F, G: 
ASMHEAD_code_adt_b_vector       = 009F, G: 
ASMHEAD_code_adt_ba_priority_queue = 009F, G: 
ASMHEAD_code_adt_ba_stack       = 009F, G: 
ASMHEAD_code_adt_bv_priority_queue = 009F, G: 
ASMHEAD_code_adt_bv_stack       = 009F, G: 
ASMHEAD_code_adt_p_forward_list = 009F, G: 
ASMHEAD_code_clib               = 009F, G: 
ASMHEAD_code_crt_common         = 009F, G: 
ASMHEAD_code_driver             = 009F, G: 
ASMHEAD_code_font               = 009F, G: 
ASMTAIL_code_adt_b_array        = 009F, G: 
ASMTAIL_code_adt_b_vector       = 009F, G: 
ASMTAIL_code_adt_ba_priority_queue = 009F, G: 
ASMTAIL_code_adt_ba_stack       = 009F, G: 
ASMTAIL_code_adt_bv_priority_queue = 009F, G: 
ASMTAIL_code_adt_bv_stack       = 009F, G: 
ASMTAIL_code_clib               = 009F, G: 
ASMTAIL_code_crt_common         = 009F, G: 
ASMTAIL_code_crt_return         = 009F, G: 
ASMTAIL_code_driver             = 009F, G: 
ASMTAIL_code_font               = 009F, G: 
asm_p_forward_list_front        = 009F, G: asm_p_forward_list_front
asm_p_forward_list_next         = 009F, G: asm_p_forward_list_next
ASMHEAD_code_adt_p_forward_list_alt = 00A5, G: 
ASMHEAD_code_adt_p_list         = 00A5, G: 
ASMHEAD_code_adt_p_queue        = 00A5, G: 
ASMHEAD_code_adt_p_stack        = 00A5, G: 
ASMHEAD_code_adt_w_array        = 00A5, G: 
ASMHEAD_code_adt_w_vector       = 00A5, G: 
ASMHEAD_code_adt_wa_priority_queue = 00A5, G: 
ASMHEAD_code_adt_wa_stack       = 00A5, G: 
ASMHEAD_code_adt_wv_priority_queue = 00A5, G: 
ASMHEAD_code_adt_wv_stack       = 00A5, G: 
ASMHEAD_code_alloc_balloc       = 00A5, G: 
ASMHEAD_code_alloc_malloc       = 00A5, G: 
ASMTAIL_code_adt_p_forward_list = 00A5, G: 
ASMTAIL_code_adt_p_forward_list_alt = 00A5, G: 
ASMTAIL_code_adt_p_list         = 00A5, G: 
ASMTAIL_code_adt_p_queue        = 00A5, G: 
ASMTAIL_code_adt_p_stack        = 00A5, G: 
ASMTAIL_code_adt_w_array        = 00A5, G: 
ASMTAIL_code_adt_w_vector       = 00A5, G: 
ASMTAIL_code_adt_wa_priority_queue = 00A5, G: 
ASMTAIL_code_adt_wa_stack       = 00A5, G: 
ASMTAIL_code_adt_wv_priority_queue = 00A5, G: 
ASMTAIL_code_adt_wv_stack       = 00A5, G: 
ASMTAIL_code_alloc_balloc       = 00A5, G: 
asm_heap_init                   = 00A5, G: asm_heap_init
ASMHEAD_code_alloc_obstack      = 00C7, G: 
ASMHEAD_code_arch               = 00C7, G: 
ASMHEAD_code_bifrost2           = 00C7, G: 
ASMHEAD_code_bifrost_h          = 00C7, G: 
ASMHEAD_code_bifrost_l          = 00C7, G: 
ASMHEAD_code_compress_zx7       = 00C7, G: 
ASMHEAD_code_ctype              = 00C7, G: 
ASMTAIL_code_alloc_malloc       = 00C7, G: 
ASMTAIL_code_alloc_obstack      = 00C7, G: 
ASMTAIL_code_arch               = 00C7, G: 
ASMTAIL_code_bifrost2           = 00C7, G: 
ASMTAIL_code_bifrost_h          = 00C7, G: 
ASMTAIL_code_bifrost_l          = 00C7, G: 
ASMTAIL_code_compress_zx7       = 00C7, G: 
asm_tolower                     = 00C7, G: asm_tolower
ASMHEAD_code_driver_general     = 00D0, G: 
ASMTAIL_code_ctype              = 00D0, G: 
console_01_input_terminal_fdriver = 00D0, G: console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = 00D0, G: console_01_output_terminal_fdriver
ASMSIZE_code_driver_character_input = 00D8, G: 
device_reset_error              = 00D8, G: device_reset_error
device_return_error             = 00E1, G: device_return_error
device_set_error                = 00E8, G: device_set_error
ASMSIZE_code_l                  = 00ED, G: 
ASMHEAD_code_driver_character_input = 00F5, G: 
ASMTAIL_code_driver_general     = 00F5, G: 
zalt_00_input_sysctrl           = 00F5, G: zalt_00_input_sysctrl_driver
zalt_00_input_sysctrl_ichar_msg_getc = 00FC, L: zalt_00_input_sysctrl_driver
IOCTL_OTERM_CLS                 = 0102, G: s6b0_1
character_00_input              = 0104, G: character_00_input
character_00_input_stdio_msg_eatc = 012A, G: character_00_input_stdio_msg_eatc
eatc_loop                       = 012F, L: character_00_input_stdio_msg_eatc
eatc_exit                       = 0149, L: character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_getc = 014C, G: character_00_input_stdio_msg_getc
reject_cr                       = 0154, L: character_00_input_stdio_msg_getc
cr                              = 0165, L: character_00_input_stdio_msg_getc
character_00_input_stdio_msg_ictl = 016C, G: character_00_input_stdio_msg_ictl
_ictl_messages                  = 017A, L: character_00_input_stdio_msg_ictl
exit_error                      = 017F, L: character_00_input_stdio_msg_ictl
character_00_input_stdio_msg_read = 0181, G: character_00_input_stdio_msg_read
read_loop                       = 0182, L: character_00_input_stdio_msg_read
read_exit                       = 0198, L: character_00_input_stdio_msg_read
read_exit_error                 = 01A0, L: character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = 01AB, G: character_00_input_stdio_msg_seek
seek_loop                       = 01B7, L: character_00_input_stdio_msg_seek
ASMHEAD_code_driver_character_output = 01CD, G: 
ASMTAIL_code_driver_character_input = 01CD, G: 
zalt_00_output_sysctrl          = 01CD, G: zalt_00_output_sysctrl_driver
zalt_00_output_sysctrl_ochar_msg_putc = 01D4, L: zalt_00_output_sysctrl_driver
character_00_output             = 01D9, G: character_00_output
character_00_output_ochar_msg_putc_bin = 01FF, G: character_00_output_ochar_putc_bin
TAR__crt_stack_size             = 0200, L: s6b0_1
__crt_stack_size                = 0200, L: s6b0_1
IOCTL_ITERM_TIE                 = 0201, G: s6b0_1
IOCTL_OTERM_RESET_SCROLL        = 0202, G: s6b0_1
putchar                         = 0215, L: character_00_output_ochar_putc_bin
character_00_output_stdio_msg_ictl = 0219, G: character_00_output_stdio_msg_ictl
exit_error                      = 0227, L: character_00_output_stdio_msg_ictl
character_00_output_stdio_msg_putc = 0229, G: character_00_output_stdio_msg_putc
putc_loop                       = 022D, L: character_00_output_stdio_msg_putc
character_00_output_stdio_msg_writ = 023D, G: character_00_output_stdio_msg_writ
writ_loop                       = 0241, L: character_00_output_stdio_msg_writ
writ_end                        = 0252, L: character_00_output_stdio_msg_writ
ASMHEAD_code_driver_memstream   = 0256, G: 
ASMHEAD_code_driver_terminal_input = 0256, G: 
ASMHEAD_code_driver_terminal_output = 0256, G: 
ASMHEAD_code_driver_tty         = 0256, G: 
ASMHEAD_code_error              = 0256, G: 
ASMTAIL_code_driver_character_output = 0256, G: 
ASMTAIL_code_driver_memstream   = 0256, G: 
ASMTAIL_code_driver_terminal_input = 0256, G: 
ASMTAIL_code_driver_terminal_output = 0256, G: 
ASMTAIL_code_driver_tty         = 0256, G: 
error_enolck_zc                 = 0258, G: error_enolck_zc
error_enolck_mc                 = 025E, G: error_enolck_mc
errno_mc                        = 0268, G: errno_mc
error_mc                        = 0273, G: error_mc
__ch_system                     = 027C, G: s6b0_1
error_zc                        = 027C, G: error_zc
error_einval_zc                 = 0284, G: error_einval_zc
error_einval_mc                 = 028A, G: error_einval_mc
error_erange_zc                 = 0290, G: error_erange_zc
error_erange_mc                 = 0296, G: error_erange_mc
error_eacces_mc                 = 029C, G: error_eacces_mc
error_znc                       = 02A4, G: error_znc
error_divide_by_zero_mc         = 02AB, G: error_divide_by_zero_mc
error_edom_mc                   = 02AB, G: error_edom_mc
error_enotsup_zc                = 02B1, G: error_enotsup_zc
error_enotsup_mc                = 02B7, G: error_enotsup_mc
error_lzc                       = 02BD, G: error_lzc
error_lznc                      = 02C4, G: error_lznc
error_ebdfd_zc                  = 02CB, G: error_ebdfd_zc
error_ebdfd_mc                  = 02D2, G: error_ebdfd_mc
ASMHEAD_code_fcntl              = 02D7, G: 
ASMTAIL_code_error              = 02D7, G: 
asm_vioctl                      = 02D7, G: asm_vioctl
critical_section                = 02D7, L: asm_vioctl
find_driver_loop                = 02E5, L: asm_vioctl
deliver_message                 = 02F5, L: asm_vioctl
IOCTL_ITERM_SET_EDITBUF         = 0301, G: s6b0_1
IOCTL_OTERM_SET_WINDOW_COORD    = 0302, G: s6b0_1
__bool                          = 0309, L: asm_vioctl
__setf                          = 0310, L: asm_vioctl
forward_ioctl                   = 031B, L: asm_vioctl
__getf                          = 0324, L: asm_vioctl
asm_vioctl_driver               = 032F, G: asm_vioctl
__fcntl_fdchain_descend         = 034B, G: __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_2      = 0352, G: __fcntl_fdstruct_from_fd_2
__fcntl_fdstruct_from_fd_1      = 035D, G: __fcntl_fdstruct_from_fd_1
ASMHEAD_code_font_fzx           = 0373, G: 
ASMHEAD_code_fp_genmath         = 0373, G: 
ASMHEAD_code_fp_math48          = 0373, G: 
ASMHEAD_code_input              = 0373, G: 
ASMHEAD_code_inttypes           = 0373, G: 
ASMHEAD_code_l                  = 0373, G: 
ASMTAIL_code_fcntl              = 0373, G: 
ASMTAIL_code_font_fzx           = 0373, G: 
ASMTAIL_code_fp_genmath         = 0373, G: 
ASMTAIL_code_fp_math48          = 0373, G: 
ASMTAIL_code_input              = 0373, G: 
ASMTAIL_code_inttypes           = 0373, G: 
l_jpix                          = 0373, G: l_jpix
__thread_block_timeout          = 0376, G: s6b0_1
__thread_context_switch         = 0376, G: s6b0_1
__thread_unblock                = 0376, G: s6b0_1
l_ret                           = 0376, G: l_ret
IOCTL_ITERM_GET_EDITBUF         = 0381, G: s6b0_1
IOCTL_OTERM_GET_WINDOW_COORD    = 0382, G: s6b0_1
l_setmem_hl                     = 0397, G: l_setmem_hl
l_atou                          = 0398, G: l_atou
l_small_atou                    = 0398, G: l_small_atou
loop                            = 039D, L: l_small_atou
overflow                        = 03BD, L: l_small_atou
l_neg_hl                        = 03C0, G: l_neg_hl
l_utod_hl                       = 03C8, G: l_utod_hl
l_small_utoa                    = 03CF, G: l_small_utoa
l_utoa                          = 03CF, G: l_utoa
l_utoa_lib                      = 03E2, G: l_small_utoa
no_leading_zeroes               = 03E4, L: l_small_utoa
leading_zeroes                  = 03F0, L: l_small_utoa
write                           = 03F3, L: l_small_utoa
write1s                         = 03F8, L: l_small_utoa
divide                          = 03FE, L: l_small_utoa
divloop                         = 0400, L: l_small_utoa
IOCTL_OTERM_SET_WINDOW_RECT     = 0402, G: s6b0_1
l_utod_de                       = 0407, G: l_utod_de
l_addu_hl_de                    = 040E, G: l_addu_hl_de
l_maxu_bc_hl                    = 0414, G: l_maxu_bc_hl
bc_larger                       = 041C, L: l_maxu_bc_hl
l_neg_dehl                      = 041F, G: l_neg_dehl
l_addu_hl_bc                    = 0431, G: l_addu_hl_bc
l_jphl                          = 0437, G: l_jphl
l_num2char                      = 0438, G: l_num2char
alpha                           = 043F, L: l_num2char
l_valid_base                    = 0442, G: l_valid_base
l_decu_dehl                     = 044F, G: l_decu_dehl
msw                             = 0455, L: l_decu_dehl
limit                           = 045B, L: l_decu_dehl
ASMHEAD_code_l_sccz80           = 0460, G: 
ASMHEAD_code_l_sdcc             = 0460, G: 
ASMHEAD_code_locale             = 0460, G: 
ASMHEAD_code_math               = 0460, G: 
ASMTAIL_code_l                  = 0460, G: 
ASMTAIL_code_l_sccz80           = 0460, G: 
ASMTAIL_code_l_sdcc             = 0460, G: 
ASMTAIL_code_locale             = 0460, G: 
l_divu_32_32x8                  = 0460, G: l_divu_32_32x8
l0_divu_32_32x8                 = 0461, G: l_divu_32_32x8
l_small_divu_32_32x32           = 0473, G: l_small_divu_32_32x32
l0_small_divu_32_32x32          = 0479, G: l_small_divu_32_32x32
IOCTL_OTERM_GET_WINDOW_RECT     = 0482, G: s6b0_1
loop_0                          = 048A, L: l_small_divu_32_32x32
loop_1                          = 04A6, L: l_small_divu_32_32x32
divide_zero                     = 04BB, L: l_small_divu_32_32x32
l_small_divu_16_16x16           = 04C0, G: l_small_divu_16_16x16
l0_small_divu_16_16x16          = 04C4, G: l_small_divu_16_16x16
divisor_sixteen_bit             = 04C8, L: l_small_divu_16_16x16
loop_16_0                       = 04CE, L: l_small_divu_16_16x16
loop_16_1                       = 04D6, L: l_small_divu_16_16x16
l_divu_16_16x8                  = 04E0, G: l_divu_16_16x8
l_small_divu_16_16x8            = 04E0, G: l_small_divu_16_16x16
l0_divu_16_16x8                 = 04E4, G: l_divu_16_16x8
l0_small_divu_16_16x8           = 04E4, G: l_small_divu_16_16x16
loop_8_0                        = 04E8, L: l_small_divu_16_16x16
loop_8_2                        = 04EF, L: l_small_divu_16_16x16
loop_8_1                        = 04F1, L: l_small_divu_16_16x16
divide_zero                     = 04F6, L: l_small_divu_16_16x16
ASMHEAD_code_nirvanam           = 04FA, G: 
ASMHEAD_code_nirvanap           = 04FA, G: 
ASMHEAD_code_setjmp             = 04FA, G: 
ASMHEAD_code_sound_bit          = 04FA, G: 
ASMHEAD_code_stdio              = 04FA, G: 
ASMTAIL_code_math               = 04FA, G: 
ASMTAIL_code_nirvanam           = 04FA, G: 
ASMTAIL_code_nirvanap           = 04FA, G: 
ASMTAIL_code_setjmp             = 04FA, G: 
ASMTAIL_code_sound_bit          = 04FA, G: 
_getchar                        = 04FA, G: getchar
_getchar_unlocked               = 04FA, G: getchar_unlocked
asm_getchar_unlocked            = 04FA, G: asm_getchar_unlocked
asm0_fgetc_unlocked             = 0501, G: asm_fgetc_unlocked
asm_fgetc_unlocked              = 0501, G: asm_fgetc_unlocked
IOCTL_OTERM_SET_CURSOR_COORD    = 0502, G: s6b0_1
_printf                         = 050C, G: printf
_printf_unlocked                = 050C, G: printf_unlocked
asm_printf_unlocked             = 050C, G: asm_printf_unlocked
_putchar_fastcall               = 0514, G: putchar_fastcall
_putchar_unlocked_fastcall      = 0514, G: putchar_unlocked_fastcall
asm_putchar_unlocked            = 0514, G: asm_putchar_unlocked
asm0_putchar_unlocked           = 0518, G: asm_putchar_unlocked
asm0_fputc_unlocked             = 051C, G: asm_fputc_unlocked
asm_fputc_unlocked              = 051C, G: asm_fputc_unlocked
asm_vprintf_unlocked            = 052E, G: asm_vprintf_unlocked
asm1_vfprintf_unlocked          = 0535, G: asm_vfprintf_unlocked
asm_vfprintf_unlocked           = 0535, G: asm_vfprintf_unlocked
asm0_vfprintf_unlocked          = 0539, G: asm_vfprintf_unlocked
format_loop                     = 0544, L: asm_vfprintf_unlocked
__format_loop                   = 0546, L: asm_vfprintf_unlocked
format_end                      = 0568, L: asm_vfprintf_unlocked
flag_chars                      = 0575, L: asm_vfprintf_unlocked
interpret                       = 057F, L: asm_vfprintf_unlocked
IOCTL_OTERM_GET_CURSOR_COORD    = 0582, G: s6b0_1
flags                           = 0582, L: asm_vfprintf_unlocked
flags_id                        = 0589, L: asm_vfprintf_unlocked
width                           = 0593, L: asm_vfprintf_unlocked
width_positive                  = 05A9, L: asm_vfprintf_unlocked
flag_found                      = 05AE, L: asm_vfprintf_unlocked
width_from_format               = 05B3, L: asm_vfprintf_unlocked
precision                       = 05C0, L: asm_vfprintf_unlocked
precision_positive              = 05E4, L: asm_vfprintf_unlocked
precision_from_format           = 05E9, L: asm_vfprintf_unlocked
end_precision                   = 05F4, L: asm_vfprintf_unlocked
length_modifier                 = 05F6, L: asm_vfprintf_unlocked
converter_specifier             = 05F9, L: asm_vfprintf_unlocked
IOCTL_OTERM_GET_OTERM           = 0602, G: s6b0_1
ASMSIZE_code_stdio              = 0606, G: 
common_spec                     = 060D, L: asm_vfprintf_unlocked
unrecognized                    = 0615, L: asm_vfprintf_unlocked
long_spec                       = 061E, L: asm_vfprintf_unlocked
printf_return_is_4              = 0626, L: asm_vfprintf_unlocked
printf_I                        = 062B, L: asm_vfprintf_unlocked
printf_return_is_2              = 0632, L: asm_vfprintf_unlocked
printf_invoke_flags             = 0635, L: asm_vfprintf_unlocked
skip_00                         = 063D, L: asm_vfprintf_unlocked
skip_11                         = 0645, L: asm_vfprintf_unlocked
printf_invoke                   = 064A, L: asm_vfprintf_unlocked
match_con                       = 066A, L: asm_vfprintf_unlocked
match_ret                       = 0676, L: asm_vfprintf_unlocked
acon_tbl                        = 067E, L: asm_vfprintf_unlocked
rcon_tbl                        = 0687, L: asm_vfprintf_unlocked
lcon_tbl                        = 06AC, L: asm_vfprintf_unlocked
printf_return_4                 = 06D1, L: asm_vfprintf_unlocked
_return_join_4                  = 06D2, L: asm_vfprintf_unlocked
printf_return_2                 = 06D6, L: asm_vfprintf_unlocked
_return_join_2                  = 06D7, L: asm_vfprintf_unlocked
error_format_precision          = 06E5, L: asm_vfprintf_unlocked
error_format_width              = 06E6, L: asm_vfprintf_unlocked
error_stream                    = 06E9, L: asm_vfprintf_unlocked
__error_stream                  = 06EC, L: asm_vfprintf_unlocked
error_printf_converter          = 06FA, L: asm_vfprintf_unlocked
__stdio_length_modifier         = 06FF, G: __stdio_length_modifier
IOCTL_OTERM_SCROLL              = 0702, G: s6b0_1
lm_loop                         = 0705, L: __stdio_length_modifier
lm_found                        = 070F, L: __stdio_length_modifier
lm_double                       = 0718, L: __stdio_length_modifier
lm_chars                        = 0721, L: __stdio_length_modifier
__stdio_nextarg_de              = 072D, G: __stdio_nextarg_de
__stdio_varg_2                  = 0732, G: __stdio_varg
__stdio_verify_input            = 0739, G: __stdio_verify_input
errors                          = 0756, L: __stdio_verify_input
asm_fflush_unlocked             = 075E, G: asm_fflush_unlocked
asm0_fflush_unlocked            = 0765, G: asm_fflush_unlocked
asm1_fflush_unlocked            = 0765, G: asm_fflush_unlocked
last_was_read                   = 0772, L: asm_fflush_unlocked
forward_flush                   = 078F, L: asm_fflush_unlocked
last_was_write                  = 078F, L: asm_fflush_unlocked
asm__fflushall_unlocked         = 079A, G: asm__fflushall_unlocked
file_loop                       = 079D, L: asm__fflushall_unlocked
__stdio_verify_output           = 07AB, G: __stdio_verify_output
errors                          = 07C8, L: __stdio_verify_output
__stdio_recv_input_raw_getc     = 07D0, G: __stdio_recv_input_raw_getc
_no_ungetc_gc                   = 07EE, L: __stdio_recv_input_raw_getc
stream_error                    = 07FD, L: __stdio_recv_input_raw_getc
IOCTL_OTERM_FONT                = 0802, G: s6b0_1
__stdio_printf_bb               = 0802, G: __stdio_printf_bb
__stdio_printf_c                = 0808, G: __stdio_printf_c
right_justify                   = 0812, L: __stdio_printf_c
output_char                     = 0819, L: __stdio_printf_c
left_justify                    = 081F, L: __stdio_printf_c
width_padding                   = 0826, L: __stdio_printf_c
__stdio_nextarg_hl              = 082D, G: __stdio_nextarg_hl
__stdio_printf_d                = 0832, G: __stdio_printf_d
__stdio_printf_ii               = 0838, G: __stdio_printf_ii
padding_required                = 086D, L: __stdio_printf_ii
right_justify                   = 0873, L: __stdio_printf_ii
left_justify                    = 087E, L: __stdio_printf_ii
write_octet                     = 088B, L: __stdio_printf_ii
__stdio_printf_lbb              = 0894, G: __stdio_printf_lbb
__stdio_printf_ld               = 089A, G: __stdio_printf_ld
__stdio_printf_ln               = 08A0, G: __stdio_printf_ln
__stdio_printf_lo               = 08B5, G: __stdio_printf_lo
__stdio_printf_lp               = 08BB, G: __stdio_printf_lp
precision_defined               = 08C7, L: __stdio_printf_lp
__stdio_printf_lu               = 08D5, G: __stdio_printf_lu
__stdio_printf_lx               = 08DB, G: __stdio_printf_lx
__stdio_printf_n                = 08E1, G: __stdio_printf_n
__stdio_printf_number_tail_int  = 08F4, G: __stdio_printf_number_tail_int
__stdio_printf_number_tail_uint = 0908, G: __stdio_printf_number_tail_int
signed_join                     = 090F, L: __stdio_printf_number_tail_int
__stdio_printf_number_tail_zero = 091C, G: __stdio_printf_number_tail
__stdio_printf_number_tail      = 0929, G: __stdio_printf_number_tail
internal_required               = 093D, L: __stdio_printf_number_tail
no_sign                         = 0945, L: __stdio_printf_number_tail
no_base_indicator               = 0953, L: __stdio_printf_number_tail
external_required               = 095B, L: __stdio_printf_number_tail
number_zero                     = 095C, L: __stdio_printf_number_tail
spacing_ok                      = 096C, L: __stdio_printf_number_tail
right_justify                   = 0973, L: __stdio_printf_number_tail
out_internal                    = 097B, L: __stdio_printf_number_tail
hex_base                        = 099B, L: __stdio_printf_number_tail
octal_base                      = 09A6, L: __stdio_printf_number_tail
no_base_indicator_2             = 09A7, L: __stdio_printf_number_tail
no_prefix_chars                 = 09B4, L: __stdio_printf_number_tail
stream_error                    = 09B9, L: __stdio_printf_number_tail
num_is_zero                     = 09CE, L: __stdio_printf_number_tail
left_justify                    = 09D2, L: __stdio_printf_number_tail
__stdio_printf_number_tail_long = 09DC, G: __stdio_printf_number_tail_long
__stdio_printf_number_tail_ulong = 09F6, G: __stdio_printf_number_tail_long
IOCTL_OTERM_FZX_SET_PAPER_COORD = 0A02, G: s6b0_1
signed_join                     = 0A03, L: __stdio_printf_number_tail_long
zero                            = 0A1B, L: __stdio_printf_number_tail_long
__stdio_printf_o                = 0A1F, G: __stdio_printf_o
__stdio_printf_p                = 0A25, G: __stdio_printf_p
precision_defined               = 0A31, L: __stdio_printf_p
__stdio_printf_s                = 0A3F, G: __stdio_printf_s
string_valid                    = 0A49, L: __stdio_printf_s
precision_specified             = 0A52, L: __stdio_printf_s
padding_required                = 0A5E, L: __stdio_printf_s
right_justify                   = 0A64, L: __stdio_printf_s
left_justify                    = 0A6F, L: __stdio_printf_s
null_s                          = 0A7B, L: __stdio_printf_s
IOCTL_OTERM_FZX_GET_PAPER_COORD = 0A82, G: s6b0_1
__stdio_printf_sign             = 0A82, G: __stdio_printf_sign
__stdio_printf_sign_0           = 0A85, G: __stdio_printf_sign
not_negative                    = 0A8C, L: __stdio_printf_sign
not_plus                        = 0A93, L: __stdio_printf_sign
__stdio_printf_u                = 0A99, G: __stdio_printf_u
__stdio_printf_x                = 0A9F, G: __stdio_printf_x
__stdio_printf_padding_precision_hl = 0AA5, G: __stdio_send_output
__stdio_printf_padding_precision = 0AA7, G: __stdio_send_output
__stdio_printf_padding_precision_bc = 0AA7, G: __stdio_send_output
__stdio_printf_padding_width_hl = 0AAB, G: __stdio_send_output
__stdio_printf_padding_width    = 0AAD, G: __stdio_send_output
__stdio_printf_padding_width_bc = 0AAD, G: __stdio_send_output
__stdio_send_output_chars       = 0AAF, G: __stdio_send_output
__stdio_send_output_buffer      = 0AB6, G: __stdio_send_output
__stdio_send_output             = 0ABB, G: __stdio_send_output
exit                            = 0ACB, L: __stdio_send_output
error_detected                  = 0AD0, L: __stdio_send_output
__stdio_send_output_raw_chars   = 0ADA, G: __stdio_send_output_raw
__stdio_send_output_raw_chars_unchecked = 0ADE, G: __stdio_send_output_raw
__stdio_send_output_raw_buffer  = 0AE2, G: __stdio_send_output_raw
__stdio_send_output_raw_buffer_unchecked = 0AE6, G: __stdio_send_output_raw
__stdio_send_output_raw         = 0AE8, G: __stdio_send_output_raw
error_detected                  = 0AF0, L: __stdio_send_output_raw
return_zero                     = 0AF5, L: __stdio_send_output_raw
__stdio_nextarg_bc              = 0AFB, G: __stdio_nextarg_bc
ASMHEAD_code_stdlib             = 0B00, G: 
ASMTAIL_code_stdio              = 0B00, G: 
asm_exit                        = 0B00, G: asm_exit
IOCTL_OTERM_FZX_SET_PAPER_RECT  = 0B02, G: s6b0_1
asm0_exit                       = 0B03, G: asm_exit
loop                            = 0B0F, L: asm_exit
asm_ultoa                       = 0B21, G: asm_ultoa
asm0_ultoa                      = 0B27, G: asm_ultoa
asm1_ultoa                      = 0B2C, G: asm_ultoa
compute_lp                      = 0B2E, L: asm_ultoa
write_lp                        = 0B41, L: asm_ultoa
asm2_ultoa                      = 0B48, G: asm_ultoa
exit_buf_is_null                = 0B48, L: asm_ultoa
asm3_ultoa                      = 0B4E, G: asm_ultoa
exit_radix_no_good              = 0B4E, L: asm_ultoa
asm_utoa                        = 0B54, G: asm_utoa
asm0_utoa                       = 0B59, G: asm_utoa
asm1_utoa                       = 0B5F, G: asm_utoa
compute_lp                      = 0B66, L: asm_utoa
write_lp                        = 0B78, L: asm_utoa
ASMHEAD_code_string             = 0B7F, G: 
ASMTAIL_code_stdlib             = 0B7F, G: 
asm_strchrnul                   = 0B7F, G: asm_strchrnul
loop                            = 0B7F, L: asm_strchrnul
IOCTL_OTERM_FZX_GET_PAPER_RECT  = 0B82, G: s6b0_1
asm_strnlen                     = 0B89, G: asm_strnlen
notend                          = 0B96, L: asm_strnlen
asm__memlwr                     = 0B99, G: asm__memlwr
loop                            = 0B9D, L: asm__memlwr
ASMHEAD_code_temp_sp1           = 0BA9, G: 
ASMHEAD_code_threads            = 0BA9, G: 
ASMHEAD_code_threads_mutex      = 0BA9, G: 
ASMTAIL_code_string             = 0BA9, G: 
ASMTAIL_code_temp_sp1           = 0BA9, G: 
ASMTAIL_code_threads            = 0BA9, G: 
asm_mtx_init                    = 0BA9, G: asm_mtx_init
unknown_type                    = 0BC3, L: asm_mtx_init
ASMHEAD_code_compiler           = 0BC8, G: 
ASMHEAD_code_lib                = 0BC8, G: 
ASMHEAD_code_z80                = 0BC8, G: 
ASMTAIL_code_lib                = 0BC8, G: 
ASMTAIL_code_threads_mutex      = 0BC8, G: 
ASMTAIL_code_z80                = 0BC8, G: 
_main                           = 0BC8, G: s6b0_
l_main_00104                    = 0BE3, L: s6b0_
IOCTL_OTERM_FZX_LEFT_MARGIN     = 0C02, G: s6b0_1
l_main_00102                    = 0C15, L: s6b0_
l_main_00107                    = 0C21, L: s6b0_
___str_0                        = 0C26, L: s6b0_
ASMHEAD_code_user               = 0C36, G: 
ASMHEAD_rodata_clib             = 0C36, G: 
ASMHEAD_rodata_driver           = 0C36, G: 
ASMHEAD_rodata_error_strings    = 0C36, G: 
ASMHEAD_rodata_font             = 0C36, G: 
ASMTAIL_code_compiler           = 0C36, G: 
ASMTAIL_code_user               = 0C36, G: 
ASMTAIL_rodata_clib             = 0C36, G: 
ASMTAIL_rodata_driver           = 0C36, G: 
ASMTAIL_rodata_font             = 0C36, G: 
ASMHEAD_rodata_error_string_end = 0C6C, G: 
ASMTAIL_rodata_error_strings    = 0C6C, G: 
ASMHEAD_CODE_END                = 0C6D, G: 
ASMHEAD_DATA                    = 0C6D, G: 
ASMHEAD_rodata_compiler         = 0C6D, G: 
ASMHEAD_rodata_fcntl            = 0C6D, G: 
ASMHEAD_rodata_font_4x8         = 0C6D, G: 
ASMHEAD_rodata_font_8x8         = 0C6D, G: 
ASMHEAD_rodata_font_fzx         = 0C6D, G: 
ASMHEAD_rodata_input            = 0C6D, G: 
ASMHEAD_rodata_lib              = 0C6D, G: 
ASMHEAD_rodata_sound_bit        = 0C6D, G: 
ASMHEAD_rodata_stdio            = 0C6D, G: 
ASMHEAD_rodata_stdlib           = 0C6D, G: 
ASMHEAD_rodata_user             = 0C6D, G: 
ASMTAIL_CODE_END                = 0C6D, G: 
ASMTAIL_rodata_compiler         = 0C6D, G: 
ASMTAIL_rodata_error_string_end = 0C6D, G: 
ASMTAIL_rodata_fcntl            = 0C6D, G: 
ASMTAIL_rodata_font_4x8         = 0C6D, G: 
ASMTAIL_rodata_font_8x8         = 0C6D, G: 
ASMTAIL_rodata_font_fzx         = 0C6D, G: 
ASMTAIL_rodata_input            = 0C6D, G: 
ASMTAIL_rodata_lib              = 0C6D, G: 
ASMTAIL_rodata_sound_bit        = 0C6D, G: 
ASMTAIL_rodata_stdio            = 0C6D, G: 
ASMTAIL_rodata_stdlib           = 0C6D, G: 
ASMTAIL_rodata_user             = 0C6D, G: 
ASMHEAD_data_alloc_balloc       = 0C6E, G: 
ASMHEAD_data_alloc_malloc       = 0C6E, G: 
ASMHEAD_data_clib               = 0C6E, G: 
ASMHEAD_data_driver             = 0C6E, G: 
ASMHEAD_data_font               = 0C6E, G: 
ASMHEAD_smc_clib                = 0C6E, G: 
ASMHEAD_smc_compiler            = 0C6E, G: 
ASMHEAD_smc_driver              = 0C6E, G: 
ASMHEAD_smc_fcntl               = 0C6E, G: 
ASMHEAD_smc_font                = 0C6E, G: 
ASMHEAD_smc_l                   = 0C6E, G: 
ASMHEAD_smc_lib                 = 0C6E, G: 
ASMHEAD_smc_sound_bit           = 0C6E, G: 
ASMHEAD_smc_user                = 0C6E, G: 
ASMTAIL_DATA                    = 0C6E, G: 
ASMTAIL_data_alloc_balloc       = 0C6E, G: 
ASMTAIL_data_clib               = 0C6E, G: 
ASMTAIL_data_driver             = 0C6E, G: 
ASMTAIL_data_font               = 0C6E, G: 
ASMTAIL_smc_clib                = 0C6E, G: 
ASMTAIL_smc_compiler            = 0C6E, G: 
ASMTAIL_smc_driver              = 0C6E, G: 
ASMTAIL_smc_fcntl               = 0C6E, G: 
ASMTAIL_smc_font                = 0C6E, G: 
ASMTAIL_smc_l                   = 0C6E, G: 
ASMTAIL_smc_lib                 = 0C6E, G: 
ASMTAIL_smc_sound_bit           = 0C6E, G: 
ASMTAIL_smc_user                = 0C6E, G: 
__malloc_heap                   = 0C6E, G: s6b0_1
ASMHEAD_data_fcntl              = 0C70, G: 
ASMTAIL_data_alloc_malloc       = 0C70, G: 
__stdio_heap                    = 0C70, G: s6b0_1
ASMHEAD_data_fcntl_stdio_heap_head = 0C72, G: 
ASMTAIL_data_fcntl              = 0C72, G: 
__stdio_block                   = 0C72, L: s6b0_1
ASMHEAD_data_fcntl_stdio_heap_body = 0C78, G: 
ASMTAIL_data_fcntl_stdio_heap_head = 0C78, G: 
__i_fcntl_heap_0                = 0C78, L: s6b0_1
__i_fcntl_fdstruct_0            = 0C7E, L: s6b0_1
__i_fcntl_heap_1                = 0C8F, L: s6b0_1
__i_fcntl_fdstruct_1            = 0C95, L: s6b0_1
__i_fcntl_fdstruct_2            = 0C95, L: s6b0_1
__i_fcntl_heap_2                = 0CA6, L: s6b0_1
ASMHEAD_data_fcntl_stdio_heap_tail = 0CF0, G: 
ASMTAIL_data_fcntl_stdio_heap_body = 0CF0, G: 
__i_fcntl_heap_3                = 0CF0, L: s6b0_1
ASMHEAD_data_fcntl_fdtable_body = 0CF2, G: 
ASMTAIL_data_fcntl_stdio_heap_tail = 0CF2, G: 
__fcntl_fdtbl                   = 0CF2, G: s6b0_1
ASMHEAD_data_sound_bit          = 0CF8, G: 
ASMHEAD_data_stdio              = 0CF8, G: 
ASMTAIL_data_fcntl_fdtable_body = 0CF8, G: 
ASMTAIL_data_sound_bit          = 0CF8, G: 
_stdin                          = 0CF8, G: s6b0_1
__i_stdio_file_0                = 0CFA, L: s6b0_1
IOCTL_OTERM_FZX_LINE_SPACING    = 0D02, G: s6b0_1
_stdout                         = 0D09, G: s6b0_1
__i_stdio_file_1                = 0D0B, L: s6b0_1
_stderr                         = 0D1A, G: s6b0_1
__i_stdio_file_2                = 0D1C, L: s6b0_1
__stdio_open_file_list          = 0D2B, G: s6b0_1
__stdio_closed_file_list        = 0D2D, G: s6b0_1
ASMHEAD_data_stdlib             = 0D31, G: 
ASMHEAD_data_threads            = 0D31, G: 
ASMTAIL_data_stdio              = 0D31, G: 
ASMTAIL_data_stdlib             = 0D31, G: 
__thrd_id                       = 0D31, G: s6b0_1
ASMHEAD_BSS                     = 0D32, G: 
ASMHEAD_DATA_END                = 0D32, G: 
ASMHEAD_data_compiler           = 0D32, G: 
ASMHEAD_data_lib                = 0D32, G: 
ASMHEAD_data_user               = 0D32, G: 
ASMTAIL_DATA_END                = 0D32, G: 
ASMTAIL_data_compiler           = 0D32, G: 
ASMTAIL_data_lib                = 0D32, G: 
ASMTAIL_data_threads            = 0D32, G: 
ASMTAIL_data_user               = 0D32, G: 
ASMHEAD_BSS_UNINITIALIZED       = 0D33, G: 
ASMHEAD_bss_alloc_balloc        = 0D33, G: 
ASMHEAD_bss_alloc_malloc        = 0D33, G: 
ASMHEAD_bss_arch                = 0D33, G: 
ASMHEAD_bss_clib                = 0D33, G: 
ASMHEAD_bss_driver              = 0D33, G: 
ASMHEAD_bss_error               = 0D33, G: 
ASMHEAD_bss_font                = 0D33, G: 
ASMTAIL_BSS                     = 0D33, G: 
ASMTAIL_BSS_UNINITIALIZED       = 0D33, G: 
ASMTAIL_bss_alloc_balloc        = 0D33, G: 
ASMTAIL_bss_alloc_malloc        = 0D33, G: 
ASMTAIL_bss_arch                = 0D33, G: 
ASMTAIL_bss_clib                = 0D33, G: 
ASMTAIL_bss_driver              = 0D33, G: 
ASMTAIL_bss_font                = 0D33, G: 
_errno                          = 0D33, G: _errno
ASMHEAD_bss_fcntl               = 0D35, G: 
ASMHEAD_bss_input               = 0D35, G: 
ASMHEAD_bss_sound_bit           = 0D35, G: 
ASMHEAD_bss_stdio               = 0D35, G: 
ASMHEAD_bss_stdlib              = 0D35, G: 
ASMTAIL_bss_error               = 0D35, G: 
ASMTAIL_bss_fcntl               = 0D35, G: 
ASMTAIL_bss_input               = 0D35, G: 
ASMTAIL_bss_sound_bit           = 0D35, G: 
ASMTAIL_bss_stdio               = 0D35, G: 
__exit_stack                    = 0D35, G: s6b0_1
__quickexit_stack               = 0D3A, G: s6b0_1
ASMHEAD_BSS_END                 = 0D3B, G: 
ASMHEAD_IGNORE                  = 0D3B, G: 
ASMHEAD_bss_compiler            = 0D3B, G: 
ASMHEAD_bss_lib                 = 0D3B, G: 
ASMHEAD_bss_string              = 0D3B, G: 
ASMHEAD_bss_user                = 0D3B, G: 
ASMSIZE                         = 0D3B, G: 
ASMTAIL                         = 0D3B, G: 
ASMTAIL_BSS_END                 = 0D3B, G: 
ASMTAIL_IGNORE                  = 0D3B, G: 
ASMTAIL_bss_compiler            = 0D3B, G: 
ASMTAIL_bss_lib                 = 0D3B, G: 
ASMTAIL_bss_stdlib              = 0D3B, G: 
ASMTAIL_bss_string              = 0D3B, G: 
ASMTAIL_bss_user                = 0D3B, G: 
IOCTL_OTERM_FZX_SPACE_EXPAND    = 0E02, G: s6b0_1
IOCTL_OTERM_FZX_SET_FZX_STATE   = 0F02, G: s6b0_1
IOCTL_OTERM_FZX_GET_FZX_STATE   = 0F82, G: s6b0_1
IOCTL_ITERM_CAPS                = C009, G: s6b0_1
IOCTL_ITERM_COOK                = C011, G: s6b0_1
IOCTL_OTERM_CRLF                = C012, G: s6b0_1
IOCTL_OCHAR_CRLF                = C014, G: s6b0_1
IOCTL_ITERM_LINE                = C021, G: s6b0_1
IOCTL_OTERM_COOK                = C022, G: s6b0_1
IOCTL_ITERM_PASS                = C041, G: s6b0_1
IOCTL_OTERM_PAUSE               = C042, G: s6b0_1
IOCTL_ITERM_ECHO                = C081, G: s6b0_1
IOCTL_OTERM_PAGE                = C082, G: s6b0_1
IOCTL_ITERM_CRLF                = C101, G: s6b0_1
IOCTL_OTERM_BELL                = C102, G: s6b0_1
IOCTL_ICHAR_CRLF                = C103, G: s6b0_1
IOCTL_ITERM_CURS                = C201, G: s6b0_1
IOCTL_OTERM_SIGNAL              = C202, G: s6b0_1
IOCTL_OTERM_CLEAR               = E002, G: s6b0_1
__CLIB_OPT_PRINTF               = 3FFFFF, L: asm_vfprintf_unlocked
