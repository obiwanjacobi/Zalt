ASMHEAD                         = 0000, G: 
ASMHEAD_BSS                     = 0C74, G: 
ASMHEAD_BSS_END                 = 0C7D, G: 
ASMHEAD_BSS_UNINITIALIZED       = 0C75, G: 
ASMHEAD_CODE                    = 0000, G: 
ASMHEAD_CODE_END                = 0BAD, G: 
ASMHEAD_DATA                    = 0BAD, G: 
ASMHEAD_DATA_END                = 0C74, G: 
ASMHEAD_IGNORE                  = 0C7D, G: 
ASMHEAD_bss_alloc_balloc        = 0C75, G: 
ASMHEAD_bss_alloc_malloc        = 0C75, G: 
ASMHEAD_bss_arch                = 0C75, G: 
ASMHEAD_bss_clib                = 0C75, G: 
ASMHEAD_bss_compiler            = 0C7D, G: 
ASMHEAD_bss_driver              = 0C75, G: 
ASMHEAD_bss_error               = 0C75, G: 
ASMHEAD_bss_fcntl               = 0C77, G: 
ASMHEAD_bss_font                = 0C75, G: 
ASMHEAD_bss_input               = 0C77, G: 
ASMHEAD_bss_lib                 = 0C7D, G: 
ASMHEAD_bss_sound_bit           = 0C77, G: 
ASMHEAD_bss_stdio               = 0C77, G: 
ASMHEAD_bss_stdlib              = 0C77, G: 
ASMHEAD_bss_string              = 0C7D, G: 
ASMHEAD_bss_user                = 0C7D, G: 
ASMHEAD_code_adt_b_array        = 00D1, G: 
ASMHEAD_code_adt_b_vector       = 00D1, G: 
ASMHEAD_code_adt_ba_priority_queue = 00D1, G: 
ASMHEAD_code_adt_ba_stack       = 00D1, G: 
ASMHEAD_code_adt_bv_priority_queue = 00D1, G: 
ASMHEAD_code_adt_bv_stack       = 00D1, G: 
ASMHEAD_code_adt_p_forward_list = 00D1, G: 
ASMHEAD_code_adt_p_forward_list_alt = 00D7, G: 
ASMHEAD_code_adt_p_list         = 00D7, G: 
ASMHEAD_code_adt_p_queue        = 00D7, G: 
ASMHEAD_code_adt_p_stack        = 00D7, G: 
ASMHEAD_code_adt_w_array        = 00D7, G: 
ASMHEAD_code_adt_w_vector       = 00D7, G: 
ASMHEAD_code_adt_wa_priority_queue = 00D7, G: 
ASMHEAD_code_adt_wa_stack       = 00D7, G: 
ASMHEAD_code_adt_wv_priority_queue = 00D7, G: 
ASMHEAD_code_adt_wv_stack       = 00D7, G: 
ASMHEAD_code_alloc_balloc       = 00D7, G: 
ASMHEAD_code_alloc_malloc       = 00D7, G: 
ASMHEAD_code_alloc_obstack      = 00F9, G: 
ASMHEAD_code_arch               = 00F9, G: 
ASMHEAD_code_bifrost2           = 00F9, G: 
ASMHEAD_code_bifrost_h          = 00F9, G: 
ASMHEAD_code_bifrost_l          = 00F9, G: 
ASMHEAD_code_clib               = 00D1, G: 
ASMHEAD_code_compiler           = 0B50, G: 
ASMHEAD_code_compress_zx7       = 00F9, G: 
ASMHEAD_code_crt_common         = 00D1, G: 
ASMHEAD_code_crt_exit           = 00CD, G: 
ASMHEAD_code_crt_init           = 00A2, G: 
ASMHEAD_code_crt_main           = 00C6, G: 
ASMHEAD_code_crt_return         = 00CD, G: 
ASMHEAD_code_ctype              = 00F9, G: 
ASMHEAD_code_driver             = 00D1, G: 
ASMHEAD_code_driver_character_input = 0127, G: 
ASMHEAD_code_driver_character_output = 01FF, G: 
ASMHEAD_code_driver_general     = 0102, G: 
ASMHEAD_code_driver_memstream   = 0288, G: 
ASMHEAD_code_driver_terminal_input = 0288, G: 
ASMHEAD_code_driver_terminal_output = 0288, G: 
ASMHEAD_code_driver_tty         = 0288, G: 
ASMHEAD_code_error              = 0288, G: 
ASMHEAD_code_fcntl              = 0309, G: 
ASMHEAD_code_font               = 00D1, G: 
ASMHEAD_code_font_fzx           = 03A5, G: 
ASMHEAD_code_fp_genmath         = 03A5, G: 
ASMHEAD_code_fp_math48          = 03A5, G: 
ASMHEAD_code_input              = 03A5, G: 
ASMHEAD_code_inttypes           = 03A5, G: 
ASMHEAD_code_l                  = 03A5, G: 
ASMHEAD_code_l_sccz80           = 0492, G: 
ASMHEAD_code_l_sdcc             = 0492, G: 
ASMHEAD_code_lib                = 0B50, G: 
ASMHEAD_code_locale             = 0492, G: 
ASMHEAD_code_math               = 0492, G: 
ASMHEAD_code_network            = 052C, G: 
ASMHEAD_code_nirvanam           = 052C, G: 
ASMHEAD_code_nirvanap           = 052C, G: 
ASMHEAD_code_setjmp             = 052C, G: 
ASMHEAD_code_sound_bit          = 052C, G: 
ASMHEAD_code_stdio              = 052C, G: 
ASMHEAD_code_stdlib             = 0A92, G: 
ASMHEAD_code_string             = 0B07, G: 
ASMHEAD_code_temp_sp1           = 0B31, G: 
ASMHEAD_code_threads            = 0B31, G: 
ASMHEAD_code_threads_mutex      = 0B31, G: 
ASMHEAD_code_user               = 0B76, G: 
ASMHEAD_code_z80                = 0B50, G: 
ASMHEAD_data_alloc_balloc       = 0BAE, G: 
ASMHEAD_data_alloc_malloc       = 0BAE, G: 
ASMHEAD_data_clib               = 0BAE, G: 
ASMHEAD_data_compiler           = 0C72, G: 
ASMHEAD_data_driver             = 0BAE, G: 
ASMHEAD_data_fcntl              = 0BB0, G: 
ASMHEAD_data_fcntl_fdtable_body = 0C32, G: 
ASMHEAD_data_fcntl_stdio_heap_body = 0BB8, G: 
ASMHEAD_data_fcntl_stdio_heap_head = 0BB2, G: 
ASMHEAD_data_fcntl_stdio_heap_tail = 0C30, G: 
ASMHEAD_data_font               = 0BAE, G: 
ASMHEAD_data_lib                = 0C72, G: 
ASMHEAD_data_sound_bit          = 0C38, G: 
ASMHEAD_data_stdio              = 0C38, G: 
ASMHEAD_data_stdlib             = 0C71, G: 
ASMHEAD_data_threads            = 0C71, G: 
ASMHEAD_data_user               = 0C74, G: 
ASMHEAD_rodata_clib             = 0B76, G: 
ASMHEAD_rodata_compiler         = 0BAD, G: 
ASMHEAD_rodata_driver           = 0B76, G: 
ASMHEAD_rodata_error_string_end = 0BAC, G: 
ASMHEAD_rodata_error_strings    = 0B76, G: 
ASMHEAD_rodata_fcntl            = 0BAD, G: 
ASMHEAD_rodata_font             = 0B76, G: 
ASMHEAD_rodata_font_4x8         = 0BAD, G: 
ASMHEAD_rodata_font_8x8         = 0BAD, G: 
ASMHEAD_rodata_font_fzx         = 0BAD, G: 
ASMHEAD_rodata_input            = 0BAD, G: 
ASMHEAD_rodata_lib              = 0BAD, G: 
ASMHEAD_rodata_sound_bit        = 0BAD, G: 
ASMHEAD_rodata_stdio            = 0BAD, G: 
ASMHEAD_rodata_stdlib           = 0BAD, G: 
ASMHEAD_rodata_user             = 0BAD, G: 
ASMHEAD_smc_clib                = 0BAE, G: 
ASMHEAD_smc_compiler            = 0BAE, G: 
ASMHEAD_smc_driver              = 0BAE, G: 
ASMHEAD_smc_fcntl               = 0BAE, G: 
ASMHEAD_smc_font                = 0BAE, G: 
ASMHEAD_smc_l                   = 0BAE, G: 
ASMHEAD_smc_lib                 = 0BAE, G: 
ASMHEAD_smc_sound_bit           = 0BAE, G: 
ASMHEAD_smc_user                = 0BAE, G: 
ASMSIZE                         = 0C7D, G: 
ASMSIZE_BSS                     = 0001, G: 
ASMSIZE_BSS_END                 = 0000, G: 
ASMSIZE_BSS_UNINITIALIZED       = 0000, G: 
ASMSIZE_CODE                    = 00A2, G: 
ASMSIZE_CODE_END                = 0000, G: 
ASMSIZE_DATA                    = 0001, G: 
ASMSIZE_DATA_END                = 0000, G: 
ASMSIZE_IGNORE                  = 0000, G: 
ASMSIZE_bss_alloc_balloc        = 0000, G: 
ASMSIZE_bss_alloc_malloc        = 0000, G: 
ASMSIZE_bss_arch                = 0000, G: 
ASMSIZE_bss_clib                = 0000, G: 
ASMSIZE_bss_compiler            = 0000, G: 
ASMSIZE_bss_driver              = 0000, G: 
ASMSIZE_bss_error               = 0002, G: 
ASMSIZE_bss_fcntl               = 0000, G: 
ASMSIZE_bss_font                = 0000, G: 
ASMSIZE_bss_input               = 0000, G: 
ASMSIZE_bss_lib                 = 0000, G: 
ASMSIZE_bss_sound_bit           = 0000, G: 
ASMSIZE_bss_stdio               = 0000, G: 
ASMSIZE_bss_stdlib              = 0006, G: 
ASMSIZE_bss_string              = 0000, G: 
ASMSIZE_bss_user                = 0000, G: 
ASMSIZE_code_adt_b_array        = 0000, G: 
ASMSIZE_code_adt_b_vector       = 0000, G: 
ASMSIZE_code_adt_ba_priority_queue = 0000, G: 
ASMSIZE_code_adt_ba_stack       = 0000, G: 
ASMSIZE_code_adt_bv_priority_queue = 0000, G: 
ASMSIZE_code_adt_bv_stack       = 0000, G: 
ASMSIZE_code_adt_p_forward_list = 0006, G: 
ASMSIZE_code_adt_p_forward_list_alt = 0000, G: 
ASMSIZE_code_adt_p_list         = 0000, G: 
ASMSIZE_code_adt_p_queue        = 0000, G: 
ASMSIZE_code_adt_p_stack        = 0000, G: 
ASMSIZE_code_adt_w_array        = 0000, G: 
ASMSIZE_code_adt_w_vector       = 0000, G: 
ASMSIZE_code_adt_wa_priority_queue = 0000, G: 
ASMSIZE_code_adt_wa_stack       = 0000, G: 
ASMSIZE_code_adt_wv_priority_queue = 0000, G: 
ASMSIZE_code_adt_wv_stack       = 0000, G: 
ASMSIZE_code_alloc_balloc       = 0000, G: 
ASMSIZE_code_alloc_malloc       = 0022, G: 
ASMSIZE_code_alloc_obstack      = 0000, G: 
ASMSIZE_code_arch               = 0000, G: 
ASMSIZE_code_bifrost2           = 0000, G: 
ASMSIZE_code_bifrost_h          = 0000, G: 
ASMSIZE_code_bifrost_l          = 0000, G: 
ASMSIZE_code_clib               = 0000, G: 
ASMSIZE_code_compiler           = 0026, G: 
ASMSIZE_code_compress_zx7       = 0000, G: 
ASMSIZE_code_crt_common         = 0000, G: 
ASMSIZE_code_crt_exit           = 0000, G: 
ASMSIZE_code_crt_init           = 0024, G: 
ASMSIZE_code_crt_main           = 0007, G: 
ASMSIZE_code_crt_return         = 0004, G: 
ASMSIZE_code_ctype              = 0009, G: 
ASMSIZE_code_driver             = 0000, G: 
ASMSIZE_code_driver_character_input = 00D8, G: 
ASMSIZE_code_driver_character_output = 0089, G: 
ASMSIZE_code_driver_general     = 0025, G: 
ASMSIZE_code_driver_memstream   = 0000, G: 
ASMSIZE_code_driver_terminal_input = 0000, G: 
ASMSIZE_code_driver_terminal_output = 0000, G: 
ASMSIZE_code_driver_tty         = 0000, G: 
ASMSIZE_code_error              = 0081, G: 
ASMSIZE_code_fcntl              = 009C, G: 
ASMSIZE_code_font               = 0000, G: 
ASMSIZE_code_font_fzx           = 0000, G: 
ASMSIZE_code_fp_genmath         = 0000, G: 
ASMSIZE_code_fp_math48          = 0000, G: 
ASMSIZE_code_input              = 0000, G: 
ASMSIZE_code_inttypes           = 0000, G: 
ASMSIZE_code_l                  = 00ED, G: 
ASMSIZE_code_l_sccz80           = 0000, G: 
ASMSIZE_code_l_sdcc             = 0000, G: 
ASMSIZE_code_lib                = 0000, G: 
ASMSIZE_code_locale             = 0000, G: 
ASMSIZE_code_math               = 009A, G: 
ASMSIZE_code_network            = 0000, G: 
ASMSIZE_code_nirvanam           = 0000, G: 
ASMSIZE_code_nirvanap           = 0000, G: 
ASMSIZE_code_setjmp             = 0000, G: 
ASMSIZE_code_sound_bit          = 0000, G: 
ASMSIZE_code_stdio              = 0566, G: 
ASMSIZE_code_stdlib             = 0075, G: 
ASMSIZE_code_string             = 002A, G: 
ASMSIZE_code_temp_sp1           = 0000, G: 
ASMSIZE_code_threads            = 0000, G: 
ASMSIZE_code_threads_mutex      = 001F, G: 
ASMSIZE_code_user               = 0000, G: 
ASMSIZE_code_z80                = 0000, G: 
ASMSIZE_data_alloc_balloc       = 0000, G: 
ASMSIZE_data_alloc_malloc       = 0002, G: 
ASMSIZE_data_clib               = 0000, G: 
ASMSIZE_data_compiler           = 0002, G: 
ASMSIZE_data_driver             = 0000, G: 
ASMSIZE_data_fcntl              = 0002, G: 
ASMSIZE_data_fcntl_fdtable_body = 0006, G: 
ASMSIZE_data_fcntl_stdio_heap_body = 0078, G: 
ASMSIZE_data_fcntl_stdio_heap_head = 0006, G: 
ASMSIZE_data_fcntl_stdio_heap_tail = 0002, G: 
ASMSIZE_data_font               = 0000, G: 
ASMSIZE_data_lib                = 0000, G: 
ASMSIZE_data_sound_bit          = 0000, G: 
ASMSIZE_data_stdio              = 0039, G: 
ASMSIZE_data_stdlib             = 0000, G: 
ASMSIZE_data_threads            = 0001, G: 
ASMSIZE_data_user               = 0000, G: 
ASMSIZE_rodata_clib             = 0000, G: 
ASMSIZE_rodata_compiler         = 0000, G: 
ASMSIZE_rodata_driver           = 0000, G: 
ASMSIZE_rodata_error_string_end = 0001, G: 
ASMSIZE_rodata_error_strings    = 0036, G: 
ASMSIZE_rodata_fcntl            = 0000, G: 
ASMSIZE_rodata_font             = 0000, G: 
ASMSIZE_rodata_font_4x8         = 0000, G: 
ASMSIZE_rodata_font_8x8         = 0000, G: 
ASMSIZE_rodata_font_fzx         = 0000, G: 
ASMSIZE_rodata_input            = 0000, G: 
ASMSIZE_rodata_lib              = 0000, G: 
ASMSIZE_rodata_sound_bit        = 0000, G: 
ASMSIZE_rodata_stdio            = 0000, G: 
ASMSIZE_rodata_stdlib           = 0000, G: 
ASMSIZE_rodata_user             = 0000, G: 
ASMSIZE_smc_clib                = 0000, G: 
ASMSIZE_smc_compiler            = 0000, G: 
ASMSIZE_smc_driver              = 0000, G: 
ASMSIZE_smc_fcntl               = 0000, G: 
ASMSIZE_smc_font                = 0000, G: 
ASMSIZE_smc_l                   = 0000, G: 
ASMSIZE_smc_lib                 = 0000, G: 
ASMSIZE_smc_sound_bit           = 0000, G: 
ASMSIZE_smc_user                = 0000, G: 
ASMTAIL                         = 0C7D, G: 
ASMTAIL_BSS                     = 0C75, G: 
ASMTAIL_BSS_END                 = 0C7D, G: 
ASMTAIL_BSS_UNINITIALIZED       = 0C75, G: 
ASMTAIL_CODE                    = 00A2, G: 
ASMTAIL_CODE_END                = 0BAD, G: 
ASMTAIL_DATA                    = 0BAE, G: 
ASMTAIL_DATA_END                = 0C74, G: 
ASMTAIL_IGNORE                  = 0C7D, G: 
ASMTAIL_bss_alloc_balloc        = 0C75, G: 
ASMTAIL_bss_alloc_malloc        = 0C75, G: 
ASMTAIL_bss_arch                = 0C75, G: 
ASMTAIL_bss_clib                = 0C75, G: 
ASMTAIL_bss_compiler            = 0C7D, G: 
ASMTAIL_bss_driver              = 0C75, G: 
ASMTAIL_bss_error               = 0C77, G: 
ASMTAIL_bss_fcntl               = 0C77, G: 
ASMTAIL_bss_font                = 0C75, G: 
ASMTAIL_bss_input               = 0C77, G: 
ASMTAIL_bss_lib                 = 0C7D, G: 
ASMTAIL_bss_sound_bit           = 0C77, G: 
ASMTAIL_bss_stdio               = 0C77, G: 
ASMTAIL_bss_stdlib              = 0C7D, G: 
ASMTAIL_bss_string              = 0C7D, G: 
ASMTAIL_bss_user                = 0C7D, G: 
ASMTAIL_code_adt_b_array        = 00D1, G: 
ASMTAIL_code_adt_b_vector       = 00D1, G: 
ASMTAIL_code_adt_ba_priority_queue = 00D1, G: 
ASMTAIL_code_adt_ba_stack       = 00D1, G: 
ASMTAIL_code_adt_bv_priority_queue = 00D1, G: 
ASMTAIL_code_adt_bv_stack       = 00D1, G: 
ASMTAIL_code_adt_p_forward_list = 00D7, G: 
ASMTAIL_code_adt_p_forward_list_alt = 00D7, G: 
ASMTAIL_code_adt_p_list         = 00D7, G: 
ASMTAIL_code_adt_p_queue        = 00D7, G: 
ASMTAIL_code_adt_p_stack        = 00D7, G: 
ASMTAIL_code_adt_w_array        = 00D7, G: 
ASMTAIL_code_adt_w_vector       = 00D7, G: 
ASMTAIL_code_adt_wa_priority_queue = 00D7, G: 
ASMTAIL_code_adt_wa_stack       = 00D7, G: 
ASMTAIL_code_adt_wv_priority_queue = 00D7, G: 
ASMTAIL_code_adt_wv_stack       = 00D7, G: 
ASMTAIL_code_alloc_balloc       = 00D7, G: 
ASMTAIL_code_alloc_malloc       = 00F9, G: 
ASMTAIL_code_alloc_obstack      = 00F9, G: 
ASMTAIL_code_arch               = 00F9, G: 
ASMTAIL_code_bifrost2           = 00F9, G: 
ASMTAIL_code_bifrost_h          = 00F9, G: 
ASMTAIL_code_bifrost_l          = 00F9, G: 
ASMTAIL_code_clib               = 00D1, G: 
ASMTAIL_code_compiler           = 0B76, G: 
ASMTAIL_code_compress_zx7       = 00F9, G: 
ASMTAIL_code_crt_common         = 00D1, G: 
ASMTAIL_code_crt_exit           = 00CD, G: 
ASMTAIL_code_crt_init           = 00C6, G: 
ASMTAIL_code_crt_main           = 00CD, G: 
ASMTAIL_code_crt_return         = 00D1, G: 
ASMTAIL_code_ctype              = 0102, G: 
ASMTAIL_code_driver             = 00D1, G: 
ASMTAIL_code_driver_character_input = 01FF, G: 
ASMTAIL_code_driver_character_output = 0288, G: 
ASMTAIL_code_driver_general     = 0127, G: 
ASMTAIL_code_driver_memstream   = 0288, G: 
ASMTAIL_code_driver_terminal_input = 0288, G: 
ASMTAIL_code_driver_terminal_output = 0288, G: 
ASMTAIL_code_driver_tty         = 0288, G: 
ASMTAIL_code_error              = 0309, G: 
ASMTAIL_code_fcntl              = 03A5, G: 
ASMTAIL_code_font               = 00D1, G: 
ASMTAIL_code_font_fzx           = 03A5, G: 
ASMTAIL_code_fp_genmath         = 03A5, G: 
ASMTAIL_code_fp_math48          = 03A5, G: 
ASMTAIL_code_input              = 03A5, G: 
ASMTAIL_code_inttypes           = 03A5, G: 
ASMTAIL_code_l                  = 0492, G: 
ASMTAIL_code_l_sccz80           = 0492, G: 
ASMTAIL_code_l_sdcc             = 0492, G: 
ASMTAIL_code_lib                = 0B50, G: 
ASMTAIL_code_locale             = 0492, G: 
ASMTAIL_code_math               = 052C, G: 
ASMTAIL_code_network            = 052C, G: 
ASMTAIL_code_nirvanam           = 052C, G: 
ASMTAIL_code_nirvanap           = 052C, G: 
ASMTAIL_code_setjmp             = 052C, G: 
ASMTAIL_code_sound_bit          = 052C, G: 
ASMTAIL_code_stdio              = 0A92, G: 
ASMTAIL_code_stdlib             = 0B07, G: 
ASMTAIL_code_string             = 0B31, G: 
ASMTAIL_code_temp_sp1           = 0B31, G: 
ASMTAIL_code_threads            = 0B31, G: 
ASMTAIL_code_threads_mutex      = 0B50, G: 
ASMTAIL_code_user               = 0B76, G: 
ASMTAIL_code_z80                = 0B50, G: 
ASMTAIL_data_alloc_balloc       = 0BAE, G: 
ASMTAIL_data_alloc_malloc       = 0BB0, G: 
ASMTAIL_data_clib               = 0BAE, G: 
ASMTAIL_data_compiler           = 0C74, G: 
ASMTAIL_data_driver             = 0BAE, G: 
ASMTAIL_data_fcntl              = 0BB2, G: 
ASMTAIL_data_fcntl_fdtable_body = 0C38, G: 
ASMTAIL_data_fcntl_stdio_heap_body = 0C30, G: 
ASMTAIL_data_fcntl_stdio_heap_head = 0BB8, G: 
ASMTAIL_data_fcntl_stdio_heap_tail = 0C32, G: 
ASMTAIL_data_font               = 0BAE, G: 
ASMTAIL_data_lib                = 0C72, G: 
ASMTAIL_data_sound_bit          = 0C38, G: 
ASMTAIL_data_stdio              = 0C71, G: 
ASMTAIL_data_stdlib             = 0C71, G: 
ASMTAIL_data_threads            = 0C72, G: 
ASMTAIL_data_user               = 0C74, G: 
ASMTAIL_rodata_clib             = 0B76, G: 
ASMTAIL_rodata_compiler         = 0BAD, G: 
ASMTAIL_rodata_driver           = 0B76, G: 
ASMTAIL_rodata_error_string_end = 0BAD, G: 
ASMTAIL_rodata_error_strings    = 0BAC, G: 
ASMTAIL_rodata_fcntl            = 0BAD, G: 
ASMTAIL_rodata_font             = 0B76, G: 
ASMTAIL_rodata_font_4x8         = 0BAD, G: 
ASMTAIL_rodata_font_8x8         = 0BAD, G: 
ASMTAIL_rodata_font_fzx         = 0BAD, G: 
ASMTAIL_rodata_input            = 0BAD, G: 
ASMTAIL_rodata_lib              = 0BAD, G: 
ASMTAIL_rodata_sound_bit        = 0BAD, G: 
ASMTAIL_rodata_stdio            = 0BAD, G: 
ASMTAIL_rodata_stdlib           = 0BAD, G: 
ASMTAIL_rodata_user             = 0BAD, G: 
ASMTAIL_smc_clib                = 0BAE, G: 
ASMTAIL_smc_compiler            = 0BAE, G: 
ASMTAIL_smc_driver              = 0BAE, G: 
ASMTAIL_smc_fcntl               = 0BAE, G: 
ASMTAIL_smc_font                = 0BAE, G: 
ASMTAIL_smc_l                   = 0BAE, G: 
ASMTAIL_smc_lib                 = 0BAE, G: 
ASMTAIL_smc_sound_bit           = 0BAE, G: 
ASMTAIL_smc_user                = 0BAE, G: 
BiosFn1                         = 0068, L: s5ss_1
BiosFn2                         = 0068, L: s5ss_1
BiosFn3                         = 0068, L: s5ss_1
BiosFn4                         = 0068, L: s5ss_1
BiosFn5                         = 0068, L: s5ss_1
BiosFn6                         = 0068, L: s5ss_1
CHAR_CR                         = 000D, L: character_00_input_stdio_msg_getc
CHAR_CR                         = 000D, L: character_00_output_ochar_putc_bin
CHAR_LF                         = 000A, L: character_00_input_stdio_msg_read
CHAR_LF                         = 000A, L: character_00_output_ochar_putc_bin
DEFINED_Z88DK_USES_SDCC         = 0001, L: s5ss_1
ICHAR_MSG_GETC                  = 000F, G: s5ss_1
IOCTL_ICHAR_CRLF                = C103, G: s5ss_1
IOCTL_ITERM_CAPS                = C009, G: s5ss_1
IOCTL_ITERM_COOK                = C011, G: s5ss_1
IOCTL_ITERM_CRLF                = C101, G: s5ss_1
IOCTL_ITERM_CURS                = C201, G: s5ss_1
IOCTL_ITERM_ECHO                = C081, G: s5ss_1
IOCTL_ITERM_GET_EDITBUF         = 0381, G: s5ss_1
IOCTL_ITERM_LINE                = C021, G: s5ss_1
IOCTL_ITERM_PASS                = C041, G: s5ss_1
IOCTL_ITERM_SET_EDITBUF         = 0301, G: s5ss_1
IOCTL_ITERM_TIE                 = 0201, G: s5ss_1
IOCTL_OCHAR_CRLF                = C014, G: s5ss_1
IOCTL_OTERM_BELL                = C102, G: s5ss_1
IOCTL_OTERM_CLEAR               = E002, G: s5ss_1
IOCTL_OTERM_CLS                 = 0102, G: s5ss_1
IOCTL_OTERM_COOK                = C022, G: s5ss_1
IOCTL_OTERM_CRLF                = C012, G: s5ss_1
IOCTL_OTERM_FONT                = 0802, G: s5ss_1
IOCTL_OTERM_FZX_GET_FZX_STATE   = 0F82, G: s5ss_1
IOCTL_OTERM_FZX_GET_PAPER_COORD = 0A82, G: s5ss_1
IOCTL_OTERM_FZX_GET_PAPER_RECT  = 0B82, G: s5ss_1
IOCTL_OTERM_FZX_LEFT_MARGIN     = 0C02, G: s5ss_1
IOCTL_OTERM_FZX_LINE_SPACING    = 0D02, G: s5ss_1
IOCTL_OTERM_FZX_SET_FZX_STATE   = 0F02, G: s5ss_1
IOCTL_OTERM_FZX_SET_PAPER_COORD = 0A02, G: s5ss_1
IOCTL_OTERM_FZX_SET_PAPER_RECT  = 0B02, G: s5ss_1
IOCTL_OTERM_FZX_SPACE_EXPAND    = 0E02, G: s5ss_1
IOCTL_OTERM_GET_CURSOR_COORD    = 0582, G: s5ss_1
IOCTL_OTERM_GET_OTERM           = 0602, G: s5ss_1
IOCTL_OTERM_GET_WINDOW_COORD    = 0382, G: s5ss_1
IOCTL_OTERM_GET_WINDOW_RECT     = 0482, G: s5ss_1
IOCTL_OTERM_PAGE                = C082, G: s5ss_1
IOCTL_OTERM_PAUSE               = C042, G: s5ss_1
IOCTL_OTERM_RESET_SCROLL        = 0202, G: s5ss_1
IOCTL_OTERM_SCROLL              = 0702, G: s5ss_1
IOCTL_OTERM_SET_CURSOR_COORD    = 0502, G: s5ss_1
IOCTL_OTERM_SET_WINDOW_COORD    = 0302, G: s5ss_1
IOCTL_OTERM_SET_WINDOW_RECT     = 0402, G: s5ss_1
IOCTL_OTERM_SIGNAL              = C202, G: s5ss_1
IOCTL_RESET                     = 0000, G: s5ss_1
ITERM_MSG_BELL                  = 0019, G: s5ss_1
ITERM_MSG_BS                    = 0015, G: s5ss_1
ITERM_MSG_BS_PWD                = 0016, G: s5ss_1
ITERM_MSG_ERASE_CURSOR          = 0013, G: s5ss_1
ITERM_MSG_ERASE_CURSOR_PWD      = 0014, G: s5ss_1
ITERM_MSG_GETC                  = 000F, G: s5ss_1
ITERM_MSG_INTERRUPT             = 0010, G: s5ss_1
ITERM_MSG_PRINT_CURSOR          = 0012, G: s5ss_1
ITERM_MSG_PUTC                  = 0011, G: s5ss_1
ITERM_MSG_READLINE_BEGIN        = 0017, G: s5ss_1
ITERM_MSG_READLINE_END          = 0018, G: s5ss_1
OCHAR_MSG_PUTC                  = 0020, G: s5ss_1
OCHAR_MSG_PUTC_BIN              = 001E, G: s5ss_1
OTERM_MSG_BELL                  = 0024, G: s5ss_1
OTERM_MSG_CLS                   = 0022, G: s5ss_1
OTERM_MSG_PAUSE                 = 0023, G: s5ss_1
OTERM_MSG_PRINTC                = 0020, G: s5ss_1
OTERM_MSG_PSCROLL               = 0025, G: s5ss_1
OTERM_MSG_PUTC                  = 001E, G: s5ss_1
OTERM_MSG_SCROLL                = 0021, G: s5ss_1
OTERM_MSG_TTY                   = 001F, G: s5ss_1
STDIO_MSG_CLOS                  = 0009, G: s5ss_1
STDIO_MSG_EATC                  = 0004, G: s5ss_1
STDIO_MSG_FLSH                  = 0008, G: s5ss_1
STDIO_MSG_GETC                  = 0003, G: s5ss_1
STDIO_MSG_ICTL                  = 0007, G: s5ss_1
STDIO_MSG_PUTC                  = 0001, G: s5ss_1
STDIO_MSG_READ                  = 0005, G: s5ss_1
STDIO_MSG_SEEK                  = 0006, G: s5ss_1
STDIO_MSG_WRIT                  = 0002, G: s5ss_1
STDIO_SEEK_CUR                  = 0001, G: s5ss_1
STDIO_SEEK_END                  = 0002, G: s5ss_1
STDIO_SEEK_SET                  = 0000, G: s5ss_1
TAR__clib_balloc_table_size     = 0000, L: s5ss_1
TAR__clib_exit_stack_size       = 0002, L: s5ss_1
TAR__clib_fopen_max             = 0000, L: s5ss_1
TAR__clib_malloc_heap_size      = FFFFFFFF, L: s5ss_1
TAR__clib_open_max              = 0000, L: s5ss_1
TAR__clib_quickexit_stack_size  = 0000, L: s5ss_1
TAR__clib_stdio_heap_size       = 0080, L: s5ss_1
TAR__crt_enable_close           = 0001, L: s5ss_1
TAR__crt_enable_commandline     = 0000, L: s5ss_1
TAR__crt_enable_nmi             = 0000, L: s5ss_1
TAR__crt_enable_restart         = 0000, L: s5ss_1
TAR__crt_enable_rst             = 0000, L: s5ss_1
TAR__crt_initialize_bss         = 0000, L: s5ss_1
TAR__crt_model                  = 0000, L: s5ss_1
TAR__crt_org_bss                = 0000, L: s5ss_1
TAR__crt_org_code               = 0000, L: s5ss_1
TAR__crt_org_data               = 0000, L: s5ss_1
TAR__crt_stack_size             = 0200, L: s5ss_1
TAR__register_sp                = 0000, L: s5ss_1
_CLIB_CFG_ASM_                  = 0001, L: asm__fflushall_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_fflush_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_ultoa
_CLIB_CFG_ASM_                  = 0001, L: asm_utoa
_CLIB_CFG_ASM_                  = 0001, L: asm_vfprintf_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_vioctl
_CLIB_CFG_ASM_                  = 0001, L: character_00_input_stdio_msg_getc
_CLIB_CFG_ASM_                  = 0001, L: character_00_input_stdio_msg_read
_CLIB_CFG_ASM_                  = 0001, L: character_00_output_ochar_putc_bin
_CLIB_CFG_ASM_                  = 0001, L: console_01_input_terminal_fdriver
_CLIB_CFG_ASM_                  = 0001, L: error_eacces_mc
_CLIB_CFG_ASM_                  = 0001, L: error_ebdfd_mc
_CLIB_CFG_ASM_                  = 0001, L: error_ebdfd_zc
_CLIB_CFG_ASM_                  = 0001, L: error_edom_mc
_CLIB_CFG_ASM_                  = 0001, L: error_einval_mc
_CLIB_CFG_ASM_                  = 0001, L: error_einval_zc
_CLIB_CFG_ASM_                  = 0001, L: error_enolck_mc
_CLIB_CFG_ASM_                  = 0001, L: error_enolck_zc
_CLIB_CFG_ASM_                  = 0001, L: error_enotsup_mc
_CLIB_CFG_ASM_                  = 0001, L: error_enotsup_zc
_CLIB_CFG_ASM_                  = 0001, L: error_erange_mc
_CLIB_CFG_ASM_                  = 0001, L: error_erange_zc
_CLIB_CFG_ASM_                  = 0001, L: l_atou
_CLIB_CFG_ASM_                  = 0001, L: l_divu_16_16x8
_CLIB_CFG_ASM_                  = 0001, L: l_divu_32_32x8
_CLIB_CFG_ASM_                  = 0001, L: l_utoa
_CLIB_CFG_ASM_                  = 0001, L: printf
_Message                        = 0C72, L: s5ss_
__CLIB_OPT_ERROR                = 0001, L: error_eacces_mc
__CLIB_OPT_ERROR                = 0001, L: error_ebdfd_mc
__CLIB_OPT_ERROR                = 0001, L: error_ebdfd_zc
__CLIB_OPT_ERROR                = 0001, L: error_edom_mc
__CLIB_OPT_ERROR                = 0001, L: error_einval_mc
__CLIB_OPT_ERROR                = 0001, L: error_einval_zc
__CLIB_OPT_ERROR                = 0001, L: error_enolck_mc
__CLIB_OPT_ERROR                = 0001, L: error_enolck_zc
__CLIB_OPT_ERROR                = 0001, L: error_enotsup_mc
__CLIB_OPT_ERROR                = 0001, L: error_enotsup_zc
__CLIB_OPT_ERROR                = 0001, L: error_erange_mc
__CLIB_OPT_ERROR                = 0001, L: error_erange_zc
__CLIB_OPT_IMATH                = 0000, L: l_divu_16_16x8
__CLIB_OPT_IMATH                = 0000, L: l_divu_32_32x8
__CLIB_OPT_MULTITHREAD          = 0000, L: asm__fflushall_unlocked
__CLIB_OPT_MULTITHREAD          = 0000, L: asm_vioctl
__CLIB_OPT_MULTITHREAD          = 0000, L: printf
__CLIB_OPT_NUM2TXT              = 0000, L: asm_ultoa
__CLIB_OPT_NUM2TXT              = 0000, L: asm_utoa
__CLIB_OPT_NUM2TXT_SELECT       = 0000, L: l_utoa
__CLIB_OPT_PRINTF               = 3FFFFF, L: asm_vfprintf_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_fflush_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_vfprintf_unlocked
__CLIB_OPT_TXT2NUM_SELECT       = 0000, L: l_atou
__CRTDEF                        = 0000, L: s5ss_1
__EACCES                        = 0001, G: s5ss_1
__EAGAIN                        = 000F, G: s5ss_1
__EBADF                         = 0002, G: s5ss_1
__EBDFD                         = 0003, G: s5ss_1
__EDOM                          = 0004, G: s5ss_1
__EFBIG                         = 0005, G: s5ss_1
__EINVAL                        = 0006, G: s5ss_1
__EMFILE                        = 0007, G: s5ss_1
__ENFILE                        = 0008, G: s5ss_1
__ENOLCK                        = 0009, G: s5ss_1
__ENOMEM                        = 000A, G: s5ss_1
__ENOTSUP                       = 000B, G: s5ss_1
__EOK                           = 0000, G: s5ss_1
__EOVERFLOW                     = 000C, G: s5ss_1
__ERANGE                        = 000D, G: s5ss_1
__ESTAT                         = 000E, G: s5ss_1
__EWOULDBLOCK                   = 000F, G: s5ss_1
__Exit                          = 00CC, G: s5ss_1
__MMAP                          = 0000, L: s5ss_1
__SDCC                          = 0001, L: __stdio_nextarg_bc
__SDCC                          = 0001, L: __stdio_nextarg_de
__SDCC                          = 0001, L: __stdio_nextarg_hl
__SDCC                          = 0001, L: __stdio_printf_ii
__SDCC                          = 0001, L: __stdio_printf_number_tail_long
__SDCC                          = 0001, L: __stdio_varg
__SDCC                          = 0001, L: asm__fflushall_unlocked
__SDCC                          = 0001, L: asm_fflush_unlocked
__SDCC                          = 0001, L: asm_ultoa
__SDCC                          = 0001, L: asm_utoa
__SDCC                          = 0001, L: asm_vfprintf_unlocked
__SDCC                          = 0001, L: asm_vioctl
__SDCC                          = 0001, L: character_00_input_stdio_msg_getc
__SDCC                          = 0001, L: character_00_input_stdio_msg_read
__SDCC                          = 0001, L: character_00_output_ochar_putc_bin
__SDCC                          = 0001, L: console_01_input_terminal_fdriver
__SDCC                          = 0001, L: error_eacces_mc
__SDCC                          = 0001, L: error_ebdfd_mc
__SDCC                          = 0001, L: error_ebdfd_zc
__SDCC                          = 0001, L: error_edom_mc
__SDCC                          = 0001, L: error_einval_mc
__SDCC                          = 0001, L: error_einval_zc
__SDCC                          = 0001, L: error_enolck_mc
__SDCC                          = 0001, L: error_enolck_zc
__SDCC                          = 0001, L: error_enotsup_mc
__SDCC                          = 0001, L: error_enotsup_zc
__SDCC                          = 0001, L: error_erange_mc
__SDCC                          = 0001, L: error_erange_zc
__SDCC                          = 0001, L: l_atou
__SDCC                          = 0001, L: l_divu_16_16x8
__SDCC                          = 0001, L: l_divu_32_32x8
__SDCC                          = 0001, L: l_utoa
__SDCC                          = 0001, L: printf
__SDCC_IY                       = 0001, L: __stdio_nextarg_bc
__SDCC_IY                       = 0001, L: __stdio_nextarg_de
__SDCC_IY                       = 0001, L: __stdio_nextarg_hl
__SDCC_IY                       = 0001, L: __stdio_printf_ii
__SDCC_IY                       = 0001, L: __stdio_printf_number_tail_long
__SDCC_IY                       = 0001, L: __stdio_varg
__SDCC_IY                       = 0001, L: asm__fflushall_unlocked
__SDCC_IY                       = 0001, L: asm_fflush_unlocked
__SDCC_IY                       = 0001, L: asm_ultoa
__SDCC_IY                       = 0001, L: asm_utoa
__SDCC_IY                       = 0001, L: asm_vfprintf_unlocked
__SDCC_IY                       = 0001, L: asm_vioctl
__SDCC_IY                       = 0001, L: character_00_input_stdio_msg_getc
__SDCC_IY                       = 0001, L: character_00_input_stdio_msg_read
__SDCC_IY                       = 0001, L: character_00_output_ochar_putc_bin
__SDCC_IY                       = 0001, L: console_01_input_terminal_fdriver
__SDCC_IY                       = 0001, L: error_eacces_mc
__SDCC_IY                       = 0001, L: error_ebdfd_mc
__SDCC_IY                       = 0001, L: error_ebdfd_zc
__SDCC_IY                       = 0001, L: error_edom_mc
__SDCC_IY                       = 0001, L: error_einval_mc
__SDCC_IY                       = 0001, L: error_einval_zc
__SDCC_IY                       = 0001, L: error_enolck_mc
__SDCC_IY                       = 0001, L: error_enolck_zc
__SDCC_IY                       = 0001, L: error_enotsup_mc
__SDCC_IY                       = 0001, L: error_enotsup_zc
__SDCC_IY                       = 0001, L: error_erange_mc
__SDCC_IY                       = 0001, L: error_erange_zc
__SDCC_IY                       = 0001, L: l_atou
__SDCC_IY                       = 0001, L: l_divu_16_16x8
__SDCC_IY                       = 0001, L: l_divu_32_32x8
__SDCC_IY                       = 0001, L: l_utoa
__SDCC_IY                       = 0001, L: printf
__Start                         = 009C, G: s5ss_1
___str_0                        = 0B5C, L: s5ss_
__bool                          = 033B, L: asm_vioctl
__ch_system                     = 02AE, G: s5ss_1
__clib_balloc_table_size        = 0000, L: s5ss_1
__clib_exit_stack_size          = 0002, L: s5ss_1
__clib_fopen_max                = 0000, L: s5ss_1
__clib_malloc_heap_size         = FFFFFFFF, L: s5ss_1
__clib_open_max                 = 0000, L: s5ss_1
__clib_quickexit_stack_size     = 0000, L: s5ss_1
__clib_stdio_heap_size          = 0080, L: s5ss_1
__crt_enable_close              = 0001, L: s5ss_1
__crt_initialize_bss            = 0000, L: s5ss_1
__crt_model                     = 0000, L: s5ss_1
__crt_org_bss                   = 0000, L: s5ss_1
__crt_org_code                  = 0000, L: s5ss_1
__crt_org_data                  = 0000, L: s5ss_1
__crt_stack_size                = 0200, L: s5ss_1
__error_stream                  = 06F6, L: asm_vfprintf_unlocked
__exit_stack                    = 0C77, G: s5ss_1
__exit_stack_size               = 0002, G: s5ss_1
__fcntl_fdchain_descend         = 037D, G: __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_1      = 038F, G: __fcntl_fdstruct_from_fd_1
__fcntl_fdstruct_from_fd_2      = 0384, G: __fcntl_fdstruct_from_fd_2
__fcntl_fdtbl                   = 0C32, G: s5ss_1
__fcntl_fdtbl_size              = 0003, G: s5ss_1
__format_loop                   = 054C, L: asm_vfprintf_unlocked
__getf                          = 0356, L: asm_vioctl
__i_fcntl_fdstruct_0            = 0BBE, L: s5ss_1
__i_fcntl_fdstruct_1            = 0BD5, L: s5ss_1
__i_fcntl_fdstruct_2            = 0000, L: character_00_output_stdio_msg_writ
__i_fcntl_fdstruct_2            = 0BD5, L: s5ss_1
__i_fcntl_heap_0                = 0BB8, L: s5ss_1
__i_fcntl_heap_1                = 0BCF, L: s5ss_1
__i_fcntl_heap_2                = 0BE6, L: s5ss_1
__i_fcntl_heap_3                = 0C30, L: s5ss_1
__i_stdio_file_0                = 0C3A, L: s5ss_1
__i_stdio_file_1                = 0C4B, L: s5ss_1
__i_stdio_file_2                = 0C5C, L: s5ss_1
__malloc_heap                   = 0BAE, G: s5ss_1
__quickexit_stack               = 0C7C, G: s5ss_1
__quickexit_stack_size          = 0000, G: s5ss_1
__setf                          = 0342, L: asm_vioctl
__stdio_block                   = 0BB2, L: s5ss_1
__stdio_closed_file_list        = 0C6D, G: s5ss_1
__stdio_heap                    = 0BB0, G: s5ss_1
__stdio_length_modifier         = 0709, G: __stdio_length_modifier
__stdio_nextarg_bc              = 0A8D, G: __stdio_nextarg_bc
__stdio_nextarg_de              = 0737, G: __stdio_nextarg_de
__stdio_nextarg_hl              = 07E0, G: __stdio_nextarg_hl
__stdio_open_file_list          = 0C6B, G: s5ss_1
__stdio_printf_bb               = 07B5, G: __stdio_printf_bb
__stdio_printf_c                = 07BB, G: __stdio_printf_c
__stdio_printf_d                = 07E5, G: __stdio_printf_d
__stdio_printf_ii               = 07EB, G: __stdio_printf_ii
__stdio_printf_lbb              = 0847, G: __stdio_printf_lbb
__stdio_printf_ld               = 084D, G: __stdio_printf_ld
__stdio_printf_ln               = 0853, G: __stdio_printf_ln
__stdio_printf_lo               = 0868, G: __stdio_printf_lo
__stdio_printf_lp               = 086E, G: __stdio_printf_lp
__stdio_printf_lu               = 0888, G: __stdio_printf_lu
__stdio_printf_lx               = 088E, G: __stdio_printf_lx
__stdio_printf_n                = 0894, G: __stdio_printf_n
__stdio_printf_number_tail      = 08DC, G: __stdio_printf_number_tail
__stdio_printf_number_tail_int  = 08A7, G: __stdio_printf_number_tail_int
__stdio_printf_number_tail_long = 098F, G: __stdio_printf_number_tail_long
__stdio_printf_number_tail_uint = 08BB, G: __stdio_printf_number_tail_int
__stdio_printf_number_tail_ulong = 09A9, G: __stdio_printf_number_tail_long
__stdio_printf_number_tail_zero = 08CF, G: __stdio_printf_number_tail
__stdio_printf_o                = 09D2, G: __stdio_printf_o
__stdio_printf_p                = 09D8, G: __stdio_printf_p
__stdio_printf_padding_precision = 0A5A, G: __stdio_send_output
__stdio_printf_padding_precision_bc = 0A5A, G: __stdio_send_output
__stdio_printf_padding_precision_hl = 0A58, G: __stdio_send_output
__stdio_printf_padding_width    = 0A60, G: __stdio_send_output
__stdio_printf_padding_width_bc = 0A60, G: __stdio_send_output
__stdio_printf_padding_width_hl = 0A5E, G: __stdio_send_output
__stdio_printf_s                = 09F2, G: __stdio_printf_s
__stdio_printf_sign             = 0A35, G: __stdio_printf_sign
__stdio_printf_sign_0           = 0A38, G: __stdio_printf_sign
__stdio_printf_u                = 0A4C, G: __stdio_printf_u
__stdio_printf_x                = 0A52, G: __stdio_printf_x
__stdio_send_output             = 0A6E, G: __stdio_send_output
__stdio_send_output_buffer      = 0A69, G: __stdio_send_output
__stdio_send_output_chars       = 0A62, G: __stdio_send_output
__stdio_varg_2                  = 073C, G: __stdio_varg
__stdio_verify_output           = 0743, G: __stdio_verify_output
__thrd_id                       = 0C71, G: s5ss_1
__thread_block_timeout          = 03A8, G: s5ss_1
__thread_context_switch         = 03A8, G: s5ss_1
__thread_unblock                = 03A8, G: s5ss_1
_errno                          = 0C75, G: _errno
_ictl_messages                  = 01AC, L: character_00_input_stdio_msg_ictl
_main                           = 0B50, G: s5ss_
_printf                         = 052C, G: printf
_printf_unlocked                = 052C, G: printf_unlocked
_return_join_2                  = 06E1, L: asm_vfprintf_unlocked
_return_join_4                  = 06DC, L: asm_vfprintf_unlocked
_stderr                         = 0C5A, G: s5ss_1
_stdin                          = 0C38, G: s5ss_1
_stdout                         = 0C49, G: s5ss_1
acon_tbl                        = 0688, L: asm_vfprintf_unlocked
alpha                           = 0471, L: l_num2char
asm0_exit                       = 0A95, G: asm_exit
asm0_fflush_unlocked            = 076F, G: asm_fflush_unlocked
asm0_ultoa                      = 0ABA, G: asm_ultoa
asm0_utoa                       = 0AE1, G: asm_utoa
asm0_vfprintf_unlocked          = 053F, G: asm_vfprintf_unlocked
asm1_fflush_unlocked            = 076F, G: asm_fflush_unlocked
asm1_ultoa                      = 0AC0, G: asm_ultoa
asm1_utoa                       = 0AE7, G: asm_utoa
asm1_vfprintf_unlocked          = 053B, G: asm_vfprintf_unlocked
asm__fflushall_unlocked         = 07A4, G: asm__fflushall_unlocked
asm__memlwr                     = 0B21, G: asm__memlwr
asm_exit                        = 0A92, G: asm_exit
asm_fflush_unlocked             = 0768, G: asm_fflush_unlocked
asm_heap_init                   = 00D7, G: asm_heap_init
asm_mtx_init                    = 0B31, G: asm_mtx_init
asm_p_forward_list_front        = 00D1, G: asm_p_forward_list_front
asm_p_forward_list_next         = 00D1, G: asm_p_forward_list_next
asm_printf_unlocked             = 052C, G: asm_printf_unlocked
asm_strchrnul                   = 0B07, G: asm_strchrnul
asm_strnlen                     = 0B11, G: asm_strnlen
asm_tolower                     = 00F9, G: asm_tolower
asm_ultoa                       = 0AB3, G: asm_ultoa
asm_utoa                        = 0ADC, G: asm_utoa
asm_vfprintf_unlocked           = 053B, G: asm_vfprintf_unlocked
asm_vioctl                      = 0309, G: asm_vioctl
asm_vioctl_driver               = 0361, G: asm_vioctl
asm_vprintf_unlocked            = 0534, G: asm_vprintf_unlocked
bc_larger                       = 044E, L: l_maxu_bc_hl
bios_load_byte_instruction      = 008C, G: s5ss_1
bios_load_word_instruction      = 0093, G: s5ss_1
bios_reset_init                 = 006C, G: s5ss_1
bios_trap_illegal               = 006B, G: s5ss_1
bios_var_base                   = 0040, L: s5ss_1
bios_var_ram_page               = 0042, L: s5ss_1
bios_var_ram_top                = 0040, L: s5ss_1
character_00_input              = 0136, G: character_00_input
character_00_input_stdio_msg_eatc = 015C, G: character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_getc = 017E, G: character_00_input_stdio_msg_getc
character_00_input_stdio_msg_ictl = 019E, G: character_00_input_stdio_msg_ictl
character_00_input_stdio_msg_read = 01B3, G: character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = 01DD, G: character_00_input_stdio_msg_seek
character_00_output             = 020B, G: character_00_output
character_00_output_ochar_msg_putc_bin = 0231, G: character_00_output_ochar_putc_bin
character_00_output_stdio_msg_ictl = 024B, G: character_00_output_stdio_msg_ictl
character_00_output_stdio_msg_putc = 025B, G: character_00_output_stdio_msg_putc
character_00_output_stdio_msg_writ = 026F, G: character_00_output_stdio_msg_writ
common_spec                     = 0615, L: asm_vfprintf_unlocked
compute_lp                      = 0AC2, L: asm_ultoa
compute_lp                      = 0AEE, L: asm_utoa
console_01_input_terminal_fdriver = 0102, G: console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = 0102, G: console_01_output_terminal_fdriver
converter_specifier             = 05FF, L: asm_vfprintf_unlocked
cr                              = 0197, L: character_00_input_stdio_msg_getc
critical_section                = 0309, L: asm_vioctl
deliver_message                 = 0327, L: asm_vioctl
device_reset_error              = 010A, G: device_reset_error
device_return_error             = 0113, G: device_return_error
device_set_error                = 011A, G: device_set_error
divide                          = 0430, L: l_small_utoa
divide_zero                     = 0528, L: l_small_divu_16_16x16
divide_zero                     = 04ED, L: l_small_divu_32_32x32
divisor_sixteen_bit             = 04FA, L: l_small_divu_16_16x16
divloop                         = 0432, L: l_small_utoa
eatc_exit                       = 017B, L: character_00_input_stdio_msg_eatc
eatc_loop                       = 0161, L: character_00_input_stdio_msg_eatc
end_precision                   = 05FA, L: asm_vfprintf_unlocked
errno_mc                        = 029A, G: errno_mc
error_detected                  = 0A83, L: __stdio_send_output
error_divide_by_zero_mc         = 02DD, G: error_divide_by_zero_mc
error_eacces_mc                 = 02CE, G: error_eacces_mc
error_ebdfd_mc                  = 0304, G: error_ebdfd_mc
error_ebdfd_zc                  = 02FD, G: error_ebdfd_zc
error_edom_mc                   = 02DD, G: error_edom_mc
error_einval_mc                 = 02BC, G: error_einval_mc
error_einval_zc                 = 02B6, G: error_einval_zc
error_enolck_mc                 = 0290, G: error_enolck_mc
error_enolck_zc                 = 028A, G: error_enolck_zc
error_enotsup_mc                = 02E9, G: error_enotsup_mc
error_enotsup_zc                = 02E3, G: error_enotsup_zc
error_erange_mc                 = 02C8, G: error_erange_mc
error_erange_zc                 = 02C2, G: error_erange_zc
error_format_precision          = 06EF, L: asm_vfprintf_unlocked
error_format_width              = 06F0, L: asm_vfprintf_unlocked
error_lzc                       = 02EF, G: error_lzc
error_lznc                      = 02F6, G: error_lznc
error_mc                        = 02A5, G: error_mc
error_printf_converter          = 0704, L: asm_vfprintf_unlocked
error_stream                    = 06F3, L: asm_vfprintf_unlocked
error_zc                        = 02AE, G: error_zc
error_znc                       = 02D6, G: error_znc
errors                          = 0760, L: __stdio_verify_output
exit                            = 0A7E, L: __stdio_send_output
exit_error                      = 01B1, L: character_00_input_stdio_msg_ictl
exit_error                      = 0259, L: character_00_output_stdio_msg_ictl
external_required               = 090E, L: __stdio_printf_number_tail
file_loop                       = 07A7, L: asm__fflushall_unlocked
find_driver_loop                = 0317, L: asm_vioctl
flag_chars                      = 057B, L: asm_vfprintf_unlocked
flag_found                      = 05B4, L: asm_vfprintf_unlocked
flags                           = 0588, L: asm_vfprintf_unlocked
flags_id                        = 058F, L: asm_vfprintf_unlocked
format_end                      = 056E, L: asm_vfprintf_unlocked
format_loop                     = 054A, L: asm_vfprintf_unlocked
forward_flush                   = 0799, L: asm_fflush_unlocked
forward_ioctl                   = 034D, L: asm_vioctl
hex_base                        = 094E, L: __stdio_printf_number_tail
internal_required               = 08F0, L: __stdio_printf_number_tail
interpret                       = 0585, L: asm_vfprintf_unlocked
isr_null_vector                 = 0069, G: s5ss_1
l0_divu_16_16x8                 = 0516, G: l_divu_16_16x8
l0_divu_32_32x8                 = 0493, G: l_divu_32_32x8
l0_small_divu_16_16x16          = 04F6, G: l_small_divu_16_16x16
l0_small_divu_16_16x8           = 0516, G: l_small_divu_16_16x16
l0_small_divu_32_32x32          = 04AB, G: l_small_divu_32_32x32
l1_small_divu_32_32x32          = 04B9, G: l_small_divu_32_32x32
l_addu_hl_bc                    = 0463, G: l_addu_hl_bc
l_addu_hl_de                    = 0440, G: l_addu_hl_de
l_atou                          = 03CA, G: l_atou
l_decu_dehl                     = 0481, G: l_decu_dehl
l_divu_16_16x8                  = 0512, G: l_divu_16_16x8
l_divu_32_32x8                  = 0492, G: l_divu_32_32x8
l_jphl                          = 0469, G: l_jphl
l_jpix                          = 03A5, G: l_jpix
l_maxu_bc_hl                    = 0446, G: l_maxu_bc_hl
l_neg_dehl                      = 0451, G: l_neg_dehl
l_neg_hl                        = 03F2, G: l_neg_hl
l_num2char                      = 046A, G: l_num2char
l_ret                           = 03A8, G: l_ret
l_setmem_hl                     = 03C9, G: l_setmem_hl
l_small_atou                    = 03CA, G: l_small_atou
l_small_divu_16_16x16           = 04F2, G: l_small_divu_16_16x16
l_small_divu_16_16x8            = 0512, G: l_small_divu_16_16x16
l_small_divu_32_32x32           = 04A5, G: l_small_divu_32_32x32
l_small_utoa                    = 0401, G: l_small_utoa
l_utoa                          = 0401, G: l_utoa
l_utoa_lib                      = 0414, G: l_small_utoa
l_utod_de                       = 0439, G: l_utod_de
l_utod_hl                       = 03FA, G: l_utod_hl
l_valid_base                    = 0474, G: l_valid_base
last_was_read                   = 077C, L: asm_fflush_unlocked
last_was_write                  = 0799, L: asm_fflush_unlocked
lcon_tbl                        = 06B6, L: asm_vfprintf_unlocked
leading_zeroes                  = 0422, L: l_small_utoa
left_justify                    = 07D2, L: __stdio_printf_c
left_justify                    = 0831, L: __stdio_printf_ii
left_justify                    = 0985, L: __stdio_printf_number_tail
left_justify                    = 0A22, L: __stdio_printf_s
length_modifier                 = 05FC, L: asm_vfprintf_unlocked
limit                           = 048D, L: l_decu_dehl
lm_chars                        = 072B, L: __stdio_length_modifier
lm_double                       = 0722, L: __stdio_length_modifier
lm_found                        = 0719, L: __stdio_length_modifier
lm_loop                         = 070F, L: __stdio_length_modifier
long_spec                       = 0626, L: asm_vfprintf_unlocked
loop                            = 0B25, L: asm__memlwr
loop                            = 0AA1, L: asm_exit
loop                            = 0B07, L: asm_strchrnul
loop                            = 03CF, L: l_small_atou
loop_0                          = 04BC, L: l_small_divu_32_32x32
loop_16_0                       = 0500, L: l_small_divu_16_16x16
loop_16_1                       = 0508, L: l_small_divu_16_16x16
loop_1                          = 04D8, L: l_small_divu_32_32x32
loop_8_0                        = 051A, L: l_small_divu_16_16x16
loop_8_1                        = 0523, L: l_small_divu_16_16x16
loop_8_2                        = 0521, L: l_small_divu_16_16x16
match_con                       = 0674, L: asm_vfprintf_unlocked
match_ret                       = 0680, L: asm_vfprintf_unlocked
msw                             = 0487, L: l_decu_dehl
mtx_plain                       = 0001, G: s5ss_1
mtx_recursive                   = 0002, G: s5ss_1
mtx_timed                       = 0004, G: s5ss_1
no_base_indicator               = 0906, L: __stdio_printf_number_tail
no_base_indicator_2             = 095A, L: __stdio_printf_number_tail
no_leading_zeroes               = 0416, L: l_small_utoa
no_prefix_chars                 = 0967, L: __stdio_printf_number_tail
no_sign                         = 08F8, L: __stdio_printf_number_tail
not_negative                    = 0A3F, L: __stdio_printf_sign
not_plus                        = 0A46, L: __stdio_printf_sign
notend                          = 0B1E, L: asm_strnlen
null_s                          = 0A2E, L: __stdio_printf_s
num_is_zero                     = 0981, L: __stdio_printf_number_tail
number_zero                     = 090F, L: __stdio_printf_number_tail
octal_base                      = 0959, L: __stdio_printf_number_tail
out_internal                    = 092E, L: __stdio_printf_number_tail
output_char                     = 07CC, L: __stdio_printf_c
overflow                        = 03EF, L: l_small_atou
padding_required                = 0820, L: __stdio_printf_ii
padding_required                = 0A11, L: __stdio_printf_s
precision                       = 05C6, L: asm_vfprintf_unlocked
precision_defined               = 087A, L: __stdio_printf_lp
precision_defined               = 09E4, L: __stdio_printf_p
precision_from_format           = 05EF, L: asm_vfprintf_unlocked
precision_positive              = 05EA, L: asm_vfprintf_unlocked
precision_specified             = 0A05, L: __stdio_printf_s
printf_I                        = 0635, L: asm_vfprintf_unlocked
printf_invoke                   = 0654, L: asm_vfprintf_unlocked
printf_invoke_flags             = 063F, L: asm_vfprintf_unlocked
printf_return_2                 = 06E0, L: asm_vfprintf_unlocked
printf_return_4                 = 06DB, L: asm_vfprintf_unlocked
printf_return_is_2              = 063C, L: asm_vfprintf_unlocked
printf_return_is_4              = 0630, L: asm_vfprintf_unlocked
putc_loop                       = 025F, L: character_00_output_stdio_msg_putc
putchar                         = 0247, L: character_00_output_ochar_putc_bin
rcon_tbl                        = 0691, L: asm_vfprintf_unlocked
read_exit                       = 01CA, L: character_00_input_stdio_msg_read
read_exit_error                 = 01D2, L: character_00_input_stdio_msg_read
read_loop                       = 01B4, L: character_00_input_stdio_msg_read
reject_cr                       = 0186, L: character_00_input_stdio_msg_getc
resetWarm                       = 0085, L: s5ss_1
right_justify                   = 07C5, L: __stdio_printf_c
right_justify                   = 0826, L: __stdio_printf_ii
right_justify                   = 0926, L: __stdio_printf_number_tail
right_justify                   = 0A17, L: __stdio_printf_s
seek_loop                       = 01E9, L: character_00_input_stdio_msg_seek
signed_join                     = 08C2, L: __stdio_printf_number_tail_int
signed_join                     = 09B6, L: __stdio_printf_number_tail_long
skip_00                         = 0647, L: asm_vfprintf_unlocked
skip_11                         = 064F, L: asm_vfprintf_unlocked
spacing_ok                      = 091F, L: __stdio_printf_number_tail
startup                         = 0000, L: s5ss_1
stream_error                    = 096C, L: __stdio_printf_number_tail
string_valid                    = 09FC, L: __stdio_printf_s
thrd_busy                       = 0004, G: s5ss_1
thrd_error                      = 0001, G: s5ss_1
thrd_nomem                      = 0002, G: s5ss_1
thrd_success                    = 0000, G: s5ss_1
thrd_timedout                   = 0008, G: s5ss_1
unknown_type                    = 0B4B, L: asm_mtx_init
unrecognized                    = 061D, L: asm_vfprintf_unlocked
width                           = 0599, L: asm_vfprintf_unlocked
width_from_format               = 05B9, L: asm_vfprintf_unlocked
width_padding                   = 07D9, L: __stdio_printf_c
width_positive                  = 05AF, L: asm_vfprintf_unlocked
writ_end                        = 0284, L: character_00_output_stdio_msg_writ
writ_loop                       = 0273, L: character_00_output_stdio_msg_writ
write1s                         = 042A, L: l_small_utoa
write                           = 0425, L: l_small_utoa
write_lp                        = 0AD5, L: asm_ultoa
write_lp                        = 0B00, L: asm_utoa
write_octet                     = 083E, L: __stdio_printf_ii
zalt_00_input_sysctrl           = 0127, G: zalt_00_input_sysctrl_driver
zalt_00_input_sysctrl_ichar_msg_getc = 012E, L: zalt_00_input_sysctrl_driver
zalt_00_output_sysctrl          = 01FF, G: zalt_00_output_sysctrl_driver
zalt_00_output_sysctrl_ochar_msg_putc = 0206, L: zalt_00_output_sysctrl_driver
zero                            = 09CE, L: __stdio_printf_number_tail_long


TAR__clib_malloc_heap_size      = FFFFFFFF, L: s5ss_1
__clib_malloc_heap_size         = FFFFFFFF, L: s5ss_1
ASMHEAD                         = 0000, G: 
ASMHEAD_CODE                    = 0000, G: 
ASMSIZE_BSS_END                 = 0000, G: 
ASMSIZE_BSS_UNINITIALIZED       = 0000, G: 
ASMSIZE_CODE_END                = 0000, G: 
ASMSIZE_DATA_END                = 0000, G: 
ASMSIZE_IGNORE                  = 0000, G: 
ASMSIZE_bss_alloc_balloc        = 0000, G: 
ASMSIZE_bss_alloc_malloc        = 0000, G: 
ASMSIZE_bss_arch                = 0000, G: 
ASMSIZE_bss_clib                = 0000, G: 
ASMSIZE_bss_compiler            = 0000, G: 
ASMSIZE_bss_driver              = 0000, G: 
ASMSIZE_bss_fcntl               = 0000, G: 
ASMSIZE_bss_font                = 0000, G: 
ASMSIZE_bss_input               = 0000, G: 
ASMSIZE_bss_lib                 = 0000, G: 
ASMSIZE_bss_sound_bit           = 0000, G: 
ASMSIZE_bss_stdio               = 0000, G: 
ASMSIZE_bss_string              = 0000, G: 
ASMSIZE_bss_user                = 0000, G: 
ASMSIZE_code_adt_b_array        = 0000, G: 
ASMSIZE_code_adt_b_vector       = 0000, G: 
ASMSIZE_code_adt_ba_priority_queue = 0000, G: 
ASMSIZE_code_adt_ba_stack       = 0000, G: 
ASMSIZE_code_adt_bv_priority_queue = 0000, G: 
ASMSIZE_code_adt_bv_stack       = 0000, G: 
ASMSIZE_code_adt_p_forward_list_alt = 0000, G: 
ASMSIZE_code_adt_p_list         = 0000, G: 
ASMSIZE_code_adt_p_queue        = 0000, G: 
ASMSIZE_code_adt_p_stack        = 0000, G: 
ASMSIZE_code_adt_w_array        = 0000, G: 
ASMSIZE_code_adt_w_vector       = 0000, G: 
ASMSIZE_code_adt_wa_priority_queue = 0000, G: 
ASMSIZE_code_adt_wa_stack       = 0000, G: 
ASMSIZE_code_adt_wv_priority_queue = 0000, G: 
ASMSIZE_code_adt_wv_stack       = 0000, G: 
ASMSIZE_code_alloc_balloc       = 0000, G: 
ASMSIZE_code_alloc_obstack      = 0000, G: 
ASMSIZE_code_arch               = 0000, G: 
ASMSIZE_code_bifrost2           = 0000, G: 
ASMSIZE_code_bifrost_h          = 0000, G: 
ASMSIZE_code_bifrost_l          = 0000, G: 
ASMSIZE_code_clib               = 0000, G: 
ASMSIZE_code_compress_zx7       = 0000, G: 
ASMSIZE_code_crt_common         = 0000, G: 
ASMSIZE_code_crt_exit           = 0000, G: 
ASMSIZE_code_driver             = 0000, G: 
ASMSIZE_code_driver_memstream   = 0000, G: 
ASMSIZE_code_driver_terminal_input = 0000, G: 
ASMSIZE_code_driver_terminal_output = 0000, G: 
ASMSIZE_code_driver_tty         = 0000, G: 
ASMSIZE_code_font               = 0000, G: 
ASMSIZE_code_font_fzx           = 0000, G: 
ASMSIZE_code_fp_genmath         = 0000, G: 
ASMSIZE_code_fp_math48          = 0000, G: 
ASMSIZE_code_input              = 0000, G: 
ASMSIZE_code_inttypes           = 0000, G: 
ASMSIZE_code_l_sccz80           = 0000, G: 
ASMSIZE_code_l_sdcc             = 0000, G: 
ASMSIZE_code_lib                = 0000, G: 
ASMSIZE_code_locale             = 0000, G: 
ASMSIZE_code_network            = 0000, G: 
ASMSIZE_code_nirvanam           = 0000, G: 
ASMSIZE_code_nirvanap           = 0000, G: 
ASMSIZE_code_setjmp             = 0000, G: 
ASMSIZE_code_sound_bit          = 0000, G: 
ASMSIZE_code_temp_sp1           = 0000, G: 
ASMSIZE_code_threads            = 0000, G: 
ASMSIZE_code_user               = 0000, G: 
ASMSIZE_code_z80                = 0000, G: 
ASMSIZE_data_alloc_balloc       = 0000, G: 
ASMSIZE_data_clib               = 0000, G: 
ASMSIZE_data_driver             = 0000, G: 
ASMSIZE_data_font               = 0000, G: 
ASMSIZE_data_lib                = 0000, G: 
ASMSIZE_data_sound_bit          = 0000, G: 
ASMSIZE_data_stdlib             = 0000, G: 
ASMSIZE_data_user               = 0000, G: 
ASMSIZE_rodata_clib             = 0000, G: 
ASMSIZE_rodata_compiler         = 0000, G: 
ASMSIZE_rodata_driver           = 0000, G: 
ASMSIZE_rodata_fcntl            = 0000, G: 
ASMSIZE_rodata_font             = 0000, G: 
ASMSIZE_rodata_font_4x8         = 0000, G: 
ASMSIZE_rodata_font_8x8         = 0000, G: 
ASMSIZE_rodata_font_fzx         = 0000, G: 
ASMSIZE_rodata_input            = 0000, G: 
ASMSIZE_rodata_lib              = 0000, G: 
ASMSIZE_rodata_sound_bit        = 0000, G: 
ASMSIZE_rodata_stdio            = 0000, G: 
ASMSIZE_rodata_stdlib           = 0000, G: 
ASMSIZE_rodata_user             = 0000, G: 
ASMSIZE_smc_clib                = 0000, G: 
ASMSIZE_smc_compiler            = 0000, G: 
ASMSIZE_smc_driver              = 0000, G: 
ASMSIZE_smc_fcntl               = 0000, G: 
ASMSIZE_smc_font                = 0000, G: 
ASMSIZE_smc_l                   = 0000, G: 
ASMSIZE_smc_lib                 = 0000, G: 
ASMSIZE_smc_sound_bit           = 0000, G: 
ASMSIZE_smc_user                = 0000, G: 
IOCTL_RESET                     = 0000, G: s5ss_1
STDIO_SEEK_SET                  = 0000, G: s5ss_1
TAR__clib_balloc_table_size     = 0000, L: s5ss_1
TAR__clib_fopen_max             = 0000, L: s5ss_1
TAR__clib_open_max              = 0000, L: s5ss_1
TAR__clib_quickexit_stack_size  = 0000, L: s5ss_1
TAR__crt_enable_commandline     = 0000, L: s5ss_1
TAR__crt_enable_nmi             = 0000, L: s5ss_1
TAR__crt_enable_restart         = 0000, L: s5ss_1
TAR__crt_enable_rst             = 0000, L: s5ss_1
TAR__crt_initialize_bss         = 0000, L: s5ss_1
TAR__crt_model                  = 0000, L: s5ss_1
TAR__crt_org_bss                = 0000, L: s5ss_1
TAR__crt_org_code               = 0000, L: s5ss_1
TAR__crt_org_data               = 0000, L: s5ss_1
TAR__register_sp                = 0000, L: s5ss_1
__CLIB_OPT_IMATH                = 0000, L: l_divu_16_16x8
__CLIB_OPT_IMATH                = 0000, L: l_divu_32_32x8
__CLIB_OPT_MULTITHREAD          = 0000, L: asm__fflushall_unlocked
__CLIB_OPT_MULTITHREAD          = 0000, L: asm_vioctl
__CLIB_OPT_MULTITHREAD          = 0000, L: printf
__CLIB_OPT_NUM2TXT              = 0000, L: asm_ultoa
__CLIB_OPT_NUM2TXT              = 0000, L: asm_utoa
__CLIB_OPT_NUM2TXT_SELECT       = 0000, L: l_utoa
__CLIB_OPT_STDIO                = 0000, L: asm_fflush_unlocked
__CLIB_OPT_STDIO                = 0000, L: asm_vfprintf_unlocked
__CLIB_OPT_TXT2NUM_SELECT       = 0000, L: l_atou
__CRTDEF                        = 0000, L: s5ss_1
__EOK                           = 0000, G: s5ss_1
__MMAP                          = 0000, L: s5ss_1
__clib_balloc_table_size        = 0000, L: s5ss_1
__clib_fopen_max                = 0000, L: s5ss_1
__clib_open_max                 = 0000, L: s5ss_1
__clib_quickexit_stack_size     = 0000, L: s5ss_1
__crt_initialize_bss            = 0000, L: s5ss_1
__crt_model                     = 0000, L: s5ss_1
__crt_org_bss                   = 0000, L: s5ss_1
__crt_org_code                  = 0000, L: s5ss_1
__crt_org_data                  = 0000, L: s5ss_1
__i_fcntl_fdstruct_2            = 0000, L: character_00_output_stdio_msg_writ
__quickexit_stack_size          = 0000, G: s5ss_1
startup                         = 0000, L: s5ss_1
thrd_success                    = 0000, G: s5ss_1
ASMSIZE_BSS                     = 0001, G: 
ASMSIZE_DATA                    = 0001, G: 
ASMSIZE_data_threads            = 0001, G: 
ASMSIZE_rodata_error_string_end = 0001, G: 
DEFINED_Z88DK_USES_SDCC         = 0001, L: s5ss_1
STDIO_MSG_PUTC                  = 0001, G: s5ss_1
STDIO_SEEK_CUR                  = 0001, G: s5ss_1
TAR__crt_enable_close           = 0001, L: s5ss_1
_CLIB_CFG_ASM_                  = 0001, L: asm__fflushall_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_fflush_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_ultoa
_CLIB_CFG_ASM_                  = 0001, L: asm_utoa
_CLIB_CFG_ASM_                  = 0001, L: asm_vfprintf_unlocked
_CLIB_CFG_ASM_                  = 0001, L: asm_vioctl
_CLIB_CFG_ASM_                  = 0001, L: character_00_input_stdio_msg_getc
_CLIB_CFG_ASM_                  = 0001, L: character_00_input_stdio_msg_read
_CLIB_CFG_ASM_                  = 0001, L: character_00_output_ochar_putc_bin
_CLIB_CFG_ASM_                  = 0001, L: console_01_input_terminal_fdriver
_CLIB_CFG_ASM_                  = 0001, L: error_eacces_mc
_CLIB_CFG_ASM_                  = 0001, L: error_ebdfd_mc
_CLIB_CFG_ASM_                  = 0001, L: error_ebdfd_zc
_CLIB_CFG_ASM_                  = 0001, L: error_edom_mc
_CLIB_CFG_ASM_                  = 0001, L: error_einval_mc
_CLIB_CFG_ASM_                  = 0001, L: error_einval_zc
_CLIB_CFG_ASM_                  = 0001, L: error_enolck_mc
_CLIB_CFG_ASM_                  = 0001, L: error_enolck_zc
_CLIB_CFG_ASM_                  = 0001, L: error_enotsup_mc
_CLIB_CFG_ASM_                  = 0001, L: error_enotsup_zc
_CLIB_CFG_ASM_                  = 0001, L: error_erange_mc
_CLIB_CFG_ASM_                  = 0001, L: error_erange_zc
_CLIB_CFG_ASM_                  = 0001, L: l_atou
_CLIB_CFG_ASM_                  = 0001, L: l_divu_16_16x8
_CLIB_CFG_ASM_                  = 0001, L: l_divu_32_32x8
_CLIB_CFG_ASM_                  = 0001, L: l_utoa
_CLIB_CFG_ASM_                  = 0001, L: printf
__CLIB_OPT_ERROR                = 0001, L: error_eacces_mc
__CLIB_OPT_ERROR                = 0001, L: error_ebdfd_mc
__CLIB_OPT_ERROR                = 0001, L: error_ebdfd_zc
__CLIB_OPT_ERROR                = 0001, L: error_edom_mc
__CLIB_OPT_ERROR                = 0001, L: error_einval_mc
__CLIB_OPT_ERROR                = 0001, L: error_einval_zc
__CLIB_OPT_ERROR                = 0001, L: error_enolck_mc
__CLIB_OPT_ERROR                = 0001, L: error_enolck_zc
__CLIB_OPT_ERROR                = 0001, L: error_enotsup_mc
__CLIB_OPT_ERROR                = 0001, L: error_enotsup_zc
__CLIB_OPT_ERROR                = 0001, L: error_erange_mc
__CLIB_OPT_ERROR                = 0001, L: error_erange_zc
__EACCES                        = 0001, G: s5ss_1
__SDCC                          = 0001, L: __stdio_nextarg_bc
__SDCC                          = 0001, L: __stdio_nextarg_de
__SDCC                          = 0001, L: __stdio_nextarg_hl
__SDCC                          = 0001, L: __stdio_printf_ii
__SDCC                          = 0001, L: __stdio_printf_number_tail_long
__SDCC                          = 0001, L: __stdio_varg
__SDCC                          = 0001, L: asm__fflushall_unlocked
__SDCC                          = 0001, L: asm_fflush_unlocked
__SDCC                          = 0001, L: asm_ultoa
__SDCC                          = 0001, L: asm_utoa
__SDCC                          = 0001, L: asm_vfprintf_unlocked
__SDCC                          = 0001, L: asm_vioctl
__SDCC                          = 0001, L: character_00_input_stdio_msg_getc
__SDCC                          = 0001, L: character_00_input_stdio_msg_read
__SDCC                          = 0001, L: character_00_output_ochar_putc_bin
__SDCC                          = 0001, L: console_01_input_terminal_fdriver
__SDCC                          = 0001, L: error_eacces_mc
__SDCC                          = 0001, L: error_ebdfd_mc
__SDCC                          = 0001, L: error_ebdfd_zc
__SDCC                          = 0001, L: error_edom_mc
__SDCC                          = 0001, L: error_einval_mc
__SDCC                          = 0001, L: error_einval_zc
__SDCC                          = 0001, L: error_enolck_mc
__SDCC                          = 0001, L: error_enolck_zc
__SDCC                          = 0001, L: error_enotsup_mc
__SDCC                          = 0001, L: error_enotsup_zc
__SDCC                          = 0001, L: error_erange_mc
__SDCC                          = 0001, L: error_erange_zc
__SDCC                          = 0001, L: l_atou
__SDCC                          = 0001, L: l_divu_16_16x8
__SDCC                          = 0001, L: l_divu_32_32x8
__SDCC                          = 0001, L: l_utoa
__SDCC                          = 0001, L: printf
__SDCC_IY                       = 0001, L: __stdio_nextarg_bc
__SDCC_IY                       = 0001, L: __stdio_nextarg_de
__SDCC_IY                       = 0001, L: __stdio_nextarg_hl
__SDCC_IY                       = 0001, L: __stdio_printf_ii
__SDCC_IY                       = 0001, L: __stdio_printf_number_tail_long
__SDCC_IY                       = 0001, L: __stdio_varg
__SDCC_IY                       = 0001, L: asm__fflushall_unlocked
__SDCC_IY                       = 0001, L: asm_fflush_unlocked
__SDCC_IY                       = 0001, L: asm_ultoa
__SDCC_IY                       = 0001, L: asm_utoa
__SDCC_IY                       = 0001, L: asm_vfprintf_unlocked
__SDCC_IY                       = 0001, L: asm_vioctl
__SDCC_IY                       = 0001, L: character_00_input_stdio_msg_getc
__SDCC_IY                       = 0001, L: character_00_input_stdio_msg_read
__SDCC_IY                       = 0001, L: character_00_output_ochar_putc_bin
__SDCC_IY                       = 0001, L: console_01_input_terminal_fdriver
__SDCC_IY                       = 0001, L: error_eacces_mc
__SDCC_IY                       = 0001, L: error_ebdfd_mc
__SDCC_IY                       = 0001, L: error_ebdfd_zc
__SDCC_IY                       = 0001, L: error_edom_mc
__SDCC_IY                       = 0001, L: error_einval_mc
__SDCC_IY                       = 0001, L: error_einval_zc
__SDCC_IY                       = 0001, L: error_enolck_mc
__SDCC_IY                       = 0001, L: error_enolck_zc
__SDCC_IY                       = 0001, L: error_enotsup_mc
__SDCC_IY                       = 0001, L: error_enotsup_zc
__SDCC_IY                       = 0001, L: error_erange_mc
__SDCC_IY                       = 0001, L: error_erange_zc
__SDCC_IY                       = 0001, L: l_atou
__SDCC_IY                       = 0001, L: l_divu_16_16x8
__SDCC_IY                       = 0001, L: l_divu_32_32x8
__SDCC_IY                       = 0001, L: l_utoa
__SDCC_IY                       = 0001, L: printf
__crt_enable_close              = 0001, L: s5ss_1
mtx_plain                       = 0001, G: s5ss_1
thrd_error                      = 0001, G: s5ss_1
ASMSIZE_bss_error               = 0002, G: 
ASMSIZE_data_alloc_malloc       = 0002, G: 
ASMSIZE_data_compiler           = 0002, G: 
ASMSIZE_data_fcntl              = 0002, G: 
ASMSIZE_data_fcntl_stdio_heap_tail = 0002, G: 
STDIO_MSG_WRIT                  = 0002, G: s5ss_1
STDIO_SEEK_END                  = 0002, G: s5ss_1
TAR__clib_exit_stack_size       = 0002, L: s5ss_1
__EBADF                         = 0002, G: s5ss_1
__clib_exit_stack_size          = 0002, L: s5ss_1
__exit_stack_size               = 0002, G: s5ss_1
mtx_recursive                   = 0002, G: s5ss_1
thrd_nomem                      = 0002, G: s5ss_1
STDIO_MSG_GETC                  = 0003, G: s5ss_1
__EBDFD                         = 0003, G: s5ss_1
__fcntl_fdtbl_size              = 0003, G: s5ss_1
ASMSIZE_code_crt_return         = 0004, G: 
STDIO_MSG_EATC                  = 0004, G: s5ss_1
__EDOM                          = 0004, G: s5ss_1
mtx_timed                       = 0004, G: s5ss_1
thrd_busy                       = 0004, G: s5ss_1
STDIO_MSG_READ                  = 0005, G: s5ss_1
__EFBIG                         = 0005, G: s5ss_1
ASMSIZE_bss_stdlib              = 0006, G: 
ASMSIZE_code_adt_p_forward_list = 0006, G: 
ASMSIZE_data_fcntl_fdtable_body = 0006, G: 
ASMSIZE_data_fcntl_stdio_heap_head = 0006, G: 
STDIO_MSG_SEEK                  = 0006, G: s5ss_1
__EINVAL                        = 0006, G: s5ss_1
ASMSIZE_code_crt_main           = 0007, G: 
STDIO_MSG_ICTL                  = 0007, G: s5ss_1
__EMFILE                        = 0007, G: s5ss_1
STDIO_MSG_FLSH                  = 0008, G: s5ss_1
__ENFILE                        = 0008, G: s5ss_1
thrd_timedout                   = 0008, G: s5ss_1
ASMSIZE_code_ctype              = 0009, G: 
STDIO_MSG_CLOS                  = 0009, G: s5ss_1
__ENOLCK                        = 0009, G: s5ss_1
CHAR_LF                         = 000A, L: character_00_input_stdio_msg_read
CHAR_LF                         = 000A, L: character_00_output_ochar_putc_bin
__ENOMEM                        = 000A, G: s5ss_1
__ENOTSUP                       = 000B, G: s5ss_1
__EOVERFLOW                     = 000C, G: s5ss_1
CHAR_CR                         = 000D, L: character_00_input_stdio_msg_getc
CHAR_CR                         = 000D, L: character_00_output_ochar_putc_bin
__ERANGE                        = 000D, G: s5ss_1
__ESTAT                         = 000E, G: s5ss_1
ICHAR_MSG_GETC                  = 000F, G: s5ss_1
ITERM_MSG_GETC                  = 000F, G: s5ss_1
__EAGAIN                        = 000F, G: s5ss_1
__EWOULDBLOCK                   = 000F, G: s5ss_1
ITERM_MSG_INTERRUPT             = 0010, G: s5ss_1
ITERM_MSG_PUTC                  = 0011, G: s5ss_1
ITERM_MSG_PRINT_CURSOR          = 0012, G: s5ss_1
ITERM_MSG_ERASE_CURSOR          = 0013, G: s5ss_1
ITERM_MSG_ERASE_CURSOR_PWD      = 0014, G: s5ss_1
ITERM_MSG_BS                    = 0015, G: s5ss_1
ITERM_MSG_BS_PWD                = 0016, G: s5ss_1
ITERM_MSG_READLINE_BEGIN        = 0017, G: s5ss_1
ITERM_MSG_READLINE_END          = 0018, G: s5ss_1
ITERM_MSG_BELL                  = 0019, G: s5ss_1
OCHAR_MSG_PUTC_BIN              = 001E, G: s5ss_1
OTERM_MSG_PUTC                  = 001E, G: s5ss_1
ASMSIZE_code_threads_mutex      = 001F, G: 
OTERM_MSG_TTY                   = 001F, G: s5ss_1
OCHAR_MSG_PUTC                  = 0020, G: s5ss_1
OTERM_MSG_PRINTC                = 0020, G: s5ss_1
OTERM_MSG_SCROLL                = 0021, G: s5ss_1
ASMSIZE_code_alloc_malloc       = 0022, G: 
OTERM_MSG_CLS                   = 0022, G: s5ss_1
OTERM_MSG_PAUSE                 = 0023, G: s5ss_1
ASMSIZE_code_crt_init           = 0024, G: 
OTERM_MSG_BELL                  = 0024, G: s5ss_1
ASMSIZE_code_driver_general     = 0025, G: 
OTERM_MSG_PSCROLL               = 0025, G: s5ss_1
ASMSIZE_code_compiler           = 0026, G: 
ASMSIZE_code_string             = 002A, G: 
ASMSIZE_rodata_error_strings    = 0036, G: 
ASMSIZE_data_stdio              = 0039, G: 
bios_var_base                   = 0040, L: s5ss_1
bios_var_ram_top                = 0040, L: s5ss_1
bios_var_ram_page               = 0042, L: s5ss_1
BiosFn1                         = 0068, L: s5ss_1
BiosFn2                         = 0068, L: s5ss_1
BiosFn3                         = 0068, L: s5ss_1
BiosFn4                         = 0068, L: s5ss_1
BiosFn5                         = 0068, L: s5ss_1
BiosFn6                         = 0068, L: s5ss_1
isr_null_vector                 = 0069, G: s5ss_1
bios_trap_illegal               = 006B, G: s5ss_1
bios_reset_init                 = 006C, G: s5ss_1
ASMSIZE_code_stdlib             = 0075, G: 
ASMSIZE_data_fcntl_stdio_heap_body = 0078, G: 
TAR__clib_stdio_heap_size       = 0080, L: s5ss_1
__clib_stdio_heap_size          = 0080, L: s5ss_1
ASMSIZE_code_error              = 0081, G: 
resetWarm                       = 0085, L: s5ss_1
ASMSIZE_code_driver_character_output = 0089, G: 
bios_load_byte_instruction      = 008C, G: s5ss_1
bios_load_word_instruction      = 0093, G: s5ss_1
ASMSIZE_code_math               = 009A, G: 
ASMSIZE_code_fcntl              = 009C, G: 
__Start                         = 009C, G: s5ss_1
ASMHEAD_code_crt_init           = 00A2, G: 
ASMSIZE_CODE                    = 00A2, G: 
ASMTAIL_CODE                    = 00A2, G: 
ASMHEAD_code_crt_main           = 00C6, G: 
ASMTAIL_code_crt_init           = 00C6, G: 
__Exit                          = 00CC, G: s5ss_1
ASMHEAD_code_crt_exit           = 00CD, G: 
ASMHEAD_code_crt_return         = 00CD, G: 
ASMTAIL_code_crt_exit           = 00CD, G: 
ASMTAIL_code_crt_main           = 00CD, G: 
ASMHEAD_code_adt_b_array        = 00D1, G: 
ASMHEAD_code_adt_b_vector       = 00D1, G: 
ASMHEAD_code_adt_ba_priority_queue = 00D1, G: 
ASMHEAD_code_adt_ba_stack       = 00D1, G: 
ASMHEAD_code_adt_bv_priority_queue = 00D1, G: 
ASMHEAD_code_adt_bv_stack       = 00D1, G: 
ASMHEAD_code_adt_p_forward_list = 00D1, G: 
ASMHEAD_code_clib               = 00D1, G: 
ASMHEAD_code_crt_common         = 00D1, G: 
ASMHEAD_code_driver             = 00D1, G: 
ASMHEAD_code_font               = 00D1, G: 
ASMTAIL_code_adt_b_array        = 00D1, G: 
ASMTAIL_code_adt_b_vector       = 00D1, G: 
ASMTAIL_code_adt_ba_priority_queue = 00D1, G: 
ASMTAIL_code_adt_ba_stack       = 00D1, G: 
ASMTAIL_code_adt_bv_priority_queue = 00D1, G: 
ASMTAIL_code_adt_bv_stack       = 00D1, G: 
ASMTAIL_code_clib               = 00D1, G: 
ASMTAIL_code_crt_common         = 00D1, G: 
ASMTAIL_code_crt_return         = 00D1, G: 
ASMTAIL_code_driver             = 00D1, G: 
ASMTAIL_code_font               = 00D1, G: 
asm_p_forward_list_front        = 00D1, G: asm_p_forward_list_front
asm_p_forward_list_next         = 00D1, G: asm_p_forward_list_next
ASMHEAD_code_adt_p_forward_list_alt = 00D7, G: 
ASMHEAD_code_adt_p_list         = 00D7, G: 
ASMHEAD_code_adt_p_queue        = 00D7, G: 
ASMHEAD_code_adt_p_stack        = 00D7, G: 
ASMHEAD_code_adt_w_array        = 00D7, G: 
ASMHEAD_code_adt_w_vector       = 00D7, G: 
ASMHEAD_code_adt_wa_priority_queue = 00D7, G: 
ASMHEAD_code_adt_wa_stack       = 00D7, G: 
ASMHEAD_code_adt_wv_priority_queue = 00D7, G: 
ASMHEAD_code_adt_wv_stack       = 00D7, G: 
ASMHEAD_code_alloc_balloc       = 00D7, G: 
ASMHEAD_code_alloc_malloc       = 00D7, G: 
ASMTAIL_code_adt_p_forward_list = 00D7, G: 
ASMTAIL_code_adt_p_forward_list_alt = 00D7, G: 
ASMTAIL_code_adt_p_list         = 00D7, G: 
ASMTAIL_code_adt_p_queue        = 00D7, G: 
ASMTAIL_code_adt_p_stack        = 00D7, G: 
ASMTAIL_code_adt_w_array        = 00D7, G: 
ASMTAIL_code_adt_w_vector       = 00D7, G: 
ASMTAIL_code_adt_wa_priority_queue = 00D7, G: 
ASMTAIL_code_adt_wa_stack       = 00D7, G: 
ASMTAIL_code_adt_wv_priority_queue = 00D7, G: 
ASMTAIL_code_adt_wv_stack       = 00D7, G: 
ASMTAIL_code_alloc_balloc       = 00D7, G: 
asm_heap_init                   = 00D7, G: asm_heap_init
ASMSIZE_code_driver_character_input = 00D8, G: 
ASMSIZE_code_l                  = 00ED, G: 
ASMHEAD_code_alloc_obstack      = 00F9, G: 
ASMHEAD_code_arch               = 00F9, G: 
ASMHEAD_code_bifrost2           = 00F9, G: 
ASMHEAD_code_bifrost_h          = 00F9, G: 
ASMHEAD_code_bifrost_l          = 00F9, G: 
ASMHEAD_code_compress_zx7       = 00F9, G: 
ASMHEAD_code_ctype              = 00F9, G: 
ASMTAIL_code_alloc_malloc       = 00F9, G: 
ASMTAIL_code_alloc_obstack      = 00F9, G: 
ASMTAIL_code_arch               = 00F9, G: 
ASMTAIL_code_bifrost2           = 00F9, G: 
ASMTAIL_code_bifrost_h          = 00F9, G: 
ASMTAIL_code_bifrost_l          = 00F9, G: 
ASMTAIL_code_compress_zx7       = 00F9, G: 
asm_tolower                     = 00F9, G: asm_tolower
ASMHEAD_code_driver_general     = 0102, G: 
ASMTAIL_code_ctype              = 0102, G: 
IOCTL_OTERM_CLS                 = 0102, G: s5ss_1
console_01_input_terminal_fdriver = 0102, G: console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = 0102, G: console_01_output_terminal_fdriver
device_reset_error              = 010A, G: device_reset_error
device_return_error             = 0113, G: device_return_error
device_set_error                = 011A, G: device_set_error
ASMHEAD_code_driver_character_input = 0127, G: 
ASMTAIL_code_driver_general     = 0127, G: 
zalt_00_input_sysctrl           = 0127, G: zalt_00_input_sysctrl_driver
zalt_00_input_sysctrl_ichar_msg_getc = 012E, L: zalt_00_input_sysctrl_driver
character_00_input              = 0136, G: character_00_input
character_00_input_stdio_msg_eatc = 015C, G: character_00_input_stdio_msg_eatc
eatc_loop                       = 0161, L: character_00_input_stdio_msg_eatc
eatc_exit                       = 017B, L: character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_getc = 017E, G: character_00_input_stdio_msg_getc
reject_cr                       = 0186, L: character_00_input_stdio_msg_getc
cr                              = 0197, L: character_00_input_stdio_msg_getc
character_00_input_stdio_msg_ictl = 019E, G: character_00_input_stdio_msg_ictl
_ictl_messages                  = 01AC, L: character_00_input_stdio_msg_ictl
exit_error                      = 01B1, L: character_00_input_stdio_msg_ictl
character_00_input_stdio_msg_read = 01B3, G: character_00_input_stdio_msg_read
read_loop                       = 01B4, L: character_00_input_stdio_msg_read
read_exit                       = 01CA, L: character_00_input_stdio_msg_read
read_exit_error                 = 01D2, L: character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = 01DD, G: character_00_input_stdio_msg_seek
seek_loop                       = 01E9, L: character_00_input_stdio_msg_seek
ASMHEAD_code_driver_character_output = 01FF, G: 
ASMTAIL_code_driver_character_input = 01FF, G: 
zalt_00_output_sysctrl          = 01FF, G: zalt_00_output_sysctrl_driver
TAR__crt_stack_size             = 0200, L: s5ss_1
__crt_stack_size                = 0200, L: s5ss_1
IOCTL_ITERM_TIE                 = 0201, G: s5ss_1
IOCTL_OTERM_RESET_SCROLL        = 0202, G: s5ss_1
zalt_00_output_sysctrl_ochar_msg_putc = 0206, L: zalt_00_output_sysctrl_driver
character_00_output             = 020B, G: character_00_output
character_00_output_ochar_msg_putc_bin = 0231, G: character_00_output_ochar_putc_bin
putchar                         = 0247, L: character_00_output_ochar_putc_bin
character_00_output_stdio_msg_ictl = 024B, G: character_00_output_stdio_msg_ictl
exit_error                      = 0259, L: character_00_output_stdio_msg_ictl
character_00_output_stdio_msg_putc = 025B, G: character_00_output_stdio_msg_putc
putc_loop                       = 025F, L: character_00_output_stdio_msg_putc
character_00_output_stdio_msg_writ = 026F, G: character_00_output_stdio_msg_writ
writ_loop                       = 0273, L: character_00_output_stdio_msg_writ
writ_end                        = 0284, L: character_00_output_stdio_msg_writ
ASMHEAD_code_driver_memstream   = 0288, G: 
ASMHEAD_code_driver_terminal_input = 0288, G: 
ASMHEAD_code_driver_terminal_output = 0288, G: 
ASMHEAD_code_driver_tty         = 0288, G: 
ASMHEAD_code_error              = 0288, G: 
ASMTAIL_code_driver_character_output = 0288, G: 
ASMTAIL_code_driver_memstream   = 0288, G: 
ASMTAIL_code_driver_terminal_input = 0288, G: 
ASMTAIL_code_driver_terminal_output = 0288, G: 
ASMTAIL_code_driver_tty         = 0288, G: 
error_enolck_zc                 = 028A, G: error_enolck_zc
error_enolck_mc                 = 0290, G: error_enolck_mc
errno_mc                        = 029A, G: errno_mc
error_mc                        = 02A5, G: error_mc
__ch_system                     = 02AE, G: s5ss_1
error_zc                        = 02AE, G: error_zc
error_einval_zc                 = 02B6, G: error_einval_zc
error_einval_mc                 = 02BC, G: error_einval_mc
error_erange_zc                 = 02C2, G: error_erange_zc
error_erange_mc                 = 02C8, G: error_erange_mc
error_eacces_mc                 = 02CE, G: error_eacces_mc
error_znc                       = 02D6, G: error_znc
error_divide_by_zero_mc         = 02DD, G: error_divide_by_zero_mc
error_edom_mc                   = 02DD, G: error_edom_mc
error_enotsup_zc                = 02E3, G: error_enotsup_zc
error_enotsup_mc                = 02E9, G: error_enotsup_mc
error_lzc                       = 02EF, G: error_lzc
error_lznc                      = 02F6, G: error_lznc
error_ebdfd_zc                  = 02FD, G: error_ebdfd_zc
IOCTL_ITERM_SET_EDITBUF         = 0301, G: s5ss_1
IOCTL_OTERM_SET_WINDOW_COORD    = 0302, G: s5ss_1
error_ebdfd_mc                  = 0304, G: error_ebdfd_mc
ASMHEAD_code_fcntl              = 0309, G: 
ASMTAIL_code_error              = 0309, G: 
asm_vioctl                      = 0309, G: asm_vioctl
critical_section                = 0309, L: asm_vioctl
find_driver_loop                = 0317, L: asm_vioctl
deliver_message                 = 0327, L: asm_vioctl
__bool                          = 033B, L: asm_vioctl
__setf                          = 0342, L: asm_vioctl
forward_ioctl                   = 034D, L: asm_vioctl
__getf                          = 0356, L: asm_vioctl
asm_vioctl_driver               = 0361, G: asm_vioctl
__fcntl_fdchain_descend         = 037D, G: __fcntl_fdchain_descend
IOCTL_ITERM_GET_EDITBUF         = 0381, G: s5ss_1
IOCTL_OTERM_GET_WINDOW_COORD    = 0382, G: s5ss_1
__fcntl_fdstruct_from_fd_2      = 0384, G: __fcntl_fdstruct_from_fd_2
__fcntl_fdstruct_from_fd_1      = 038F, G: __fcntl_fdstruct_from_fd_1
ASMHEAD_code_font_fzx           = 03A5, G: 
ASMHEAD_code_fp_genmath         = 03A5, G: 
ASMHEAD_code_fp_math48          = 03A5, G: 
ASMHEAD_code_input              = 03A5, G: 
ASMHEAD_code_inttypes           = 03A5, G: 
ASMHEAD_code_l                  = 03A5, G: 
ASMTAIL_code_fcntl              = 03A5, G: 
ASMTAIL_code_font_fzx           = 03A5, G: 
ASMTAIL_code_fp_genmath         = 03A5, G: 
ASMTAIL_code_fp_math48          = 03A5, G: 
ASMTAIL_code_input              = 03A5, G: 
ASMTAIL_code_inttypes           = 03A5, G: 
l_jpix                          = 03A5, G: l_jpix
__thread_block_timeout          = 03A8, G: s5ss_1
__thread_context_switch         = 03A8, G: s5ss_1
__thread_unblock                = 03A8, G: s5ss_1
l_ret                           = 03A8, G: l_ret
l_setmem_hl                     = 03C9, G: l_setmem_hl
l_atou                          = 03CA, G: l_atou
l_small_atou                    = 03CA, G: l_small_atou
loop                            = 03CF, L: l_small_atou
overflow                        = 03EF, L: l_small_atou
l_neg_hl                        = 03F2, G: l_neg_hl
l_utod_hl                       = 03FA, G: l_utod_hl
l_small_utoa                    = 0401, G: l_small_utoa
l_utoa                          = 0401, G: l_utoa
IOCTL_OTERM_SET_WINDOW_RECT     = 0402, G: s5ss_1
l_utoa_lib                      = 0414, G: l_small_utoa
no_leading_zeroes               = 0416, L: l_small_utoa
leading_zeroes                  = 0422, L: l_small_utoa
write                           = 0425, L: l_small_utoa
write1s                         = 042A, L: l_small_utoa
divide                          = 0430, L: l_small_utoa
divloop                         = 0432, L: l_small_utoa
l_utod_de                       = 0439, G: l_utod_de
l_addu_hl_de                    = 0440, G: l_addu_hl_de
l_maxu_bc_hl                    = 0446, G: l_maxu_bc_hl
bc_larger                       = 044E, L: l_maxu_bc_hl
l_neg_dehl                      = 0451, G: l_neg_dehl
l_addu_hl_bc                    = 0463, G: l_addu_hl_bc
l_jphl                          = 0469, G: l_jphl
l_num2char                      = 046A, G: l_num2char
alpha                           = 0471, L: l_num2char
l_valid_base                    = 0474, G: l_valid_base
l_decu_dehl                     = 0481, G: l_decu_dehl
IOCTL_OTERM_GET_WINDOW_RECT     = 0482, G: s5ss_1
msw                             = 0487, L: l_decu_dehl
limit                           = 048D, L: l_decu_dehl
ASMHEAD_code_l_sccz80           = 0492, G: 
ASMHEAD_code_l_sdcc             = 0492, G: 
ASMHEAD_code_locale             = 0492, G: 
ASMHEAD_code_math               = 0492, G: 
ASMTAIL_code_l                  = 0492, G: 
ASMTAIL_code_l_sccz80           = 0492, G: 
ASMTAIL_code_l_sdcc             = 0492, G: 
ASMTAIL_code_locale             = 0492, G: 
l_divu_32_32x8                  = 0492, G: l_divu_32_32x8
l0_divu_32_32x8                 = 0493, G: l_divu_32_32x8
l_small_divu_32_32x32           = 04A5, G: l_small_divu_32_32x32
l0_small_divu_32_32x32          = 04AB, G: l_small_divu_32_32x32
l1_small_divu_32_32x32          = 04B9, G: l_small_divu_32_32x32
loop_0                          = 04BC, L: l_small_divu_32_32x32
loop_1                          = 04D8, L: l_small_divu_32_32x32
divide_zero                     = 04ED, L: l_small_divu_32_32x32
l_small_divu_16_16x16           = 04F2, G: l_small_divu_16_16x16
l0_small_divu_16_16x16          = 04F6, G: l_small_divu_16_16x16
divisor_sixteen_bit             = 04FA, L: l_small_divu_16_16x16
loop_16_0                       = 0500, L: l_small_divu_16_16x16
IOCTL_OTERM_SET_CURSOR_COORD    = 0502, G: s5ss_1
loop_16_1                       = 0508, L: l_small_divu_16_16x16
l_divu_16_16x8                  = 0512, G: l_divu_16_16x8
l_small_divu_16_16x8            = 0512, G: l_small_divu_16_16x16
l0_divu_16_16x8                 = 0516, G: l_divu_16_16x8
l0_small_divu_16_16x8           = 0516, G: l_small_divu_16_16x16
loop_8_0                        = 051A, L: l_small_divu_16_16x16
loop_8_2                        = 0521, L: l_small_divu_16_16x16
loop_8_1                        = 0523, L: l_small_divu_16_16x16
divide_zero                     = 0528, L: l_small_divu_16_16x16
ASMHEAD_code_network            = 052C, G: 
ASMHEAD_code_nirvanam           = 052C, G: 
ASMHEAD_code_nirvanap           = 052C, G: 
ASMHEAD_code_setjmp             = 052C, G: 
ASMHEAD_code_sound_bit          = 052C, G: 
ASMHEAD_code_stdio              = 052C, G: 
ASMTAIL_code_math               = 052C, G: 
ASMTAIL_code_network            = 052C, G: 
ASMTAIL_code_nirvanam           = 052C, G: 
ASMTAIL_code_nirvanap           = 052C, G: 
ASMTAIL_code_setjmp             = 052C, G: 
ASMTAIL_code_sound_bit          = 052C, G: 
_printf                         = 052C, G: printf
_printf_unlocked                = 052C, G: printf_unlocked
asm_printf_unlocked             = 052C, G: asm_printf_unlocked
asm_vprintf_unlocked            = 0534, G: asm_vprintf_unlocked
asm1_vfprintf_unlocked          = 053B, G: asm_vfprintf_unlocked
asm_vfprintf_unlocked           = 053B, G: asm_vfprintf_unlocked
asm0_vfprintf_unlocked          = 053F, G: asm_vfprintf_unlocked
format_loop                     = 054A, L: asm_vfprintf_unlocked
__format_loop                   = 054C, L: asm_vfprintf_unlocked
ASMSIZE_code_stdio              = 0566, G: 
format_end                      = 056E, L: asm_vfprintf_unlocked
flag_chars                      = 057B, L: asm_vfprintf_unlocked
IOCTL_OTERM_GET_CURSOR_COORD    = 0582, G: s5ss_1
interpret                       = 0585, L: asm_vfprintf_unlocked
flags                           = 0588, L: asm_vfprintf_unlocked
flags_id                        = 058F, L: asm_vfprintf_unlocked
width                           = 0599, L: asm_vfprintf_unlocked
width_positive                  = 05AF, L: asm_vfprintf_unlocked
flag_found                      = 05B4, L: asm_vfprintf_unlocked
width_from_format               = 05B9, L: asm_vfprintf_unlocked
precision                       = 05C6, L: asm_vfprintf_unlocked
precision_positive              = 05EA, L: asm_vfprintf_unlocked
precision_from_format           = 05EF, L: asm_vfprintf_unlocked
end_precision                   = 05FA, L: asm_vfprintf_unlocked
length_modifier                 = 05FC, L: asm_vfprintf_unlocked
converter_specifier             = 05FF, L: asm_vfprintf_unlocked
IOCTL_OTERM_GET_OTERM           = 0602, G: s5ss_1
common_spec                     = 0615, L: asm_vfprintf_unlocked
unrecognized                    = 061D, L: asm_vfprintf_unlocked
long_spec                       = 0626, L: asm_vfprintf_unlocked
printf_return_is_4              = 0630, L: asm_vfprintf_unlocked
printf_I                        = 0635, L: asm_vfprintf_unlocked
printf_return_is_2              = 063C, L: asm_vfprintf_unlocked
printf_invoke_flags             = 063F, L: asm_vfprintf_unlocked
skip_00                         = 0647, L: asm_vfprintf_unlocked
skip_11                         = 064F, L: asm_vfprintf_unlocked
printf_invoke                   = 0654, L: asm_vfprintf_unlocked
match_con                       = 0674, L: asm_vfprintf_unlocked
match_ret                       = 0680, L: asm_vfprintf_unlocked
acon_tbl                        = 0688, L: asm_vfprintf_unlocked
rcon_tbl                        = 0691, L: asm_vfprintf_unlocked
lcon_tbl                        = 06B6, L: asm_vfprintf_unlocked
printf_return_4                 = 06DB, L: asm_vfprintf_unlocked
_return_join_4                  = 06DC, L: asm_vfprintf_unlocked
printf_return_2                 = 06E0, L: asm_vfprintf_unlocked
_return_join_2                  = 06E1, L: asm_vfprintf_unlocked
error_format_precision          = 06EF, L: asm_vfprintf_unlocked
error_format_width              = 06F0, L: asm_vfprintf_unlocked
error_stream                    = 06F3, L: asm_vfprintf_unlocked
__error_stream                  = 06F6, L: asm_vfprintf_unlocked
IOCTL_OTERM_SCROLL              = 0702, G: s5ss_1
error_printf_converter          = 0704, L: asm_vfprintf_unlocked
__stdio_length_modifier         = 0709, G: __stdio_length_modifier
lm_loop                         = 070F, L: __stdio_length_modifier
lm_found                        = 0719, L: __stdio_length_modifier
lm_double                       = 0722, L: __stdio_length_modifier
lm_chars                        = 072B, L: __stdio_length_modifier
__stdio_nextarg_de              = 0737, G: __stdio_nextarg_de
__stdio_varg_2                  = 073C, G: __stdio_varg
__stdio_verify_output           = 0743, G: __stdio_verify_output
errors                          = 0760, L: __stdio_verify_output
asm_fflush_unlocked             = 0768, G: asm_fflush_unlocked
asm0_fflush_unlocked            = 076F, G: asm_fflush_unlocked
asm1_fflush_unlocked            = 076F, G: asm_fflush_unlocked
last_was_read                   = 077C, L: asm_fflush_unlocked
forward_flush                   = 0799, L: asm_fflush_unlocked
last_was_write                  = 0799, L: asm_fflush_unlocked
asm__fflushall_unlocked         = 07A4, G: asm__fflushall_unlocked
file_loop                       = 07A7, L: asm__fflushall_unlocked
__stdio_printf_bb               = 07B5, G: __stdio_printf_bb
__stdio_printf_c                = 07BB, G: __stdio_printf_c
right_justify                   = 07C5, L: __stdio_printf_c
output_char                     = 07CC, L: __stdio_printf_c
left_justify                    = 07D2, L: __stdio_printf_c
width_padding                   = 07D9, L: __stdio_printf_c
__stdio_nextarg_hl              = 07E0, G: __stdio_nextarg_hl
__stdio_printf_d                = 07E5, G: __stdio_printf_d
__stdio_printf_ii               = 07EB, G: __stdio_printf_ii
IOCTL_OTERM_FONT                = 0802, G: s5ss_1
padding_required                = 0820, L: __stdio_printf_ii
right_justify                   = 0826, L: __stdio_printf_ii
left_justify                    = 0831, L: __stdio_printf_ii
write_octet                     = 083E, L: __stdio_printf_ii
__stdio_printf_lbb              = 0847, G: __stdio_printf_lbb
__stdio_printf_ld               = 084D, G: __stdio_printf_ld
__stdio_printf_ln               = 0853, G: __stdio_printf_ln
__stdio_printf_lo               = 0868, G: __stdio_printf_lo
__stdio_printf_lp               = 086E, G: __stdio_printf_lp
precision_defined               = 087A, L: __stdio_printf_lp
__stdio_printf_lu               = 0888, G: __stdio_printf_lu
__stdio_printf_lx               = 088E, G: __stdio_printf_lx
__stdio_printf_n                = 0894, G: __stdio_printf_n
__stdio_printf_number_tail_int  = 08A7, G: __stdio_printf_number_tail_int
__stdio_printf_number_tail_uint = 08BB, G: __stdio_printf_number_tail_int
signed_join                     = 08C2, L: __stdio_printf_number_tail_int
__stdio_printf_number_tail_zero = 08CF, G: __stdio_printf_number_tail
__stdio_printf_number_tail      = 08DC, G: __stdio_printf_number_tail
internal_required               = 08F0, L: __stdio_printf_number_tail
no_sign                         = 08F8, L: __stdio_printf_number_tail
no_base_indicator               = 0906, L: __stdio_printf_number_tail
external_required               = 090E, L: __stdio_printf_number_tail
number_zero                     = 090F, L: __stdio_printf_number_tail
spacing_ok                      = 091F, L: __stdio_printf_number_tail
right_justify                   = 0926, L: __stdio_printf_number_tail
out_internal                    = 092E, L: __stdio_printf_number_tail
hex_base                        = 094E, L: __stdio_printf_number_tail
octal_base                      = 0959, L: __stdio_printf_number_tail
no_base_indicator_2             = 095A, L: __stdio_printf_number_tail
no_prefix_chars                 = 0967, L: __stdio_printf_number_tail
stream_error                    = 096C, L: __stdio_printf_number_tail
num_is_zero                     = 0981, L: __stdio_printf_number_tail
left_justify                    = 0985, L: __stdio_printf_number_tail
__stdio_printf_number_tail_long = 098F, G: __stdio_printf_number_tail_long
__stdio_printf_number_tail_ulong = 09A9, G: __stdio_printf_number_tail_long
signed_join                     = 09B6, L: __stdio_printf_number_tail_long
zero                            = 09CE, L: __stdio_printf_number_tail_long
__stdio_printf_o                = 09D2, G: __stdio_printf_o
__stdio_printf_p                = 09D8, G: __stdio_printf_p
precision_defined               = 09E4, L: __stdio_printf_p
__stdio_printf_s                = 09F2, G: __stdio_printf_s
string_valid                    = 09FC, L: __stdio_printf_s
IOCTL_OTERM_FZX_SET_PAPER_COORD = 0A02, G: s5ss_1
precision_specified             = 0A05, L: __stdio_printf_s
padding_required                = 0A11, L: __stdio_printf_s
right_justify                   = 0A17, L: __stdio_printf_s
left_justify                    = 0A22, L: __stdio_printf_s
null_s                          = 0A2E, L: __stdio_printf_s
__stdio_printf_sign             = 0A35, G: __stdio_printf_sign
__stdio_printf_sign_0           = 0A38, G: __stdio_printf_sign
not_negative                    = 0A3F, L: __stdio_printf_sign
not_plus                        = 0A46, L: __stdio_printf_sign
__stdio_printf_u                = 0A4C, G: __stdio_printf_u
__stdio_printf_x                = 0A52, G: __stdio_printf_x
__stdio_printf_padding_precision_hl = 0A58, G: __stdio_send_output
__stdio_printf_padding_precision = 0A5A, G: __stdio_send_output
__stdio_printf_padding_precision_bc = 0A5A, G: __stdio_send_output
__stdio_printf_padding_width_hl = 0A5E, G: __stdio_send_output
__stdio_printf_padding_width    = 0A60, G: __stdio_send_output
__stdio_printf_padding_width_bc = 0A60, G: __stdio_send_output
__stdio_send_output_chars       = 0A62, G: __stdio_send_output
__stdio_send_output_buffer      = 0A69, G: __stdio_send_output
__stdio_send_output             = 0A6E, G: __stdio_send_output
exit                            = 0A7E, L: __stdio_send_output
IOCTL_OTERM_FZX_GET_PAPER_COORD = 0A82, G: s5ss_1
error_detected                  = 0A83, L: __stdio_send_output
__stdio_nextarg_bc              = 0A8D, G: __stdio_nextarg_bc
ASMHEAD_code_stdlib             = 0A92, G: 
ASMTAIL_code_stdio              = 0A92, G: 
asm_exit                        = 0A92, G: asm_exit
asm0_exit                       = 0A95, G: asm_exit
loop                            = 0AA1, L: asm_exit
asm_ultoa                       = 0AB3, G: asm_ultoa
asm0_ultoa                      = 0ABA, G: asm_ultoa
asm1_ultoa                      = 0AC0, G: asm_ultoa
compute_lp                      = 0AC2, L: asm_ultoa
write_lp                        = 0AD5, L: asm_ultoa
asm_utoa                        = 0ADC, G: asm_utoa
asm0_utoa                       = 0AE1, G: asm_utoa
asm1_utoa                       = 0AE7, G: asm_utoa
compute_lp                      = 0AEE, L: asm_utoa
write_lp                        = 0B00, L: asm_utoa
IOCTL_OTERM_FZX_SET_PAPER_RECT  = 0B02, G: s5ss_1
ASMHEAD_code_string             = 0B07, G: 
ASMTAIL_code_stdlib             = 0B07, G: 
asm_strchrnul                   = 0B07, G: asm_strchrnul
loop                            = 0B07, L: asm_strchrnul
asm_strnlen                     = 0B11, G: asm_strnlen
notend                          = 0B1E, L: asm_strnlen
asm__memlwr                     = 0B21, G: asm__memlwr
loop                            = 0B25, L: asm__memlwr
ASMHEAD_code_temp_sp1           = 0B31, G: 
ASMHEAD_code_threads            = 0B31, G: 
ASMHEAD_code_threads_mutex      = 0B31, G: 
ASMTAIL_code_string             = 0B31, G: 
ASMTAIL_code_temp_sp1           = 0B31, G: 
ASMTAIL_code_threads            = 0B31, G: 
asm_mtx_init                    = 0B31, G: asm_mtx_init
unknown_type                    = 0B4B, L: asm_mtx_init
ASMHEAD_code_compiler           = 0B50, G: 
ASMHEAD_code_lib                = 0B50, G: 
ASMHEAD_code_z80                = 0B50, G: 
ASMTAIL_code_lib                = 0B50, G: 
ASMTAIL_code_threads_mutex      = 0B50, G: 
ASMTAIL_code_z80                = 0B50, G: 
_main                           = 0B50, G: s5ss_
___str_0                        = 0B5C, L: s5ss_
ASMHEAD_code_user               = 0B76, G: 
ASMHEAD_rodata_clib             = 0B76, G: 
ASMHEAD_rodata_driver           = 0B76, G: 
ASMHEAD_rodata_error_strings    = 0B76, G: 
ASMHEAD_rodata_font             = 0B76, G: 
ASMTAIL_code_compiler           = 0B76, G: 
ASMTAIL_code_user               = 0B76, G: 
ASMTAIL_rodata_clib             = 0B76, G: 
ASMTAIL_rodata_driver           = 0B76, G: 
ASMTAIL_rodata_font             = 0B76, G: 
IOCTL_OTERM_FZX_GET_PAPER_RECT  = 0B82, G: s5ss_1
ASMHEAD_rodata_error_string_end = 0BAC, G: 
ASMTAIL_rodata_error_strings    = 0BAC, G: 
ASMHEAD_CODE_END                = 0BAD, G: 
ASMHEAD_DATA                    = 0BAD, G: 
ASMHEAD_rodata_compiler         = 0BAD, G: 
ASMHEAD_rodata_fcntl            = 0BAD, G: 
ASMHEAD_rodata_font_4x8         = 0BAD, G: 
ASMHEAD_rodata_font_8x8         = 0BAD, G: 
ASMHEAD_rodata_font_fzx         = 0BAD, G: 
ASMHEAD_rodata_input            = 0BAD, G: 
ASMHEAD_rodata_lib              = 0BAD, G: 
ASMHEAD_rodata_sound_bit        = 0BAD, G: 
ASMHEAD_rodata_stdio            = 0BAD, G: 
ASMHEAD_rodata_stdlib           = 0BAD, G: 
ASMHEAD_rodata_user             = 0BAD, G: 
ASMTAIL_CODE_END                = 0BAD, G: 
ASMTAIL_rodata_compiler         = 0BAD, G: 
ASMTAIL_rodata_error_string_end = 0BAD, G: 
ASMTAIL_rodata_fcntl            = 0BAD, G: 
ASMTAIL_rodata_font_4x8         = 0BAD, G: 
ASMTAIL_rodata_font_8x8         = 0BAD, G: 
ASMTAIL_rodata_font_fzx         = 0BAD, G: 
ASMTAIL_rodata_input            = 0BAD, G: 
ASMTAIL_rodata_lib              = 0BAD, G: 
ASMTAIL_rodata_sound_bit        = 0BAD, G: 
ASMTAIL_rodata_stdio            = 0BAD, G: 
ASMTAIL_rodata_stdlib           = 0BAD, G: 
ASMTAIL_rodata_user             = 0BAD, G: 
ASMHEAD_data_alloc_balloc       = 0BAE, G: 
ASMHEAD_data_alloc_malloc       = 0BAE, G: 
ASMHEAD_data_clib               = 0BAE, G: 
ASMHEAD_data_driver             = 0BAE, G: 
ASMHEAD_data_font               = 0BAE, G: 
ASMHEAD_smc_clib                = 0BAE, G: 
ASMHEAD_smc_compiler            = 0BAE, G: 
ASMHEAD_smc_driver              = 0BAE, G: 
ASMHEAD_smc_fcntl               = 0BAE, G: 
ASMHEAD_smc_font                = 0BAE, G: 
ASMHEAD_smc_l                   = 0BAE, G: 
ASMHEAD_smc_lib                 = 0BAE, G: 
ASMHEAD_smc_sound_bit           = 0BAE, G: 
ASMHEAD_smc_user                = 0BAE, G: 
ASMTAIL_DATA                    = 0BAE, G: 
ASMTAIL_data_alloc_balloc       = 0BAE, G: 
ASMTAIL_data_clib               = 0BAE, G: 
ASMTAIL_data_driver             = 0BAE, G: 
ASMTAIL_data_font               = 0BAE, G: 
ASMTAIL_smc_clib                = 0BAE, G: 
ASMTAIL_smc_compiler            = 0BAE, G: 
ASMTAIL_smc_driver              = 0BAE, G: 
ASMTAIL_smc_fcntl               = 0BAE, G: 
ASMTAIL_smc_font                = 0BAE, G: 
ASMTAIL_smc_l                   = 0BAE, G: 
ASMTAIL_smc_lib                 = 0BAE, G: 
ASMTAIL_smc_sound_bit           = 0BAE, G: 
ASMTAIL_smc_user                = 0BAE, G: 
__malloc_heap                   = 0BAE, G: s5ss_1
ASMHEAD_data_fcntl              = 0BB0, G: 
ASMTAIL_data_alloc_malloc       = 0BB0, G: 
__stdio_heap                    = 0BB0, G: s5ss_1
ASMHEAD_data_fcntl_stdio_heap_head = 0BB2, G: 
ASMTAIL_data_fcntl              = 0BB2, G: 
__stdio_block                   = 0BB2, L: s5ss_1
ASMHEAD_data_fcntl_stdio_heap_body = 0BB8, G: 
ASMTAIL_data_fcntl_stdio_heap_head = 0BB8, G: 
__i_fcntl_heap_0                = 0BB8, L: s5ss_1
__i_fcntl_fdstruct_0            = 0BBE, L: s5ss_1
__i_fcntl_heap_1                = 0BCF, L: s5ss_1
__i_fcntl_fdstruct_1            = 0BD5, L: s5ss_1
__i_fcntl_fdstruct_2            = 0BD5, L: s5ss_1
__i_fcntl_heap_2                = 0BE6, L: s5ss_1
IOCTL_OTERM_FZX_LEFT_MARGIN     = 0C02, G: s5ss_1
ASMHEAD_data_fcntl_stdio_heap_tail = 0C30, G: 
ASMTAIL_data_fcntl_stdio_heap_body = 0C30, G: 
__i_fcntl_heap_3                = 0C30, L: s5ss_1
ASMHEAD_data_fcntl_fdtable_body = 0C32, G: 
ASMTAIL_data_fcntl_stdio_heap_tail = 0C32, G: 
__fcntl_fdtbl                   = 0C32, G: s5ss_1
ASMHEAD_data_sound_bit          = 0C38, G: 
ASMHEAD_data_stdio              = 0C38, G: 
ASMTAIL_data_fcntl_fdtable_body = 0C38, G: 
ASMTAIL_data_sound_bit          = 0C38, G: 
_stdin                          = 0C38, G: s5ss_1
__i_stdio_file_0                = 0C3A, L: s5ss_1
_stdout                         = 0C49, G: s5ss_1
__i_stdio_file_1                = 0C4B, L: s5ss_1
_stderr                         = 0C5A, G: s5ss_1
__i_stdio_file_2                = 0C5C, L: s5ss_1
__stdio_open_file_list          = 0C6B, G: s5ss_1
__stdio_closed_file_list        = 0C6D, G: s5ss_1
ASMHEAD_data_stdlib             = 0C71, G: 
ASMHEAD_data_threads            = 0C71, G: 
ASMTAIL_data_stdio              = 0C71, G: 
ASMTAIL_data_stdlib             = 0C71, G: 
__thrd_id                       = 0C71, G: s5ss_1
ASMHEAD_data_compiler           = 0C72, G: 
ASMHEAD_data_lib                = 0C72, G: 
ASMTAIL_data_lib                = 0C72, G: 
ASMTAIL_data_threads            = 0C72, G: 
_Message                        = 0C72, L: s5ss_
ASMHEAD_BSS                     = 0C74, G: 
ASMHEAD_DATA_END                = 0C74, G: 
ASMHEAD_data_user               = 0C74, G: 
ASMTAIL_DATA_END                = 0C74, G: 
ASMTAIL_data_compiler           = 0C74, G: 
ASMTAIL_data_user               = 0C74, G: 
ASMHEAD_BSS_UNINITIALIZED       = 0C75, G: 
ASMHEAD_bss_alloc_balloc        = 0C75, G: 
ASMHEAD_bss_alloc_malloc        = 0C75, G: 
ASMHEAD_bss_arch                = 0C75, G: 
ASMHEAD_bss_clib                = 0C75, G: 
ASMHEAD_bss_driver              = 0C75, G: 
ASMHEAD_bss_error               = 0C75, G: 
ASMHEAD_bss_font                = 0C75, G: 
ASMTAIL_BSS                     = 0C75, G: 
ASMTAIL_BSS_UNINITIALIZED       = 0C75, G: 
ASMTAIL_bss_alloc_balloc        = 0C75, G: 
ASMTAIL_bss_alloc_malloc        = 0C75, G: 
ASMTAIL_bss_arch                = 0C75, G: 
ASMTAIL_bss_clib                = 0C75, G: 
ASMTAIL_bss_driver              = 0C75, G: 
ASMTAIL_bss_font                = 0C75, G: 
_errno                          = 0C75, G: _errno
ASMHEAD_bss_fcntl               = 0C77, G: 
ASMHEAD_bss_input               = 0C77, G: 
ASMHEAD_bss_sound_bit           = 0C77, G: 
ASMHEAD_bss_stdio               = 0C77, G: 
ASMHEAD_bss_stdlib              = 0C77, G: 
ASMTAIL_bss_error               = 0C77, G: 
ASMTAIL_bss_fcntl               = 0C77, G: 
ASMTAIL_bss_input               = 0C77, G: 
ASMTAIL_bss_sound_bit           = 0C77, G: 
ASMTAIL_bss_stdio               = 0C77, G: 
__exit_stack                    = 0C77, G: s5ss_1
__quickexit_stack               = 0C7C, G: s5ss_1
ASMHEAD_BSS_END                 = 0C7D, G: 
ASMHEAD_IGNORE                  = 0C7D, G: 
ASMHEAD_bss_compiler            = 0C7D, G: 
ASMHEAD_bss_lib                 = 0C7D, G: 
ASMHEAD_bss_string              = 0C7D, G: 
ASMHEAD_bss_user                = 0C7D, G: 
ASMSIZE                         = 0C7D, G: 
ASMTAIL                         = 0C7D, G: 
ASMTAIL_BSS_END                 = 0C7D, G: 
ASMTAIL_IGNORE                  = 0C7D, G: 
ASMTAIL_bss_compiler            = 0C7D, G: 
ASMTAIL_bss_lib                 = 0C7D, G: 
ASMTAIL_bss_stdlib              = 0C7D, G: 
ASMTAIL_bss_string              = 0C7D, G: 
ASMTAIL_bss_user                = 0C7D, G: 
IOCTL_OTERM_FZX_LINE_SPACING    = 0D02, G: s5ss_1
IOCTL_OTERM_FZX_SPACE_EXPAND    = 0E02, G: s5ss_1
IOCTL_OTERM_FZX_SET_FZX_STATE   = 0F02, G: s5ss_1
IOCTL_OTERM_FZX_GET_FZX_STATE   = 0F82, G: s5ss_1
IOCTL_ITERM_CAPS                = C009, G: s5ss_1
IOCTL_ITERM_COOK                = C011, G: s5ss_1
IOCTL_OTERM_CRLF                = C012, G: s5ss_1
IOCTL_OCHAR_CRLF                = C014, G: s5ss_1
IOCTL_ITERM_LINE                = C021, G: s5ss_1
IOCTL_OTERM_COOK                = C022, G: s5ss_1
IOCTL_ITERM_PASS                = C041, G: s5ss_1
IOCTL_OTERM_PAUSE               = C042, G: s5ss_1
IOCTL_ITERM_ECHO                = C081, G: s5ss_1
IOCTL_OTERM_PAGE                = C082, G: s5ss_1
IOCTL_ITERM_CRLF                = C101, G: s5ss_1
IOCTL_OTERM_BELL                = C102, G: s5ss_1
IOCTL_ICHAR_CRLF                = C103, G: s5ss_1
IOCTL_ITERM_CURS                = C201, G: s5ss_1
IOCTL_OTERM_SIGNAL              = C202, G: s5ss_1
IOCTL_OTERM_CLEAR               = E002, G: s5ss_1
__CLIB_OPT_PRINTF               = 3FFFFF, L: asm_vfprintf_unlocked
