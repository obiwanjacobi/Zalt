TAR__clib_malloc_heap_size      = $FFFFFFFF ; L page0
__clib_malloc_heap_size         = $FFFFFFFF ; L page0
CLIB_OPT_STDIO                  = $0000 ; L page0
DEF__crt_enable_eidi            = $0000 ; L page0
DEF__crt_include_preamble       = $0000 ; L page0
IOCTL_RESET                     = $0000 ; G page0
STDIO_SEEK_SET                  = $0000 ; G page0
TAR__clib_balloc_table_size     = $0000 ; L page0
TAR__clib_fopen_max             = $0000 ; L page0
TAR__clib_open_max              = $0000 ; L page0
TAR__clib_quickexit_stack_size  = $0000 ; L page0
TAR__crt_enable_commandline     = $0000 ; L page0
TAR__crt_enable_nmi             = $0000 ; L page0
TAR__crt_enable_restart         = $0000 ; L page0
TAR__crt_enable_rst             = $0000 ; L page0
TAR__crt_initialize_bss         = $0000 ; L page0
TAR__crt_model                  = $0000 ; L page0
TAR__crt_org_bss                = $0000 ; L page0
TAR__crt_org_code               = $0000 ; L page0
TAR__crt_org_data               = $0000 ; L page0
TAR__register_sp                = $0000 ; L page0
__BSS_END_size                  = $0000 ; G 
__BSS_UNINITIALIZED_size        = $0000 ; G 
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm__fflushall_unlocked
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm_vioctl
__CLIB_OPT_MULTITHREAD          = $0000 ; L getchar
__CLIB_OPT_MULTITHREAD          = $0000 ; L putchar_fastcall
__CLIB_OPT_STDIO                = $0000 ; L asm_fflush_unlocked
__CLIB_OPT_STDIO                = $0000 ; L asm_fgetc_unlocked
__CLIB_OPT_STDIO                = $0000 ; L asm_fputc_unlocked
__CLIB_OPT_STDIO                = $0000 ; L asm_putchar_unlocked
__CODE_END_size                 = $0000 ; G 
__CODE_head                     = $0000 ; G 
__CRTDEF                        = $0000 ; L page0
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G page0
__IGNORE_size                   = $0000 ; G 
__MMAP                          = $0000 ; L page0
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compiler_size             = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_stdio_size                = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L page0
__clib_fopen_max                = $0000 ; L page0
__clib_open_max                 = $0000 ; L page0
__clib_quickexit_stack_size     = $0000 ; L page0
__code_adt_b_array_size         = $0000 ; G 
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_arch_size                = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_common_size          = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_ctype_size               = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_terminal_input_size = $0000 ; G 
__code_driver_terminal_output_size = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_fp_math48_size           = $0000 ; G 
__code_input_size               = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sccz80_size            = $0000 ; G 
__code_l_sdcc_size              = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_math_size                = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_sound_bit_size           = $0000 ; G 
__code_string_size              = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_user_size                = $0000 ; G 
__code_z80_size                 = $0000 ; G 
__crt_enable_restart            = $0000 ; L page0
__crt_initialize_bss            = $0000 ; L page0
__crt_model                     = $0000 ; L page0
__crt_org_bss                   = $0000 ; L page0
__crt_org_code                  = $0000 ; L page0
__crt_org_data                  = $0000 ; L page0
__data_alloc_balloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_compiler_size            = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_sound_bit_size           = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G page0
__rodata_clib_size              = $0000 ; G 
__rodata_compiler_size          = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_4x8_size          = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_input_size             = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_stdlib_size            = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
startup                         = $0000 ; L page0
thrd_success                    = $0000 ; G page0
DEFINED_CLIB_OPT_STDIO          = $0001 ; L page0
DEFINED_Z88DK_USES_SDCC         = $0001 ; L page0
STDIO_MSG_PUTC                  = $0001 ; G page0
STDIO_SEEK_CUR                  = $0001 ; G page0
TAR__crt_enable_close           = $0001 ; L page0
Z88DK_USES_SDCC                 = $0001 ; L page0
_CLIB_CFG_ASM_                  = $0001 ; L asm__fflushall_unlocked
_CLIB_CFG_ASM_                  = $0001 ; L asm_fflush_unlocked
_CLIB_CFG_ASM_                  = $0001 ; L asm_fgetc_unlocked
_CLIB_CFG_ASM_                  = $0001 ; L asm_fputc_unlocked
_CLIB_CFG_ASM_                  = $0001 ; L asm_putchar_unlocked
_CLIB_CFG_ASM_                  = $0001 ; L asm_vioctl
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_getc
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_read
_CLIB_CFG_ASM_                  = $0001 ; L character_00_output_ochar_putc_bin
_CLIB_CFG_ASM_                  = $0001 ; L console_01_input_terminal_fdriver
_CLIB_CFG_ASM_                  = $0001 ; L error_eacces_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_zc
_CLIB_CFG_ASM_                  = $0001 ; L getchar
_CLIB_CFG_ASM_                  = $0001 ; L putchar_fastcall
__BSS_size                      = $0001 ; G 
__CLIB_OPT_ERROR                = $0001 ; L error_eacces_mc
__CLIB_OPT_ERROR                = $0001 ; L error_ebdfd_mc
__CLIB_OPT_ERROR                = $0001 ; L error_ebdfd_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enolck_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enolck_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enotsup_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enotsup_zc
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G page0
__SDCC                          = $0001 ; L __stdio_nextarg_bc
__SDCC                          = $0001 ; L asm__fflushall_unlocked
__SDCC                          = $0001 ; L asm_fflush_unlocked
__SDCC                          = $0001 ; L asm_fgetc_unlocked
__SDCC                          = $0001 ; L asm_fputc_unlocked
__SDCC                          = $0001 ; L asm_putchar_unlocked
__SDCC                          = $0001 ; L asm_vioctl
__SDCC                          = $0001 ; L character_00_input_stdio_msg_getc
__SDCC                          = $0001 ; L character_00_input_stdio_msg_read
__SDCC                          = $0001 ; L character_00_output_ochar_putc_bin
__SDCC                          = $0001 ; L console_01_input_terminal_fdriver
__SDCC                          = $0001 ; L error_eacces_mc
__SDCC                          = $0001 ; L error_ebdfd_mc
__SDCC                          = $0001 ; L error_ebdfd_zc
__SDCC                          = $0001 ; L error_enolck_mc
__SDCC                          = $0001 ; L error_enolck_zc
__SDCC                          = $0001 ; L error_enotsup_mc
__SDCC                          = $0001 ; L error_enotsup_zc
__SDCC                          = $0001 ; L getchar
__SDCC                          = $0001 ; L putchar_fastcall
__SDCC_IY                       = $0001 ; L __stdio_nextarg_bc
__SDCC_IY                       = $0001 ; L asm__fflushall_unlocked
__SDCC_IY                       = $0001 ; L asm_fflush_unlocked
__SDCC_IY                       = $0001 ; L asm_fgetc_unlocked
__SDCC_IY                       = $0001 ; L asm_fputc_unlocked
__SDCC_IY                       = $0001 ; L asm_putchar_unlocked
__SDCC_IY                       = $0001 ; L asm_vioctl
__SDCC_IY                       = $0001 ; L character_00_input_stdio_msg_getc
__SDCC_IY                       = $0001 ; L character_00_input_stdio_msg_read
__SDCC_IY                       = $0001 ; L character_00_output_ochar_putc_bin
__SDCC_IY                       = $0001 ; L console_01_input_terminal_fdriver
__SDCC_IY                       = $0001 ; L error_eacces_mc
__SDCC_IY                       = $0001 ; L error_ebdfd_mc
__SDCC_IY                       = $0001 ; L error_ebdfd_zc
__SDCC_IY                       = $0001 ; L error_enolck_mc
__SDCC_IY                       = $0001 ; L error_enolck_zc
__SDCC_IY                       = $0001 ; L error_enotsup_mc
__SDCC_IY                       = $0001 ; L error_enotsup_zc
__SDCC_IY                       = $0001 ; L getchar
__SDCC_IY                       = $0001 ; L page0
__SDCC_IY                       = $0001 ; L putchar_fastcall
__crt_enable_close              = $0001 ; L page0
__data_threads_size             = $0001 ; G 
__rodata_error_string_end_size  = $0001 ; G 
isr_table_index                 = $0001 ; L page0
mtx_plain                       = $0001 ; G page0
thrd_error                      = $0001 ; G page0
STDIO_MSG_WRIT                  = $0002 ; G page0
STDIO_SEEK_END                  = $0002 ; G page0
TAR__clib_exit_stack_size       = $0002 ; L page0
__EBADF                         = $0002 ; G page0
__bss_error_size                = $0002 ; G 
__clib_exit_stack_size          = $0002 ; L page0
__data_alloc_malloc_size        = $0002 ; G 
__data_fcntl_size               = $0002 ; G 
__data_fcntl_stdio_heap_tail_size = $0002 ; G 
__exit_stack_size               = $0002 ; G page0
mtx_recursive                   = $0002 ; G page0
thrd_nomem                      = $0002 ; G page0
STDIO_MSG_GETC                  = $0003 ; G page0
__EBDFD                         = $0003 ; G page0
__code_crt_return_size          = $0003 ; G 
__fcntl_fdtbl_size              = $0003 ; G page0
STDIO_MSG_EATC                  = $0004 ; G page0
__EDOM                          = $0004 ; G page0
mtx_timed                       = $0004 ; G page0
thrd_busy                       = $0004 ; G page0
STDIO_MSG_READ                  = $0005 ; G page0
__EFBIG                         = $0005 ; G page0
STDIO_MSG_SEEK                  = $0006 ; G page0
__EINVAL                        = $0006 ; G page0
__bss_stdlib_size               = $0006 ; G 
__code_adt_p_forward_list_size  = $0006 ; G 
__data_fcntl_fdtable_body_size  = $0006 ; G 
__data_fcntl_stdio_heap_head_size = $0006 ; G 
DEF__crt_enable_streams         = $0007 ; L page0
STDIO_MSG_ICTL                  = $0007 ; G page0
__EMFILE                        = $0007 ; G page0
__code_crt_main_size            = $0007 ; G 
STDIO_MSG_FLSH                  = $0008 ; G page0
__ENFILE                        = $0008 ; G page0
thrd_timedout                   = $0008 ; G page0
STDIO_MSG_CLOS                  = $0009 ; G page0
__ENOLCK                        = $0009 ; G page0
CHAR_LF                         = $000A ; L character_00_input_stdio_msg_read
CHAR_LF                         = $000A ; L character_00_output_ochar_putc_bin
__ENOMEM                        = $000A ; G page0
__ENOTSUP                       = $000B ; G page0
__EOVERFLOW                     = $000C ; G page0
CHAR_CR                         = $000D ; L character_00_input_stdio_msg_getc
CHAR_CR                         = $000D ; L character_00_output_ochar_putc_bin
__ERANGE                        = $000D ; G page0
__ESTAT                         = $000E ; G page0
ICHAR_MSG_GETC                  = $000F ; G page0
ITERM_MSG_GETC                  = $000F ; G page0
__EAGAIN                        = $000F ; G page0
__EWOULDBLOCK                   = $000F ; G page0
ITERM_MSG_INTERRUPT             = $0010 ; G page0
ITERM_MSG_PUTC                  = $0011 ; G page0
ITERM_MSG_PRINT_CURSOR          = $0012 ; G page0
ITERM_MSG_ERASE_CURSOR          = $0013 ; G page0
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G page0
ITERM_MSG_BS                    = $0015 ; G page0
ITERM_MSG_BS_PWD                = $0016 ; G page0
ITERM_MSG_READLINE_BEGIN        = $0017 ; G page0
ITERM_MSG_READLINE_END          = $0018 ; G page0
ITERM_MSG_BELL                  = $0019 ; G page0
OCHAR_MSG_PUTC_BIN              = $001E ; G page0
OTERM_MSG_PUTC                  = $001E ; G page0
OTERM_MSG_TTY                   = $001F ; G page0
__code_threads_mutex_size       = $001F ; G 
OCHAR_MSG_PUTC                  = $0020 ; G page0
OTERM_MSG_PRINTC                = $0020 ; G page0
__rodata_error_strings_size     = $0020 ; G 
OTERM_MSG_SCROLL                = $0021 ; G page0
__code_stdlib_size              = $0021 ; G 
OTERM_MSG_CLS                   = $0022 ; G page0
__code_alloc_malloc_size        = $0022 ; G 
OTERM_MSG_PAUSE                 = $0023 ; G page0
OTERM_MSG_BELL                  = $0024 ; G page0
__code_crt_init_size            = $0024 ; G 
OTERM_MSG_PSCROLL               = $0025 ; G page0
__code_driver_general_size      = $0025 ; G 
__code_l_size                   = $0037 ; G 
__data_stdio_size               = $0039 ; G 
bios_var_ram_top_page           = $0040 ; G page0
bios_var_ram_top                = $0041 ; L page0
bios_var_ram_active_page        = $0043 ; G page0
__code_compiler_size            = $0052 ; G 
__code_error_size               = $0061 ; G 
bios_load_byte_instruction      = $0068 ; G page0
bios_load_word_instruction      = $006F ; G page0
BiosFn1                         = $0078 ; L page0
BiosFn2                         = $0078 ; L page0
BiosFn3                         = $0078 ; L page0
BiosFn4                         = $0078 ; L page0
BiosFn5                         = $0078 ; L page0
BiosFn6                         = $0078 ; L page0
__data_fcntl_stdio_heap_body_size = $0078 ; G 
TAR__clib_stdio_heap_size       = $0080 ; L page0
__clib_stdio_heap_size          = $0080 ; L page0
__code_driver_character_output_size = $008D ; G 
__code_fcntl_size               = $009C ; G 
__code_driver_character_input_size = $00DB ; G 
isr_table_address               = $0100 ; L page0
IOCTL_OTERM_CLS                 = $0102 ; G page0
__code_stdio_size               = $011B ; G 
TAR__crt_stack_size             = $0200 ; L page0
__crt_stack_size                = $0200 ; L page0
isr_null_vector                 = $0200 ; G page0
isr_table_address_end           = $0200 ; L page0
IOCTL_ITERM_TIE                 = $0201 ; G page0
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G page0
bios_trap_illegal               = $0202 ; G page0
bios_reset_init                 = $0203 ; G page0
resetWarm                       = $0228 ; L page0
__CODE_size                     = $0230 ; G 
__CODE_tail                     = $0230 ; G 
__Start                         = $0230 ; G page0
__code_crt_init_head            = $0230 ; G 
__code_crt_init_tail            = $0254 ; G 
__code_crt_main_head            = $0254 ; G 
__Exit                          = $025A ; G page0
__code_crt_exit_head            = $025B ; G 
__code_crt_exit_tail            = $025B ; G 
__code_crt_main_tail            = $025B ; G 
__code_crt_return_head          = $025B ; G 
zalt_oblivian                   = $025C ; L page0
__code_adt_b_array_head         = $025E ; G 
__code_adt_b_array_tail         = $025E ; G 
__code_adt_b_vector_head        = $025E ; G 
__code_adt_b_vector_tail        = $025E ; G 
__code_adt_ba_priority_queue_head = $025E ; G 
__code_adt_ba_priority_queue_tail = $025E ; G 
__code_adt_ba_stack_head        = $025E ; G 
__code_adt_ba_stack_tail        = $025E ; G 
__code_adt_bv_priority_queue_head = $025E ; G 
__code_adt_bv_priority_queue_tail = $025E ; G 
__code_adt_bv_stack_head        = $025E ; G 
__code_adt_bv_stack_tail        = $025E ; G 
__code_adt_p_forward_list_head  = $025E ; G 
__code_clib_head                = $025E ; G 
__code_clib_tail                = $025E ; G 
__code_crt_common_head          = $025E ; G 
__code_crt_common_tail          = $025E ; G 
__code_crt_return_tail          = $025E ; G 
__code_driver_head              = $025E ; G 
__code_driver_tail              = $025E ; G 
__code_font_head                = $025E ; G 
__code_font_tail                = $025E ; G 
asm_p_forward_list_front        = $025E ; G asm_p_forward_list_front
asm_p_forward_list_next         = $025E ; G asm_p_forward_list_next
__code_adt_p_forward_list_alt_head = $0264 ; G 
__code_adt_p_forward_list_alt_tail = $0264 ; G 
__code_adt_p_forward_list_tail  = $0264 ; G 
__code_adt_p_list_head          = $0264 ; G 
__code_adt_p_list_tail          = $0264 ; G 
__code_adt_p_queue_head         = $0264 ; G 
__code_adt_p_queue_tail         = $0264 ; G 
__code_adt_p_stack_head         = $0264 ; G 
__code_adt_p_stack_tail         = $0264 ; G 
__code_adt_w_array_head         = $0264 ; G 
__code_adt_w_array_tail         = $0264 ; G 
__code_adt_w_vector_head        = $0264 ; G 
__code_adt_w_vector_tail        = $0264 ; G 
__code_adt_wa_priority_queue_head = $0264 ; G 
__code_adt_wa_priority_queue_tail = $0264 ; G 
__code_adt_wa_stack_head        = $0264 ; G 
__code_adt_wa_stack_tail        = $0264 ; G 
__code_adt_wv_priority_queue_head = $0264 ; G 
__code_adt_wv_priority_queue_tail = $0264 ; G 
__code_adt_wv_stack_head        = $0264 ; G 
__code_adt_wv_stack_tail        = $0264 ; G 
__code_alloc_balloc_head        = $0264 ; G 
__code_alloc_balloc_tail        = $0264 ; G 
__code_alloc_malloc_head        = $0264 ; G 
asm_heap_init                   = $0264 ; G asm_heap_init
__code_alloc_malloc_tail        = $0286 ; G 
__code_alloc_obstack_head       = $0286 ; G 
__code_alloc_obstack_tail       = $0286 ; G 
__code_arch_head                = $0286 ; G 
__code_arch_tail                = $0286 ; G 
__code_bifrost2_head            = $0286 ; G 
__code_bifrost2_tail            = $0286 ; G 
__code_bifrost_h_head           = $0286 ; G 
__code_bifrost_h_tail           = $0286 ; G 
__code_bifrost_l_head           = $0286 ; G 
__code_bifrost_l_tail           = $0286 ; G 
__code_compress_aplib_head      = $0286 ; G 
__code_compress_aplib_tail      = $0286 ; G 
__code_compress_zx7_head        = $0286 ; G 
__code_compress_zx7_tail        = $0286 ; G 
__code_ctype_head               = $0286 ; G 
__code_ctype_tail               = $0286 ; G 
__code_driver_general_head      = $0286 ; G 
console_01_input_terminal_fdriver = $0286 ; G console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = $0286 ; G console_01_output_terminal_fdriver
device_reset_error              = $028E ; G device_reset_error
device_return_error             = $0297 ; G device_return_error
device_set_error                = $029E ; G device_set_error
__code_driver_character_input_head = $02AB ; G 
__code_driver_general_tail      = $02AB ; G 
zalt_00_input_sysctrl           = $02AB ; G zalt_00_input_sysctrl_driver
zalt_00_input_sysctrl_ichar_msg_getc = $02B2 ; L zalt_00_input_sysctrl_driver
character_00_input              = $02BD ; G character_00_input
character_00_input_stdio_msg_eatc = $02E3 ; G character_00_input_stdio_msg_eatc
eatc_loop                       = $02E8 ; L character_00_input_stdio_msg_eatc
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G page0
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G page0
eatc_exit                       = $0302 ; L character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_getc = $0305 ; G character_00_input_stdio_msg_getc
reject_cr                       = $030D ; L character_00_input_stdio_msg_getc
cr                              = $031E ; L character_00_input_stdio_msg_getc
character_00_input_stdio_msg_ictl = $0325 ; G character_00_input_stdio_msg_ictl
_ictl_messages                  = $0333 ; L character_00_input_stdio_msg_ictl
exit_error                      = $0338 ; L character_00_input_stdio_msg_ictl
character_00_input_stdio_msg_read = $033A ; G character_00_input_stdio_msg_read
read_loop                       = $033B ; L character_00_input_stdio_msg_read
read_exit                       = $0351 ; L character_00_input_stdio_msg_read
read_exit_error                 = $0359 ; L character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = $0364 ; G character_00_input_stdio_msg_seek
seek_loop                       = $0370 ; L character_00_input_stdio_msg_seek
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G page0
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G page0
__code_driver_character_input_tail = $0386 ; G 
__code_driver_character_output_head = $0386 ; G 
zalt_00_output_sysctrl          = $0386 ; G zalt_00_output_sysctrl_driver
zalt_00_output_sysctrl_ochar_msg_putc = $038D ; L zalt_00_output_sysctrl_driver
character_00_output             = $0396 ; G character_00_output
character_00_output_ochar_msg_putc_bin = $03BC ; G character_00_output_ochar_putc_bin
putchar                         = $03D2 ; L character_00_output_ochar_putc_bin
character_00_output_stdio_msg_ictl = $03D6 ; G character_00_output_stdio_msg_ictl
exit_error                      = $03E4 ; L character_00_output_stdio_msg_ictl
character_00_output_stdio_msg_putc = $03E6 ; G character_00_output_stdio_msg_putc
putc_loop                       = $03EA ; L character_00_output_stdio_msg_putc
character_00_output_stdio_msg_writ = $03FA ; G character_00_output_stdio_msg_writ
writ_loop                       = $03FE ; L character_00_output_stdio_msg_writ
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G page0
writ_end                        = $040F ; L character_00_output_stdio_msg_writ
__code_driver_character_output_tail = $0413 ; G 
__code_driver_memstream_head    = $0413 ; G 
__code_driver_memstream_tail    = $0413 ; G 
__code_driver_terminal_input_head = $0413 ; G 
__code_driver_terminal_input_tail = $0413 ; G 
__code_driver_terminal_output_head = $0413 ; G 
__code_driver_terminal_output_tail = $0413 ; G 
__code_driver_tty_head          = $0413 ; G 
__code_driver_tty_tail          = $0413 ; G 
__code_error_head               = $0413 ; G 
error_enolck_zc                 = $0415 ; G error_enolck_zc
error_enolck_mc                 = $041B ; G error_enolck_mc
errno_mc                        = $0425 ; G errno_mc
error_mc                        = $0430 ; G error_mc
__ch_system                     = $0439 ; G page0
error_zc                        = $0439 ; G error_zc
error_eacces_mc                 = $043F ; G error_eacces_mc
error_znc                       = $0447 ; G error_znc
error_enotsup_zc                = $044E ; G error_enotsup_zc
error_enotsup_mc                = $0454 ; G error_enotsup_mc
error_lzc                       = $045A ; G error_lzc
error_lznc                      = $0461 ; G error_lznc
error_ebdfd_zc                  = $0468 ; G error_ebdfd_zc
error_ebdfd_mc                  = $046F ; G error_ebdfd_mc
__code_error_tail               = $0474 ; G 
__code_fcntl_head               = $0474 ; G 
asm_vioctl                      = $0474 ; G asm_vioctl
critical_section                = $0474 ; L asm_vioctl
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G page0
find_driver_loop                = $0482 ; L asm_vioctl
deliver_message                 = $0492 ; L asm_vioctl
__bool                          = $04A6 ; L asm_vioctl
__setf                          = $04AD ; L asm_vioctl
forward_ioctl                   = $04B8 ; L asm_vioctl
__getf                          = $04C1 ; L asm_vioctl
asm_vioctl_driver               = $04CC ; G asm_vioctl
__fcntl_fdchain_descend         = $04E8 ; G __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_2      = $04EF ; G __fcntl_fdstruct_from_fd_2
__fcntl_fdstruct_from_fd_1      = $04FA ; G __fcntl_fdstruct_from_fd_1
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G page0
__code_fcntl_tail               = $0510 ; G 
__code_font_fzx_head            = $0510 ; G 
__code_font_fzx_tail            = $0510 ; G 
__code_fp_genmath_head          = $0510 ; G 
__code_fp_genmath_tail          = $0510 ; G 
__code_fp_math48_head           = $0510 ; G 
__code_fp_math48_tail           = $0510 ; G 
__code_input_head               = $0510 ; G 
__code_input_tail               = $0510 ; G 
__code_inttypes_head            = $0510 ; G 
__code_inttypes_tail            = $0510 ; G 
__code_l_head                   = $0510 ; G 
l_jpix                          = $0510 ; G l_jpix
__thread_block_timeout          = $0513 ; G page0
__thread_context_switch         = $0513 ; G page0
__thread_unblock                = $0513 ; G page0
l_ret                           = $0513 ; G l_ret
l_setmem_hl                     = $0534 ; G l_setmem_hl
l_jphl                          = $0535 ; G l_jphl
l_decu_dehl                     = $0536 ; G l_decu_dehl
msw                             = $053C ; L l_decu_dehl
limit                           = $0542 ; L l_decu_dehl
__code_l_sccz80_head            = $0547 ; G 
__code_l_sccz80_tail            = $0547 ; G 
__code_l_sdcc_head              = $0547 ; G 
__code_l_sdcc_tail              = $0547 ; G 
__code_l_tail                   = $0547 ; G 
__code_locale_head              = $0547 ; G 
__code_locale_tail              = $0547 ; G 
__code_math_head                = $0547 ; G 
__code_math_tail                = $0547 ; G 
__code_network_head             = $0547 ; G 
__code_network_tail             = $0547 ; G 
__code_nirvanam_head            = $0547 ; G 
__code_nirvanam_tail            = $0547 ; G 
__code_nirvanap_head            = $0547 ; G 
__code_nirvanap_tail            = $0547 ; G 
__code_setjmp_head              = $0547 ; G 
__code_setjmp_tail              = $0547 ; G 
__code_sound_bit_head           = $0547 ; G 
__code_sound_bit_tail           = $0547 ; G 
__code_stdio_head               = $0547 ; G 
_getchar                        = $0547 ; G getchar
_getchar_unlocked               = $0547 ; G getchar_unlocked
asm_getchar_unlocked            = $0547 ; G asm_getchar_unlocked
asm0_fgetc_unlocked             = $054E ; G asm_fgetc_unlocked
asm_fgetc_unlocked              = $054E ; G asm_fgetc_unlocked
_putchar_fastcall               = $0559 ; G putchar_fastcall
_putchar_unlocked_fastcall      = $0559 ; G putchar_unlocked_fastcall
asm_putchar_unlocked            = $0559 ; G asm_putchar_unlocked
asm0_putchar_unlocked           = $055D ; G asm_putchar_unlocked
asm0_fputc_unlocked             = $0561 ; G asm_fputc_unlocked
asm_fputc_unlocked              = $0561 ; G asm_fputc_unlocked
__stdio_verify_input            = $0573 ; G __stdio_verify_input
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G page0
errors                          = $0590 ; L __stdio_verify_input
asm_fflush_unlocked             = $0598 ; G asm_fflush_unlocked
asm0_fflush_unlocked            = $059F ; G asm_fflush_unlocked
asm1_fflush_unlocked            = $059F ; G asm_fflush_unlocked
last_was_read                   = $05AC ; L asm_fflush_unlocked
forward_flush                   = $05C9 ; L asm_fflush_unlocked
last_was_write                  = $05C9 ; L asm_fflush_unlocked
asm__fflushall_unlocked         = $05D4 ; G asm__fflushall_unlocked
file_loop                       = $05D7 ; L asm__fflushall_unlocked
__stdio_verify_output           = $05E5 ; G __stdio_verify_output
IOCTL_OTERM_GET_OTERM           = $0602 ; G page0
errors                          = $0602 ; L __stdio_verify_output
__stdio_recv_input_raw_getc     = $060A ; G __stdio_recv_input_raw_getc
_no_ungetc_gc                   = $0628 ; L __stdio_recv_input_raw_getc
stream_error                    = $0637 ; L __stdio_recv_input_raw_getc
__stdio_send_output_raw_chars   = $063C ; G __stdio_send_output_raw
__stdio_send_output_raw_chars_unchecked = $0640 ; G __stdio_send_output_raw
__stdio_send_output_raw_buffer  = $0644 ; G __stdio_send_output_raw
__stdio_send_output_raw_buffer_unchecked = $0648 ; G __stdio_send_output_raw
__stdio_send_output_raw         = $064A ; G __stdio_send_output_raw
error_detected                  = $0652 ; L __stdio_send_output_raw
return_zero                     = $0657 ; L __stdio_send_output_raw
__stdio_nextarg_bc              = $065D ; G __stdio_nextarg_bc
__code_stdio_tail               = $0662 ; G 
__code_stdlib_head              = $0662 ; G 
asm_exit                        = $0662 ; G asm_exit
asm0_exit                       = $0665 ; G asm_exit
loop                            = $0671 ; L asm_exit
__code_stdlib_tail              = $0683 ; G 
__code_string_head              = $0683 ; G 
__code_string_tail              = $0683 ; G 
__code_temp_sp1_head            = $0683 ; G 
__code_temp_sp1_tail            = $0683 ; G 
__code_threads_head             = $0683 ; G 
__code_threads_mutex_head       = $0683 ; G 
__code_threads_tail             = $0683 ; G 
asm_mtx_init                    = $0683 ; G asm_mtx_init
unknown_type                    = $069D ; L asm_mtx_init
__code_compiler_head            = $06A2 ; G 
__code_lib_head                 = $06A2 ; G 
__code_lib_tail                 = $06A2 ; G 
__code_threads_mutex_tail       = $06A2 ; G 
__code_z80_head                 = $06A2 ; G 
__code_z80_tail                 = $06A2 ; G 
_main                           = $06A2 ; G zcc0EC62
l_main_00104                    = $06B1 ; L zcc0EC62
l_main_00102                    = $06E3 ; L zcc0EC62
l_main_00107                    = $06EF ; L zcc0EC62
__code_compiler_tail            = $06F4 ; G 
__code_user_head                = $06F4 ; G 
__code_user_tail                = $06F4 ; G 
__rodata_clib_head              = $06F4 ; G 
__rodata_clib_tail              = $06F4 ; G 
__rodata_driver_head            = $06F4 ; G 
__rodata_driver_tail            = $06F4 ; G 
__rodata_error_strings_head     = $06F4 ; G 
__rodata_font_head              = $06F4 ; G 
__rodata_font_tail              = $06F4 ; G 
IOCTL_OTERM_SCROLL              = $0702 ; G page0
__rodata_error_string_end_head  = $0714 ; G 
__rodata_error_strings_tail     = $0714 ; G 
__CODE_END_head                 = $0715 ; G 
__CODE_END_tail                 = $0715 ; G 
__DATA_head                     = $0715 ; G 
__rodata_compiler_head          = $0715 ; G 
__rodata_compiler_tail          = $0715 ; G 
__rodata_error_string_end_tail  = $0715 ; G 
__rodata_fcntl_head             = $0715 ; G 
__rodata_fcntl_tail             = $0715 ; G 
__rodata_font_4x8_head          = $0715 ; G 
__rodata_font_4x8_tail          = $0715 ; G 
__rodata_font_8x8_head          = $0715 ; G 
__rodata_font_8x8_tail          = $0715 ; G 
__rodata_font_fzx_head          = $0715 ; G 
__rodata_font_fzx_tail          = $0715 ; G 
__rodata_input_head             = $0715 ; G 
__rodata_input_tail             = $0715 ; G 
__rodata_lib_head               = $0715 ; G 
__rodata_lib_tail               = $0715 ; G 
__rodata_sound_bit_head         = $0715 ; G 
__rodata_sound_bit_tail         = $0715 ; G 
__rodata_stdio_head             = $0715 ; G 
__rodata_stdio_tail             = $0715 ; G 
__rodata_stdlib_head            = $0715 ; G 
__rodata_stdlib_tail            = $0715 ; G 
__rodata_user_head              = $0715 ; G 
__rodata_user_tail              = $0715 ; G 
__DATA_tail                     = $0716 ; G 
__data_alloc_balloc_head        = $0716 ; G 
__data_alloc_balloc_tail        = $0716 ; G 
__data_alloc_malloc_head        = $0716 ; G 
__data_clib_head                = $0716 ; G 
__data_clib_tail                = $0716 ; G 
__data_driver_head              = $0716 ; G 
__data_driver_tail              = $0716 ; G 
__data_font_head                = $0716 ; G 
__data_font_tail                = $0716 ; G 
__malloc_heap                   = $0716 ; G page0
__smc_clib_head                 = $0716 ; G 
__smc_clib_tail                 = $0716 ; G 
__smc_compiler_head             = $0716 ; G 
__smc_compiler_tail             = $0716 ; G 
__smc_driver_head               = $0716 ; G 
__smc_driver_tail               = $0716 ; G 
__smc_fcntl_head                = $0716 ; G 
__smc_fcntl_tail                = $0716 ; G 
__smc_font_head                 = $0716 ; G 
__smc_font_tail                 = $0716 ; G 
__smc_l_head                    = $0716 ; G 
__smc_l_tail                    = $0716 ; G 
__smc_lib_head                  = $0716 ; G 
__smc_lib_tail                  = $0716 ; G 
__smc_sound_bit_head            = $0716 ; G 
__smc_sound_bit_tail            = $0716 ; G 
__smc_user_head                 = $0716 ; G 
__smc_user_tail                 = $0716 ; G 
__data_alloc_malloc_tail        = $0718 ; G 
__data_fcntl_head               = $0718 ; G 
__stdio_heap                    = $0718 ; G page0
__data_fcntl_stdio_heap_head_head = $071A ; G 
__data_fcntl_tail               = $071A ; G 
__stdio_block                   = $071A ; L page0
__data_fcntl_stdio_heap_body_head = $0720 ; G 
__data_fcntl_stdio_heap_head_tail = $0720 ; G 
__i_fcntl_heap_0                = $0720 ; L page0
__i_fcntl_fdstruct_0            = $0726 ; L page0
__i_fcntl_heap_1                = $0737 ; L page0
__i_fcntl_fdstruct_1            = $073D ; L page0
__i_fcntl_fdstruct_2            = $073D ; L page0
__i_fcntl_heap_2                = $074E ; L page0
__data_fcntl_stdio_heap_body_tail = $0798 ; G 
__data_fcntl_stdio_heap_tail_head = $0798 ; G 
__i_fcntl_heap_3                = $0798 ; L page0
__data_fcntl_fdtable_body_head  = $079A ; G 
__data_fcntl_stdio_heap_tail_tail = $079A ; G 
__fcntl_fdtbl                   = $079A ; G page0
__data_fcntl_fdtable_body_tail  = $07A0 ; G 
__data_sound_bit_head           = $07A0 ; G 
__data_sound_bit_tail           = $07A0 ; G 
__data_stdio_head               = $07A0 ; G 
_stdin                          = $07A0 ; G page0
__i_stdio_file_0                = $07A2 ; L page0
_stdout                         = $07B1 ; G page0
__i_stdio_file_1                = $07B3 ; L page0
_stderr                         = $07C2 ; G page0
__i_stdio_file_2                = $07C4 ; L page0
__stdio_open_file_list          = $07D3 ; G page0
__stdio_closed_file_list        = $07D5 ; G page0
__data_stdio_tail               = $07D9 ; G 
__data_stdlib_head              = $07D9 ; G 
__data_stdlib_tail              = $07D9 ; G 
__data_threads_head             = $07D9 ; G 
__thrd_id                       = $07D9 ; G page0
__BSS_head                      = $07DA ; G 
__DATA_END_head                 = $07DA ; G 
__DATA_END_tail                 = $07DA ; G 
__data_compiler_head            = $07DA ; G 
__data_compiler_tail            = $07DA ; G 
__data_lib_head                 = $07DA ; G 
__data_lib_tail                 = $07DA ; G 
__data_threads_tail             = $07DA ; G 
__data_user_head                = $07DA ; G 
__data_user_tail                = $07DA ; G 
__BSS_UNINITIALIZED_head        = $07DB ; G 
__BSS_UNINITIALIZED_tail        = $07DB ; G 
__BSS_tail                      = $07DB ; G 
__bss_alloc_balloc_head         = $07DB ; G 
__bss_alloc_balloc_tail         = $07DB ; G 
__bss_alloc_malloc_head         = $07DB ; G 
__bss_alloc_malloc_tail         = $07DB ; G 
__bss_arch_head                 = $07DB ; G 
__bss_arch_tail                 = $07DB ; G 
__bss_clib_head                 = $07DB ; G 
__bss_clib_tail                 = $07DB ; G 
__bss_compress_aplib_head       = $07DB ; G 
__bss_compress_aplib_tail       = $07DB ; G 
__bss_driver_head               = $07DB ; G 
__bss_driver_tail               = $07DB ; G 
__bss_error_head                = $07DB ; G 
__bss_font_head                 = $07DB ; G 
__bss_font_tail                 = $07DB ; G 
_errno                          = $07DB ; G _errno
__bss_error_tail                = $07DD ; G 
__bss_fcntl_head                = $07DD ; G 
__bss_fcntl_tail                = $07DD ; G 
__bss_input_head                = $07DD ; G 
__bss_input_tail                = $07DD ; G 
__bss_sound_bit_head            = $07DD ; G 
__bss_sound_bit_tail            = $07DD ; G 
__bss_stdio_head                = $07DD ; G 
__bss_stdio_tail                = $07DD ; G 
__bss_stdlib_head               = $07DD ; G 
__exit_stack                    = $07DD ; G page0
__quickexit_stack               = $07E2 ; G page0
__BSS_END_head                  = $07E3 ; G 
__BSS_END_tail                  = $07E3 ; G 
__IGNORE_head                   = $07E3 ; G 
__IGNORE_tail                   = $07E3 ; G 
__bss_compiler_head             = $07E3 ; G 
__bss_compiler_tail             = $07E3 ; G 
__bss_lib_head                  = $07E3 ; G 
__bss_lib_tail                  = $07E3 ; G 
__bss_stdlib_tail               = $07E3 ; G 
__bss_string_head               = $07E3 ; G 
__bss_string_tail               = $07E3 ; G 
__bss_user_head                 = $07E3 ; G 
__bss_user_tail                 = $07E3 ; G 
__size                          = $07E3 ; G 
__tail                          = $07E3 ; G 
IOCTL_OTERM_FONT                = $0802 ; G page0
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G page0
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G page0
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G page0
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G page0
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G page0
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G page0
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G page0
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G page0
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G page0
IOCTL_ITERM_CAPS                = $C009 ; G page0
IOCTL_ITERM_COOK                = $C011 ; G page0
IOCTL_OTERM_CRLF                = $C012 ; G page0
IOCTL_OCHAR_CRLF                = $C014 ; G page0
IOCTL_ITERM_LINE                = $C021 ; G page0
IOCTL_OTERM_COOK                = $C022 ; G page0
IOCTL_ITERM_PASS                = $C041 ; G page0
IOCTL_OTERM_PAUSE               = $C042 ; G page0
IOCTL_ITERM_ECHO                = $C081 ; G page0
IOCTL_OTERM_PAGE                = $C082 ; G page0
IOCTL_ITERM_CRLF                = $C101 ; G page0
IOCTL_OTERM_BELL                = $C102 ; G page0
IOCTL_ICHAR_CRLF                = $C103 ; G page0
IOCTL_ITERM_CURS                = $C201 ; G page0
IOCTL_OTERM_SIGNAL              = $C202 ; G page0
IOCTL_OTERM_CLEAR               = $E002 ; G page0
DEF__crt_on_exit                = $10001 ; L page0
