TAR__clib_malloc_heap_size      = $FFFFFFFF ; L page0
__clib_malloc_heap_size         = $FFFFFFFF ; L page0
CLIB_OPT_STDIO                  = $0000 ; L page0
DEF__crt_enable_eidi            = $0000 ; L page0
DEF__crt_include_preamble       = $0000 ; L page0
IOCTL_RESET                     = $0000 ; G page0
STDIO_SEEK_SET                  = $0000 ; G page0
TAR__clib_balloc_table_size     = $0000 ; L page0
TAR__clib_fopen_max             = $0000 ; L page0
TAR__clib_open_max              = $0000 ; L page0
TAR__clib_quickexit_stack_size  = $0000 ; L page0
TAR__crt_enable_commandline     = $0000 ; L page0
TAR__crt_enable_nmi             = $0000 ; L page0
TAR__crt_enable_restart         = $0000 ; L page0
TAR__crt_enable_rst             = $0000 ; L page0
TAR__crt_initialize_bss         = $0000 ; L page0
TAR__crt_model                  = $0000 ; L page0
TAR__crt_org_bss                = $0000 ; L page0
TAR__crt_org_code               = $0000 ; L page0
TAR__crt_org_data               = $0000 ; L page0
TAR__register_sp                = $0000 ; L page0
__BSS_END_size                  = $0000 ; G 
__BSS_UNINITIALIZED_size        = $0000 ; G 
__CLIB_OPT_FASTCOPY             = $0000 ; L asm_memset
__CLIB_OPT_IMATH                = $0000 ; L l_divu_16_16x8
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm_vioctl
__CLIB_OPT_MULTITHREAD          = $0000 ; L free_fastcall
__CLIB_OPT_MULTITHREAD          = $0000 ; L malloc_fastcall
__CLIB_OPT_NUM2TXT              = $0000 ; L asm_utoa
__CODE_END_size                 = $0000 ; G 
__CODE_head                     = $0000 ; G 
__CRTDEF                        = $0000 ; L page0
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G page0
__IGNORE_size                   = $0000 ; G 
__MMAP                          = $0000 ; L page0
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_stdio_size                = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L page0
__clib_fopen_max                = $0000 ; L page0
__clib_open_max                 = $0000 ; L page0
__clib_quickexit_stack_size     = $0000 ; L page0
__code_adt_b_array_size         = $0000 ; G 
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_forward_list_size  = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_arch_size                = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_common_size          = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_terminal_input_size = $0000 ; G 
__code_driver_terminal_output_size = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_fp_math48_size           = $0000 ; G 
__code_input_size               = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sccz80_size            = $0000 ; G 
__code_l_sdcc_size              = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_sound_bit_size           = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_user_size                = $0000 ; G 
__code_zalt_lib_size            = $0000 ; G 
__crt_enable_restart            = $0000 ; L page0
__crt_initialize_bss            = $0000 ; L page0
__crt_model                     = $0000 ; L page0
__crt_org_bss                   = $0000 ; L page0
__crt_org_code                  = $0000 ; L page0
__crt_org_data                  = $0000 ; L page0
__data_alloc_balloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_sound_bit_size           = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G page0
__rodata_clib_size              = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_4x8_size          = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_input_size             = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_stdlib_size            = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
debug_var_af_offset             = $0000 ; L debug
startup                         = $0000 ; L page0
thrd_success                    = $0000 ; G page0
DEFINED_CLIB_OPT_STDIO          = $0001 ; L page0
DEFINED_Z88DK_USES_SDCC         = $0001 ; L page0
STDIO_MSG_PUTC                  = $0001 ; G page0
STDIO_SEEK_CUR                  = $0001 ; G page0
TAR__crt_enable_close           = $0001 ; L page0
Z88DK_USES_SDCC                 = $0001 ; L page0
_CLIB_CFG_ASM_                  = $0001 ; L asm_memset
_CLIB_CFG_ASM_                  = $0001 ; L asm_utoa
_CLIB_CFG_ASM_                  = $0001 ; L asm_vioctl
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_getc
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_read
_CLIB_CFG_ASM_                  = $0001 ; L character_00_output_ochar_putc_bin
_CLIB_CFG_ASM_                  = $0001 ; L console_01_input_terminal_fdriver
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_edom_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_einval_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_einval_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enomem_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enomem_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_zc
_CLIB_CFG_ASM_                  = $0001 ; L free_fastcall
_CLIB_CFG_ASM_                  = $0001 ; L l_divu_16_16x8
_CLIB_CFG_ASM_                  = $0001 ; L malloc_fastcall
__BSS_size                      = $0001 ; G 
__CLIB_OPT_ERROR                = $0001 ; L error_ebdfd_mc
__CLIB_OPT_ERROR                = $0001 ; L error_ebdfd_zc
__CLIB_OPT_ERROR                = $0001 ; L error_edom_mc
__CLIB_OPT_ERROR                = $0001 ; L error_einval_mc
__CLIB_OPT_ERROR                = $0001 ; L error_einval_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enolck_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enolck_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enomem_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enomem_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enotsup_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enotsup_zc
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G page0
__SDCC                          = $0001 ; L __stdio_nextarg_bc
__SDCC                          = $0001 ; L asm_memset
__SDCC                          = $0001 ; L asm_utoa
__SDCC                          = $0001 ; L asm_vioctl
__SDCC                          = $0001 ; L character_00_input_stdio_msg_getc
__SDCC                          = $0001 ; L character_00_input_stdio_msg_read
__SDCC                          = $0001 ; L character_00_output_ochar_putc_bin
__SDCC                          = $0001 ; L console_01_input_terminal_fdriver
__SDCC                          = $0001 ; L error_ebdfd_mc
__SDCC                          = $0001 ; L error_ebdfd_zc
__SDCC                          = $0001 ; L error_edom_mc
__SDCC                          = $0001 ; L error_einval_mc
__SDCC                          = $0001 ; L error_einval_zc
__SDCC                          = $0001 ; L error_enolck_mc
__SDCC                          = $0001 ; L error_enolck_zc
__SDCC                          = $0001 ; L error_enomem_mc
__SDCC                          = $0001 ; L error_enomem_zc
__SDCC                          = $0001 ; L error_enotsup_mc
__SDCC                          = $0001 ; L error_enotsup_zc
__SDCC                          = $0001 ; L free_fastcall
__SDCC                          = $0001 ; L l_divu_16_16x8
__SDCC                          = $0001 ; L malloc_fastcall
__SDCC_IY                       = $0001 ; L __stdio_nextarg_bc
__SDCC_IY                       = $0001 ; L asm_memset
__SDCC_IY                       = $0001 ; L asm_utoa
__SDCC_IY                       = $0001 ; L asm_vioctl
__SDCC_IY                       = $0001 ; L character_00_input_stdio_msg_getc
__SDCC_IY                       = $0001 ; L character_00_input_stdio_msg_read
__SDCC_IY                       = $0001 ; L character_00_output_ochar_putc_bin
__SDCC_IY                       = $0001 ; L console_01_input_terminal_fdriver
__SDCC_IY                       = $0001 ; L error_ebdfd_mc
__SDCC_IY                       = $0001 ; L error_ebdfd_zc
__SDCC_IY                       = $0001 ; L error_edom_mc
__SDCC_IY                       = $0001 ; L error_einval_mc
__SDCC_IY                       = $0001 ; L error_einval_zc
__SDCC_IY                       = $0001 ; L error_enolck_mc
__SDCC_IY                       = $0001 ; L error_enolck_zc
__SDCC_IY                       = $0001 ; L error_enomem_mc
__SDCC_IY                       = $0001 ; L error_enomem_zc
__SDCC_IY                       = $0001 ; L error_enotsup_mc
__SDCC_IY                       = $0001 ; L error_enotsup_zc
__SDCC_IY                       = $0001 ; L free_fastcall
__SDCC_IY                       = $0001 ; L l_divu_16_16x8
__SDCC_IY                       = $0001 ; L malloc_fastcall
__SDCC_IY                       = $0001 ; L page0
__crt_enable_close              = $0001 ; L page0
__data_threads_size             = $0001 ; G 
__rodata_error_string_end_size  = $0001 ; G 
isr_table_index                 = $0001 ; L page0
mtx_plain                       = $0001 ; G page0
thrd_error                      = $0001 ; G page0
STDIO_MSG_WRIT                  = $0002 ; G page0
STDIO_SEEK_END                  = $0002 ; G page0
TAR__clib_exit_stack_size       = $0002 ; L page0
__EBADF                         = $0002 ; G page0
__bss_error_size                = $0002 ; G 
__clib_exit_stack_size          = $0002 ; L page0
__data_alloc_malloc_size        = $0002 ; G 
__data_fcntl_size               = $0002 ; G 
__data_fcntl_stdio_heap_tail_size = $0002 ; G 
__exit_stack_size               = $0002 ; G page0
debug_var_bc_offset             = $0002 ; L debug
mtx_recursive                   = $0002 ; G page0
thrd_nomem                      = $0002 ; G page0
STDIO_MSG_GETC                  = $0003 ; G page0
__EBDFD                         = $0003 ; G page0
__code_crt_return_size          = $0003 ; G 
__fcntl_fdtbl_size              = $0003 ; G page0
STDIO_MSG_EATC                  = $0004 ; G page0
__EDOM                          = $0004 ; G page0
debug_var_de_offset             = $0004 ; L debug
mtx_timed                       = $0004 ; G page0
thrd_busy                       = $0004 ; G page0
STDIO_MSG_READ                  = $0005 ; G page0
__EFBIG                         = $0005 ; G page0
__code_stdio_size               = $0005 ; G 
STDIO_MSG_SEEK                  = $0006 ; G page0
__EINVAL                        = $0006 ; G page0
__bss_stdlib_size               = $0006 ; G 
__data_fcntl_fdtable_body_size  = $0006 ; G 
__data_fcntl_stdio_heap_head_size = $0006 ; G 
debug_var_hl_offset             = $0006 ; L debug
DEF__crt_enable_streams         = $0007 ; L page0
STDIO_MSG_ICTL                  = $0007 ; G page0
__EMFILE                        = $0007 ; G page0
__code_crt_main_size            = $0007 ; G 
STDIO_MSG_FLSH                  = $0008 ; G page0
__ENFILE                        = $0008 ; G page0
debug_sysctrl_port              = $0008 ; L debug
debug_var_ix_offset             = $0008 ; L debug
thrd_timedout                   = $0008 ; G page0
STDIO_MSG_CLOS                  = $0009 ; G page0
__ENOLCK                        = $0009 ; G page0
__code_ctype_size               = $0009 ; G 
CHAR_LF                         = $000A ; L character_00_input_stdio_msg_read
CHAR_LF                         = $000A ; L character_00_output_ochar_putc_bin
__ENOMEM                        = $000A ; G page0
debug_var_iy_offset             = $000A ; L debug
__ENOTSUP                       = $000B ; G page0
__EOVERFLOW                     = $000C ; G page0
debug_var_sp_offset             = $000C ; L debug
CHAR_CR                         = $000D ; L character_00_input_stdio_msg_getc
CHAR_CR                         = $000D ; L character_00_output_ochar_putc_bin
__ERANGE                        = $000D ; G page0
__ESTAT                         = $000E ; G page0
__data_compiler_size            = $000E ; G 
debug_var_pc_offset             = $000E ; L debug
ICHAR_MSG_GETC                  = $000F ; G page0
ITERM_MSG_GETC                  = $000F ; G page0
__EAGAIN                        = $000F ; G page0
__EWOULDBLOCK                   = $000F ; G page0
__bss_compiler_size             = $000F ; G 
ITERM_MSG_INTERRUPT             = $0010 ; G page0
debug_var_af2_offset            = $0010 ; L debug
ITERM_MSG_PUTC                  = $0011 ; G page0
ITERM_MSG_PRINT_CURSOR          = $0012 ; G page0
debug_var_bc2_offset            = $0012 ; L debug
ITERM_MSG_ERASE_CURSOR          = $0013 ; G page0
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G page0
debug_var_de2_offset            = $0014 ; L debug
ITERM_MSG_BS                    = $0015 ; G page0
ITERM_MSG_BS_PWD                = $0016 ; G page0
ITERM_MSG_READLINE_BEGIN        = $0017 ; G page0
ITERM_MSG_READLINE_END          = $0018 ; G page0
debug_var_hl2_offset            = $0018 ; L debug
debug_vars_size                 = $0018 ; L debug
ITERM_MSG_BELL                  = $0019 ; G page0
OCHAR_MSG_PUTC_BIN              = $001E ; G page0
OTERM_MSG_PUTC                  = $001E ; G page0
OTERM_MSG_TTY                   = $001F ; G page0
__code_threads_mutex_size       = $001F ; G 
__code_zalt_system_size         = $001F ; G 
OCHAR_MSG_PUTC                  = $0020 ; G page0
OTERM_MSG_PRINTC                = $0020 ; G page0
bios_sysctrl_debugconsole       = $0020 ; L system
OTERM_MSG_SCROLL                = $0021 ; G page0
__code_z80_size                 = $0021 ; G 
OTERM_MSG_CLS                   = $0022 ; G page0
OTERM_MSG_PAUSE                 = $0023 ; G page0
OTERM_MSG_BELL                  = $0024 ; G page0
__code_crt_init_size            = $0024 ; G 
__rodata_compiler_size          = $0024 ; G 
OTERM_MSG_PSCROLL               = $0025 ; G page0
__code_driver_general_size      = $0025 ; G 
__rodata_error_strings_size     = $002E ; G 
__data_stdio_size               = $0039 ; G 
__code_math_size                = $003B ; G 
bios_var_ram_top_page           = $0040 ; G page0
bios_var_ram_active_page        = $0041 ; G page0
bios_var_ram_top                = $0042 ; L page0
__code_l_size                   = $0056 ; G 
bios_load_byte_instruction      = $006E ; G page0
bios_load_word_instruction      = $0075 ; G page0
__data_fcntl_stdio_heap_body_size = $0078 ; G 
__code_error_size               = $007C ; G 
__code_stdlib_size              = $007D ; G 
BiosFn1                         = $007E ; L page0
BiosFn2                         = $007E ; L page0
BiosFn3                         = $007E ; L page0
BiosFn4                         = $007E ; L page0
BiosFn5                         = $007E ; L page0
BiosFn6                         = $007E ; L page0
TAR__clib_stdio_heap_size       = $0080 ; L page0
__clib_stdio_heap_size          = $0080 ; L page0
__code_zalt_debug_size          = $0087 ; G 
__code_driver_character_output_size = $008D ; G 
__code_fcntl_size               = $009C ; G 
__code_alloc_malloc_size        = $00C1 ; G 
__code_driver_character_input_size = $00DB ; G 
__code_string_size              = $00DF ; G 
isr_table_address               = $0100 ; L page0
IOCTL_OTERM_CLS                 = $0102 ; G page0
TAR__crt_stack_size             = $0200 ; L page0
__crt_stack_size                = $0200 ; L page0
isr_null_vector                 = $0200 ; G page0
IOCTL_ITERM_TIE                 = $0201 ; G page0
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G page0
bios_trap_illegal               = $0203 ; G page0
bios_reset_init                 = $0204 ; G page0
resetWarm                       = $0229 ; L page0
__CODE_size                     = $0231 ; G 
__CODE_tail                     = $0231 ; G 
__Start                         = $0231 ; G page0
__code_crt_init_head            = $0231 ; G 
__code_crt_init_tail            = $0255 ; G 
__code_crt_main_head            = $0255 ; G 
__Exit                          = $025B ; G page0
__code_crt_exit_head            = $025C ; G 
__code_crt_exit_tail            = $025C ; G 
__code_crt_main_tail            = $025C ; G 
__code_crt_return_head          = $025C ; G 
zalt_oblivian                   = $025D ; L page0
_System_DebugConsole_Out__fast  = $025F ; G system
__code_crt_common_head          = $025F ; G 
__code_crt_common_tail          = $025F ; G 
__code_crt_return_tail          = $025F ; G 
__code_zalt_system_head         = $025F ; G 
bios_sysctrl_debugconsole_out   = $025F ; G system
_System_DebugConsole_In         = $0265 ; G system
bios_sysctrl_debugconsole_in    = $0265 ; G system
keyboard_isr                    = $026F ; G keyboard
__code_zalt_debug_head          = $027E ; G 
__code_zalt_lib_head            = $027E ; G 
__code_zalt_lib_tail            = $027E ; G 
__code_zalt_system_tail         = $027E ; G 
debug_var_af                    = $027E ; L debug
debug_var_base                  = $027E ; L debug
debug_vars                      = $027E ; L debug
debug_save_registers            = $0280 ; G debug
debug_var_bc                    = $0280 ; L debug
debug_var_de                    = $0282 ; L debug
debug_var_hl                    = $0284 ; L debug
debug_var_ix                    = $0286 ; L debug
debug_var_iy                    = $0288 ; L debug
debug_var_sp                    = $028A ; L debug
debug_var_pc                    = $028C ; L debug
debug_var_af2                   = $028E ; L debug
debug_var_bc2                   = $0290 ; L debug
debug_var_de2                   = $0292 ; L debug
debug_var_hl2                   = $0296 ; L debug
debug_restore_registers_all     = $02B9 ; L debug
debug_restore_registers         = $02C1 ; L debug
debug_infopoint                 = $02F2 ; G debug
debug_infopoint_loop            = $02FD ; L debug
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G page0
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G page0
__code_adt_b_array_head         = $0305 ; G 
__code_adt_b_array_tail         = $0305 ; G 
__code_adt_b_vector_head        = $0305 ; G 
__code_adt_b_vector_tail        = $0305 ; G 
__code_adt_ba_priority_queue_head = $0305 ; G 
__code_adt_ba_priority_queue_tail = $0305 ; G 
__code_adt_ba_stack_head        = $0305 ; G 
__code_adt_ba_stack_tail        = $0305 ; G 
__code_adt_bv_priority_queue_head = $0305 ; G 
__code_adt_bv_priority_queue_tail = $0305 ; G 
__code_adt_bv_stack_head        = $0305 ; G 
__code_adt_bv_stack_tail        = $0305 ; G 
__code_adt_p_forward_list_alt_head = $0305 ; G 
__code_adt_p_forward_list_alt_tail = $0305 ; G 
__code_adt_p_forward_list_head  = $0305 ; G 
__code_adt_p_forward_list_tail  = $0305 ; G 
__code_adt_p_list_head          = $0305 ; G 
__code_adt_p_list_tail          = $0305 ; G 
__code_adt_p_queue_head         = $0305 ; G 
__code_adt_p_queue_tail         = $0305 ; G 
__code_adt_p_stack_head         = $0305 ; G 
__code_adt_p_stack_tail         = $0305 ; G 
__code_adt_w_array_head         = $0305 ; G 
__code_adt_w_array_tail         = $0305 ; G 
__code_adt_w_vector_head        = $0305 ; G 
__code_adt_w_vector_tail        = $0305 ; G 
__code_adt_wa_priority_queue_head = $0305 ; G 
__code_adt_wa_priority_queue_tail = $0305 ; G 
__code_adt_wa_stack_head        = $0305 ; G 
__code_adt_wa_stack_tail        = $0305 ; G 
__code_adt_wv_priority_queue_head = $0305 ; G 
__code_adt_wv_priority_queue_tail = $0305 ; G 
__code_adt_wv_stack_head        = $0305 ; G 
__code_adt_wv_stack_tail        = $0305 ; G 
__code_alloc_balloc_head        = $0305 ; G 
__code_alloc_balloc_tail        = $0305 ; G 
__code_alloc_malloc_head        = $0305 ; G 
__code_clib_head                = $0305 ; G 
__code_clib_tail                = $0305 ; G 
__code_driver_head              = $0305 ; G 
__code_driver_tail              = $0305 ; G 
__code_font_head                = $0305 ; G 
__code_font_tail                = $0305 ; G 
__code_zalt_debug_tail          = $0305 ; G 
_free_fastcall                  = $0305 ; G free_fastcall
_free_unlocked_fastcall         = $0305 ; G free_unlocked_fastcall
asm_free_unlocked               = $0305 ; G asm_free_unlocked
asm_heap_free_unlocked          = $030C ; G asm_heap_free_unlocked
remove_block                    = $031A ; L asm_heap_free_unlocked
asm_heap_init                   = $0330 ; G asm_heap_init
_malloc_fastcall                = $0352 ; G malloc_fastcall
_malloc_unlocked_fastcall       = $0352 ; G malloc_unlocked_fastcall
asm_malloc_unlocked             = $0352 ; G asm_malloc_unlocked
asm_heap_alloc_unlocked         = $0359 ; G asm_heap_alloc_unlocked
block_loop                      = $0369 ; L asm_heap_alloc_unlocked
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G page0
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G page0
found_memory                    = $0388 ; L asm_heap_alloc_unlocked
__heap_allocate_block           = $038C ; G __heap_allocate_block
insert_block                    = $0394 ; L __heap_allocate_block
block_next_present              = $03A9 ; L __heap_allocate_block
block_next_absent               = $03B1 ; L __heap_allocate_block
overlay_block                   = $03BD ; L __heap_allocate_block
__code_alloc_malloc_tail        = $03C6 ; G 
__code_alloc_obstack_head       = $03C6 ; G 
__code_alloc_obstack_tail       = $03C6 ; G 
__code_arch_head                = $03C6 ; G 
__code_arch_tail                = $03C6 ; G 
__code_bifrost2_head            = $03C6 ; G 
__code_bifrost2_tail            = $03C6 ; G 
__code_bifrost_h_head           = $03C6 ; G 
__code_bifrost_h_tail           = $03C6 ; G 
__code_bifrost_l_head           = $03C6 ; G 
__code_bifrost_l_tail           = $03C6 ; G 
__code_compress_aplib_head      = $03C6 ; G 
__code_compress_aplib_tail      = $03C6 ; G 
__code_compress_zx7_head        = $03C6 ; G 
__code_compress_zx7_tail        = $03C6 ; G 
__code_ctype_head               = $03C6 ; G 
asm_tolower                     = $03C6 ; G asm_tolower
__code_ctype_tail               = $03CF ; G 
__code_driver_general_head      = $03CF ; G 
console_01_input_terminal_fdriver = $03CF ; G console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = $03CF ; G console_01_output_terminal_fdriver
device_reset_error              = $03D7 ; G device_reset_error
device_return_error             = $03E0 ; G device_return_error
device_set_error                = $03E7 ; G device_set_error
__code_driver_character_input_head = $03F4 ; G 
__code_driver_general_tail      = $03F4 ; G 
zalt_00_input_sysctrl           = $03F4 ; G zalt_00_input_sysctrl_driver
zalt_00_input_sysctrl_ichar_msg_getc = $03FB ; L zalt_00_input_sysctrl_driver
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G page0
character_00_input              = $0406 ; G character_00_input
character_00_input_stdio_msg_eatc = $042C ; G character_00_input_stdio_msg_eatc
eatc_loop                       = $0431 ; L character_00_input_stdio_msg_eatc
eatc_exit                       = $044B ; L character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_getc = $044E ; G character_00_input_stdio_msg_getc
reject_cr                       = $0456 ; L character_00_input_stdio_msg_getc
cr                              = $0467 ; L character_00_input_stdio_msg_getc
character_00_input_stdio_msg_ictl = $046E ; G character_00_input_stdio_msg_ictl
_ictl_messages                  = $047C ; L character_00_input_stdio_msg_ictl
exit_error                      = $0481 ; L character_00_input_stdio_msg_ictl
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G page0
character_00_input_stdio_msg_read = $0483 ; G character_00_input_stdio_msg_read
read_loop                       = $0484 ; L character_00_input_stdio_msg_read
read_exit                       = $049A ; L character_00_input_stdio_msg_read
read_exit_error                 = $04A2 ; L character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = $04AD ; G character_00_input_stdio_msg_seek
seek_loop                       = $04B9 ; L character_00_input_stdio_msg_seek
__code_driver_character_input_tail = $04CF ; G 
__code_driver_character_output_head = $04CF ; G 
zalt_00_output_sysctrl          = $04CF ; G zalt_00_output_sysctrl_driver
zalt_00_output_sysctrl_ochar_msg_putc = $04D6 ; L zalt_00_output_sysctrl_driver
character_00_output             = $04DF ; G character_00_output
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G page0
character_00_output_ochar_msg_putc_bin = $0505 ; G character_00_output_ochar_putc_bin
putchar                         = $051B ; L character_00_output_ochar_putc_bin
character_00_output_stdio_msg_ictl = $051F ; G character_00_output_stdio_msg_ictl
exit_error                      = $052D ; L character_00_output_stdio_msg_ictl
character_00_output_stdio_msg_putc = $052F ; G character_00_output_stdio_msg_putc
putc_loop                       = $0533 ; L character_00_output_stdio_msg_putc
character_00_output_stdio_msg_writ = $0543 ; G character_00_output_stdio_msg_writ
writ_loop                       = $0547 ; L character_00_output_stdio_msg_writ
writ_end                        = $0558 ; L character_00_output_stdio_msg_writ
__code_driver_character_output_tail = $055C ; G 
__code_driver_memstream_head    = $055C ; G 
__code_driver_memstream_tail    = $055C ; G 
__code_driver_terminal_input_head = $055C ; G 
__code_driver_terminal_input_tail = $055C ; G 
__code_driver_terminal_output_head = $055C ; G 
__code_driver_terminal_output_tail = $055C ; G 
__code_driver_tty_head          = $055C ; G 
__code_driver_tty_tail          = $055C ; G 
__code_error_head               = $055C ; G 
error_enolck_zc                 = $055E ; G error_enolck_zc
error_enolck_mc                 = $0564 ; G error_enolck_mc
errno_mc                        = $056E ; G errno_mc
error_enomem_zc                 = $0578 ; G error_enomem_zc
error_enomem_mc                 = $057E ; G error_enomem_mc
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G page0
error_mc                        = $0586 ; G error_mc
__ch_system                     = $058F ; G page0
error_zc                        = $058F ; G error_zc
error_einval_zc                 = $0597 ; G error_einval_zc
error_einval_mc                 = $059D ; G error_einval_mc
error_divide_by_zero_mc         = $05A3 ; G error_divide_by_zero_mc
error_edom_mc                   = $05A3 ; G error_edom_mc
error_znc                       = $05AB ; G error_znc
error_enotsup_zc                = $05B2 ; G error_enotsup_zc
error_enotsup_mc                = $05B8 ; G error_enotsup_mc
error_lzc                       = $05BE ; G error_lzc
error_lznc                      = $05C5 ; G error_lznc
error_ebdfd_zc                  = $05CC ; G error_ebdfd_zc
error_ebdfd_mc                  = $05D3 ; G error_ebdfd_mc
__code_error_tail               = $05D8 ; G 
__code_fcntl_head               = $05D8 ; G 
asm_vioctl                      = $05D8 ; G asm_vioctl
critical_section                = $05D8 ; L asm_vioctl
find_driver_loop                = $05E6 ; L asm_vioctl
deliver_message                 = $05F6 ; L asm_vioctl
IOCTL_OTERM_GET_OTERM           = $0602 ; G page0
__bool                          = $060A ; L asm_vioctl
__setf                          = $0611 ; L asm_vioctl
forward_ioctl                   = $061C ; L asm_vioctl
__getf                          = $0625 ; L asm_vioctl
asm_vioctl_driver               = $0630 ; G asm_vioctl
__fcntl_fdchain_descend         = $064C ; G __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_2      = $0653 ; G __fcntl_fdstruct_from_fd_2
__fcntl_fdstruct_from_fd_1      = $065E ; G __fcntl_fdstruct_from_fd_1
__code_fcntl_tail               = $0674 ; G 
__code_font_fzx_head            = $0674 ; G 
__code_font_fzx_tail            = $0674 ; G 
__code_fp_genmath_head          = $0674 ; G 
__code_fp_genmath_tail          = $0674 ; G 
__code_fp_math48_head           = $0674 ; G 
__code_fp_math48_tail           = $0674 ; G 
__code_input_head               = $0674 ; G 
__code_input_tail               = $0674 ; G 
__code_inttypes_head            = $0674 ; G 
__code_inttypes_tail            = $0674 ; G 
__code_l_head                   = $0674 ; G 
l_jpix                          = $0674 ; G l_jpix
__thread_block_timeout          = $0677 ; G page0
__thread_context_switch         = $0677 ; G page0
__thread_unblock                = $0677 ; G page0
l_ret                           = $0677 ; G l_ret
l_setmem_hl                     = $0698 ; G l_setmem_hl
___sdcc_call_hl                 = $0699 ; G ___sdcc_call_hl
l_jphl                          = $0699 ; G l_jphl
l_valid_base                    = $069A ; G l_valid_base
l_neg_hl                        = $06A7 ; G l_neg_hl
l_num2char                      = $06AF ; G l_num2char
alpha                           = $06B6 ; L l_num2char
l_decu_dehl                     = $06B9 ; G l_decu_dehl
msw                             = $06BF ; L l_decu_dehl
limit                           = $06C5 ; L l_decu_dehl
__code_l_sccz80_head            = $06CA ; G 
__code_l_sccz80_tail            = $06CA ; G 
__code_l_sdcc_head              = $06CA ; G 
__code_l_sdcc_tail              = $06CA ; G 
__code_l_tail                   = $06CA ; G 
__code_locale_head              = $06CA ; G 
__code_locale_tail              = $06CA ; G 
__code_math_head                = $06CA ; G 
l_small_divu_16_16x16           = $06CB ; G l_small_divu_16_16x16
l0_small_divu_16_16x16          = $06CF ; G l_small_divu_16_16x16
divisor_sixteen_bit             = $06D3 ; L l_small_divu_16_16x16
loop_16_0                       = $06D9 ; L l_small_divu_16_16x16
loop_16_1                       = $06E1 ; L l_small_divu_16_16x16
l_divu_16_16x8                  = $06EB ; G l_divu_16_16x8
l_small_divu_16_16x8            = $06EB ; G l_small_divu_16_16x16
l0_divu_16_16x8                 = $06EF ; G l_divu_16_16x8
l0_small_divu_16_16x8           = $06EF ; G l_small_divu_16_16x16
loop_8_0                        = $06F3 ; L l_small_divu_16_16x16
loop_8_2                        = $06FA ; L l_small_divu_16_16x16
loop_8_1                        = $06FC ; L l_small_divu_16_16x16
divide_zero                     = $0701 ; L l_small_divu_16_16x16
IOCTL_OTERM_SCROLL              = $0702 ; G page0
__code_math_tail                = $0705 ; G 
__code_network_head             = $0705 ; G 
__code_network_tail             = $0705 ; G 
__code_nirvanam_head            = $0705 ; G 
__code_nirvanam_tail            = $0705 ; G 
__code_nirvanap_head            = $0705 ; G 
__code_nirvanap_tail            = $0705 ; G 
__code_setjmp_head              = $0705 ; G 
__code_setjmp_tail              = $0705 ; G 
__code_sound_bit_head           = $0705 ; G 
__code_sound_bit_tail           = $0705 ; G 
__code_stdio_head               = $0705 ; G 
__stdio_nextarg_bc              = $0705 ; G __stdio_nextarg_bc
__code_stdio_tail               = $070A ; G 
__code_stdlib_head              = $070A ; G 
_itoa_callee                    = $070A ; G itoa_callee
_utoa_callee                    = $0712 ; G utoa_callee
asm_exit                        = $071A ; G asm_exit
asm0_exit                       = $071D ; G asm_exit
loop                            = $0729 ; L asm_exit
asm_itoa                        = $073B ; G asm_itoa
asm0_itoa                       = $0740 ; G asm_itoa
asm_utoa                        = $075C ; G asm_utoa
asm0_utoa                       = $0761 ; G asm_utoa
asm1_utoa                       = $0767 ; G asm_utoa
compute_lp                      = $076E ; L asm_utoa
write_lp                        = $0780 ; L asm_utoa
__code_stdlib_tail              = $0787 ; G 
__code_string_head              = $0787 ; G 
_memset_callee                  = $0787 ; G memset_callee
_strcmp_callee                  = $078F ; G strcmp_callee
_strcasecmp_callee              = $0795 ; G strcasecmp_callee
_stricmp_callee                 = $0795 ; G stricmp_callee
_strlcpy_callee                 = $079B ; G strlcpy_callee
_strncmp_callee                 = $07A3 ; G strncmp_callee
_strncasecmp_callee             = $07AB ; G strncasecmp_callee
_strnicmp_callee                = $07AB ; G strnicmp_callee
_strnlen_callee                 = $07B3 ; G strnlen_callee
asm_memset                      = $07BA ; G asm_memset
asm_strcasecmp                  = $07CB ; G asm_strcasecmp
loop                            = $07CB ; L asm_strcasecmp
equal                           = $07DC ; L asm_strcasecmp
different                       = $07E0 ; L asm_strcasecmp
asm_strcmp                      = $07E3 ; G asm_strcmp
loop                            = $07E3 ; L asm_strcmp
equal                           = $07EC ; L asm_strcmp
different                       = $07F0 ; L asm_strcmp
asm_strlcpy                     = $07F4 ; G asm_strlcpy
cpyloop                         = $07FA ; L asm_strlcpy
IOCTL_OTERM_FONT                = $0802 ; G page0
szexceeded0                     = $0802 ; L asm_strlcpy
szexceeded1                     = $0805 ; L asm_strlcpy
done                            = $080D ; L asm_strlcpy
_strlen_fastcall                = $0812 ; G strlen_fastcall
asm_strlen                      = $0812 ; G asm_strlen
asm_strncasecmp                 = $081D ; G asm_strncasecmp
loop                            = $081D ; L asm_strncasecmp
equal                           = $0836 ; L asm_strncasecmp
different                       = $0839 ; L asm_strncasecmp
asm_strncmp                     = $083D ; G asm_strncmp
loop                            = $0841 ; L asm_strncmp
equal                           = $084E ; L asm_strncmp
different                       = $0852 ; L asm_strncmp
asm_strnlen                     = $0856 ; G asm_strnlen
notend                          = $0863 ; L asm_strnlen
__code_string_tail              = $0866 ; G 
__code_temp_sp1_head            = $0866 ; G 
__code_temp_sp1_tail            = $0866 ; G 
__code_threads_head             = $0866 ; G 
__code_threads_mutex_head       = $0866 ; G 
__code_threads_tail             = $0866 ; G 
asm_mtx_init                    = $0866 ; G asm_mtx_init
unknown_type                    = $0880 ; L asm_mtx_init
__code_threads_mutex_tail       = $0885 ; G 
__code_z80_head                 = $0885 ; G 
asm_z80_pop_registers           = $0885 ; G asm_z80_pop_registers
asm_z80_push_registers          = $0896 ; G asm_z80_push_registers
_Error_Set__fast                = $08A6 ; G zcc77D43
__code_compiler_head            = $08A6 ; G 
__code_lib_head                 = $08A6 ; G 
__code_lib_tail                 = $08A6 ; G 
__code_z80_tail                 = $08A6 ; G 
_Error_Get                      = $08B2 ; G zcc77D43
_Heap_Construct__fast           = $08BB ; G zcc77D44
_Heap_Alloc                     = $08C1 ; G zcc77D44
l_Heap_Alloc_00109              = $08D7 ; L zcc77D44
l_Heap_Alloc_00102              = $08DC ; L zcc77D44
l_Heap_Alloc_00103              = $08E5 ; L zcc77D44
_Heap_Free                      = $08E8 ; G zcc77D44
l_Heap_Free_00103               = $0907 ; L zcc77D44
_Thread_Construct               = $090A ; G zcc77D45
_Thread_GetCurrent              = $091E ; G zcc77D45
_Thread_GetId                   = $0922 ; G zcc77D45
_Thread_GetHeap__fast           = $0924 ; G zcc77D45
_Thread_Alloc__fast             = $092C ; G zcc77D45
l_Thread_Alloc__fast_00102      = $0937 ; L zcc77D45
l_Thread_Alloc__fast_00103      = $0941 ; L zcc77D45
_Thread_Free__fast              = $0942 ; G zcc77D45
_Async_IsComplete__fast         = $0950 ; G zcc77D46
l_Async_IsComplete__fast_00103  = $095C ; L zcc77D46
l_Async_IsComplete__fast_00104  = $095F ; L zcc77D46
_asyncState_None                = $0960 ; G zcc77D46
_asyncState_Pending             = $0961 ; G zcc77D46
_asyncState_Completed           = $0962 ; G zcc77D46
_asyncState_CompletedSync       = $0963 ; G zcc77D46
_AsyncResult_size               = $0964 ; G zcc77D46
_Async_Wait__fast               = $0965 ; G zcc77D46
_String_Copy                    = $0968 ; G zcc77D47
l_String_Copy_00102             = $0983 ; L zcc77D47
l_String_Copy_00104             = $0996 ; L zcc77D47
l_String_Copy_00106             = $09A9 ; L zcc77D47
l_String_Copy_00107             = $09C1 ; L zcc77D47
_String_Compare                 = $09C4 ; G zcc77D47
l_String_Compare_00102          = $09DF ; L zcc77D47
l_String_Compare_00104          = $09F2 ; L zcc77D47
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G page0
l_String_Compare_00106          = $0A0D ; L zcc77D47
l_String_Compare_00107          = $0A25 ; L zcc77D47
_String_CompareExact            = $0A28 ; G zcc77D47
l_String_CompareExact_00102     = $0A43 ; L zcc77D47
l_String_CompareExact_00104     = $0A56 ; L zcc77D47
l_String_CompareExact_00106     = $0A71 ; L zcc77D47
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G page0
l_String_CompareExact_00107     = $0A89 ; L zcc77D47
_String_GetLength               = $0A8C ; G zcc77D47
l_String_GetLength_00102        = $0AA7 ; L zcc77D47
l_String_GetLength_00104        = $0ABA ; L zcc77D47
l_String_GetLength_00105        = $0ACB ; L zcc77D47
_System_DebugConsole_Log__fast  = $0ACE ; G zcc77D48
l_System_DebugConsole_Log__fast_00103 = $0AD4 ; L zcc77D48
l_System_DebugConsole_Log__fast_00106 = $0AE0 ; L zcc77D48
_System_DebugConsole_LogAssertFailed = $0AE1 ; G zcc77D48
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G page0
___str_0                        = $0B22 ; L zcc77D48
___str_1                        = $0B3D ; L zcc77D48
_StreamProvider_Construct       = $0B48 ; G zcc77D49
l_StreamProvider_Construct_00103 = $0B5E ; L zcc77D49
l_StreamProvider_Construct_00104 = $0B60 ; L zcc77D49
_Stream_Construct__fast         = $0B63 ; G zcc77D49
_Stream_Open                    = $0B74 ; G zcc77D49
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G page0
l_Stream_Open_00102             = $0BA3 ; L zcc77D49
l_Stream_Open_00104             = $0BEA ; L zcc77D49
l_Stream_Open_00105             = $0BEC ; L zcc77D49
_Stream_Close__fast             = $0BEF ; G zcc77D49
l_Stream_Close__fast_00102      = $0BFA ; L zcc77D49
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G page0
l_Stream_Close__fast_00104      = $0C0A ; L zcc77D49
l_Stream_Close__fast_00106      = $0C1E ; L zcc77D49
l_Stream_Close__fast_00107      = $0C26 ; L zcc77D49
_Stream_Read                    = $0C27 ; G zcc77D49
l_Stream_Read_00102             = $0C43 ; L zcc77D49
l_Stream_Read_00104             = $0C61 ; L zcc77D49
l_Stream_Read_00106             = $0C78 ; L zcc77D49
l_Stream_Read_00108             = $0C9B ; L zcc77D49
l_Stream_Read_00109             = $0CB2 ; L zcc77D49
_Stream_Write                   = $0CB7 ; G zcc77D49
l_Stream_Write_00102            = $0CCE ; L zcc77D49
l_Stream_Write_00104            = $0CE1 ; L zcc77D49
l_Stream_Write_00106            = $0CFF ; L zcc77D49
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G page0
l_Stream_Write_00108            = $0D16 ; L zcc77D49
l_Stream_Write_00110            = $0D39 ; L zcc77D49
l_Stream_Write_00111            = $0D50 ; L zcc77D49
_Stream_HasFlags                = $0D55 ; G zcc77D49
l_Stream_HasFlags_00103         = $0D6F ; L zcc77D49
l_Stream_HasFlags_00104         = $0D72 ; L zcc77D49
_StreamReader_TryReadByte       = $0D75 ; G zcc77D410
l_StreamReader_TryReadByte_00103 = $0D9E ; L zcc77D410
l_StreamReader_TryReadByte_00104 = $0DA1 ; L zcc77D410
_GetByte__fast                  = $0DA4 ; G zcc77D410
l_GetByte__fast_00103           = $0DB3 ; L zcc77D410
l_GetByte__fast_00105           = $0DDE ; L zcc77D410
_StreamReader_ReadLine          = $0DE5 ; G zcc77D410
l_StreamReader_ReadLine_00102   = $0DF8 ; L zcc77D410
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G page0
l_StreamReader_ReadLine_00103   = $0E08 ; L zcc77D410
l_StreamReader_ReadLine_00117   = $0E14 ; L zcc77D410
l_StreamReader_ReadLine_00107   = $0E17 ; L zcc77D410
l_StreamReader_ReadLine_00109   = $0E51 ; L zcc77D410
_StreamWriter_Write             = $0E57 ; G zcc77D411
l_StreamWriter_Write_00102      = $0E74 ; L zcc77D411
l_StreamWriter_Write_00104      = $0E88 ; L zcc77D411
l_StreamWriter_Write_00106      = $0E9B ; L zcc77D411
l_StreamWriter_Write_00111      = $0EC1 ; L zcc77D411
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G page0
l_StreamWriter_Write_00110      = $0F05 ; L zcc77D411
l_StreamWriter_Write_00113      = $0F0A ; L zcc77D411
l_StreamWriter_Write_00114      = $0F0C ; L zcc77D411
_StreamWriter_WriteLine         = $0F11 ; G zcc77D411
_ConsoleStreamProvider_CanProvide = $0F4F ; G zcc77D412
l_ConsoleStreamProvider_CanProvide_00102 = $0F77 ; L zcc77D412
l_ConsoleStreamProvider_CanProvide_00103 = $0F7A ; L zcc77D412
_ConsoleStreamProvider_size     = $0F7D ; G zcc77D412
_ConsoleStream_size             = $0F7E ; L zcc77D412
_ConsoleStreamProvider_TryOpenStream = $0F7F ; G zcc77D412
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G page0
l_ConsoleStreamProvider_TryOpenStream_00102 = $0F94 ; L zcc77D412
l_ConsoleStreamProvider_TryOpenStream_00103 = $0FA9 ; L zcc77D412
_ConsoleStreamProvider_BeginReadStream = $0FAC ; G zcc77D412
l_ConsoleStreamProvider_BeginReadStream_00102 = $0FD1 ; L zcc77D412
l_ConsoleStreamProvider_BeginReadStream_00104 = $0FE5 ; L zcc77D412
l_ConsoleStreamProvider_BeginReadStream_00122 = $0FF9 ; L zcc77D412
l_ConsoleStreamProvider_BeginReadStream_00112 = $0FFB ; L zcc77D412
__code_compiler_size            = $1027 ; G 
l_ConsoleStreamProvider_BeginReadStream_00109 = $1048 ; L zcc77D412
l_ConsoleStreamProvider_BeginReadStream_00114 = $1074 ; L zcc77D412
_ConsoleStreamProvider_EndReadStream = $1079 ; G zcc77D412
l_ConsoleStreamProvider_EndReadStream_00102 = $1094 ; L zcc77D412
l_ConsoleStreamProvider_EndReadStream_00104 = $10A7 ; L zcc77D412
l_ConsoleStreamProvider_EndReadStream_00121 = $10B6 ; L zcc77D412
l_ConsoleStreamProvider_EndReadStream_00106 = $10C1 ; L zcc77D412
l_ConsoleStreamProvider_EndReadStream_00107 = $10C4 ; L zcc77D412
_ConsoleStreamProvider_BeginWriteStream = $10C7 ; G zcc77D412
l_ConsoleStreamProvider_BeginWriteStream_00102 = $10E3 ; L zcc77D412
l_ConsoleStreamProvider_BeginWriteStream_00104 = $10F6 ; L zcc77D412
l_ConsoleStreamProvider_BeginWriteStream_00117 = $1109 ; L zcc77D412
l_ConsoleStreamProvider_BeginWriteStream_00109 = $110C ; L zcc77D412
l_ConsoleStreamProvider_BeginWriteStream_00107 = $1127 ; L zcc77D412
l_ConsoleStreamProvider_BeginWriteStream_00111 = $115A ; L zcc77D412
_ConsoleStreamProvider_EndWriteStream = $115D ; G zcc77D412
l_ConsoleStreamProvider_EndWriteStream_00102 = $1178 ; L zcc77D412
l_ConsoleStreamProvider_EndWriteStream_00104 = $118B ; L zcc77D412
l_ConsoleStreamProvider_EndWriteStream_00121 = $119A ; L zcc77D412
l_ConsoleStreamProvider_EndWriteStream_00106 = $11A5 ; L zcc77D412
l_ConsoleStreamProvider_EndWriteStream_00107 = $11A8 ; L zcc77D412
_ConsoleStreamProvider_Construct__fast = $11AB ; G zcc77D412
l_ConsoleStreamProvider_Construct__fast_00102 = $11BC ; L zcc77D412
l_ConsoleStreamProvider_Construct__fast_00103 = $120E ; L zcc77D412
_KeyBoard_OnKey__isr            = $120F ; G zcc77D412
l_KeyBoard_OnKey__isr_00104     = $1223 ; L zcc77D412
l_KeyBoard_OnKey__isr_00106     = $122F ; L zcc77D412
l_KeyBoard_OnKey__isr_00108     = $123B ; L zcc77D412
l_KeyBoard_OnKey__isr_00110     = $1247 ; L zcc77D412
l_KeyBoard_OnKey__isr_00113     = $1252 ; L zcc77D412
_RingBuffer_Construct           = $1253 ; G zcc77D413
l_RingBuffer_Construct_00102    = $126C ; L zcc77D413
l_RingBuffer_Construct_00103    = $1275 ; L zcc77D413
_RingBuffer_size                = $1278 ; G zcc77D413
_RingBuffer_MaxCapacity         = $127A ; G zcc77D413
_RingBuffer_GetCount            = $127C ; G zcc77D413
_RingBuffer_IsFull              = $1296 ; G zcc77D413
l_RingBuffer_IsFull_00103       = $12BC ; L zcc77D413
l_RingBuffer_IsFull_00104       = $12BF ; L zcc77D413
_RingBuffer_IsEmpty             = $12C2 ; G zcc77D413
l_RingBuffer_IsEmpty_00103      = $12DE ; L zcc77D413
l_RingBuffer_IsEmpty_00104      = $12E1 ; L zcc77D413
_RingBuffer_Read                = $12E4 ; G zcc77D413
_RingBuffer_Peek                = $130A ; G zcc77D413
_RingBuffer_Write               = $1325 ; G zcc77D413
_RingBuffer_Clear               = $1348 ; G zcc77D413
_StringBuilder_Construct        = $135E ; G zcc77D414
l_StringBuilder_Construct_00102 = $1379 ; L zcc77D414
l_StringBuilder_Construct_00104 = $1391 ; L zcc77D414
l_StringBuilder_Construct_00105 = $13B8 ; L zcc77D414
_StringBuilder_AppendString     = $13BD ; G zcc77D414
l_StringBuilder_AppendString_00102 = $13D3 ; L zcc77D414
l_StringBuilder_AppendString_00104 = $13E0 ; L zcc77D414
l_StringBuilder_AppendString_00106 = $1410 ; L zcc77D414
l_StringBuilder_AppendString_00107 = $1442 ; L zcc77D414
_StringBuilder_AppendChar       = $1447 ; G zcc77D414
l_StringBuilder_AppendChar_00102 = $145D ; L zcc77D414
l_StringBuilder_AppendChar_00104 = $1483 ; L zcc77D414
l_StringBuilder_AppendChar_00105 = $14B0 ; L zcc77D414
_StringBuilder_AppendUint8      = $14B5 ; G zcc77D414
l_StringBuilder_AppendUint8_00102 = $14CC ; L zcc77D414
l_StringBuilder_AppendUint8_00104 = $14F2 ; L zcc77D414
l_StringBuilder_AppendUint8_00105 = $1546 ; L zcc77D414
_StringBuilder_AppendUint16     = $154B ; G zcc77D414
l_StringBuilder_AppendUint16_00102 = $1561 ; L zcc77D414
l_StringBuilder_AppendUint16_00104 = $1587 ; L zcc77D414
l_StringBuilder_AppendUint16_00105 = $15D1 ; L zcc77D414
_OpenConsole                    = $15D6 ; G zcc77D415
_ReadLineInto                   = $15E7 ; G zcc77D415
_Monitor_Start                  = $1615 ; G zcc77D415
l_Monitor_Start_00106           = $1630 ; L zcc77D415
l_Monitor_Start_00108           = $1684 ; L zcc77D415
___str_0                        = $1687 ; L zcc77D415
_PrintLogo                      = $168C ; G zcc77D416
_MaxCommandLength               = $16AE ; L zcc77D416
___str_0                        = $16AF ; L zcc77D416
_ExecuteDump                    = $16C1 ; G zcc77D416
_ExecuteHelp                    = $16CC ; G zcc77D416
___str_1                        = $171C ; L zcc77D416
___str_2                        = $1735 ; L zcc77D416
___str_3                        = $175D ; L zcc77D416
_ExecuteReg                     = $1788 ; G zcc77D416
_ExecuteCommand                 = $1793 ; G zcc77D416
l_ExecuteCommand_00112          = $17AD ; L zcc77D416
l_ExecuteCommand_00101          = $17B5 ; L zcc77D416
l_ExecuteCommand_00102          = $17CA ; L zcc77D416
l_ExecuteCommand_00103          = $17D7 ; L zcc77D416
l_ExecuteCommand_00104          = $17EC ; L zcc77D416
l_ExecuteCommand_00105          = $17F0 ; L zcc77D416
l_ExecuteCommand_00106          = $17F2 ; L zcc77D416
_Dispatch                       = $17F5 ; G zcc77D416
l_Dispatch_00103                = $180A ; L zcc77D416
l_Dispatch_00102                = $1874 ; L zcc77D416
l_Dispatch_00105                = $187F ; L zcc77D416
l_Dispatch_00106                = $1898 ; L zcc77D416
___str_4                        = $189D ; L zcc77D416
_init                           = $18B0 ; G zcc77D417
_main                           = $18B6 ; G zcc77D417
__code_compiler_tail            = $18CD ; G 
__code_user_head                = $18CD ; G 
__code_user_tail                = $18CD ; G 
__rodata_clib_head              = $18CD ; G 
__rodata_clib_tail              = $18CD ; G 
__rodata_driver_head            = $18CD ; G 
__rodata_driver_tail            = $18CD ; G 
__rodata_error_strings_head     = $18CD ; G 
__rodata_font_head              = $18CD ; G 
__rodata_font_tail              = $18CD ; G 
__rodata_error_string_end_head  = $18FB ; G 
__rodata_error_strings_tail     = $18FB ; G 
_NewLineChar                    = $18FC ; G zcc77D42
__rodata_compiler_head          = $18FC ; G 
__rodata_error_string_end_tail  = $18FC ; G 
__rodata_fcntl_head             = $18FC ; G 
__rodata_fcntl_tail             = $18FC ; G 
__rodata_font_4x8_head          = $18FC ; G 
__rodata_font_4x8_tail          = $18FC ; G 
__rodata_font_8x8_head          = $18FC ; G 
__rodata_font_8x8_tail          = $18FC ; G 
__rodata_font_fzx_head          = $18FC ; G 
__rodata_font_fzx_tail          = $18FC ; G 
__rodata_input_head             = $18FC ; G 
__rodata_input_tail             = $18FC ; G 
__rodata_lib_head               = $18FC ; G 
__rodata_lib_tail               = $18FC ; G 
__rodata_sound_bit_head         = $18FC ; G 
__rodata_sound_bit_tail         = $18FC ; G 
__rodata_stdio_head             = $18FC ; G 
__rodata_stdio_tail             = $18FC ; G 
__rodata_stdlib_head            = $18FC ; G 
__rodata_stdlib_tail            = $18FC ; G 
_CarriageReturnChar             = $18FD ; G zcc77D42
_SmallArray8_size               = $18FE ; G zcc77D42
_SmallArray8_MaxCapacity        = $18FF ; G zcc77D42
_Array8_size                    = $1900 ; G zcc77D42
_Array8_MaxCapacity             = $1901 ; G zcc77D42
_Collection8_size               = $1903 ; G zcc77D42
_Collection8_MaxCapacity        = $1904 ; G zcc77D42
___str_0                        = $1906 ; L zcc77D42
___str_0                        = $1909 ; L zcc77D412
___str_5                        = $190D ; L zcc77D416
___str_6                        = $1912 ; L zcc77D416
___str_7                        = $1917 ; L zcc77D416
___str_8                        = $191B ; L zcc77D416
__CODE_END_head                 = $1920 ; G 
__CODE_END_tail                 = $1920 ; G 
__DATA_head                     = $1920 ; G 
__rodata_compiler_tail          = $1920 ; G 
__rodata_user_head              = $1920 ; G 
__rodata_user_tail              = $1920 ; G 
__DATA_tail                     = $1921 ; G 
__data_alloc_balloc_head        = $1921 ; G 
__data_alloc_balloc_tail        = $1921 ; G 
__data_alloc_malloc_head        = $1921 ; G 
__data_clib_head                = $1921 ; G 
__data_clib_tail                = $1921 ; G 
__data_driver_head              = $1921 ; G 
__data_driver_tail              = $1921 ; G 
__data_font_head                = $1921 ; G 
__data_font_tail                = $1921 ; G 
__malloc_heap                   = $1921 ; G page0
__smc_clib_head                 = $1921 ; G 
__smc_clib_tail                 = $1921 ; G 
__smc_compiler_head             = $1921 ; G 
__smc_compiler_tail             = $1921 ; G 
__smc_driver_head               = $1921 ; G 
__smc_driver_tail               = $1921 ; G 
__smc_fcntl_head                = $1921 ; G 
__smc_fcntl_tail                = $1921 ; G 
__smc_font_head                 = $1921 ; G 
__smc_font_tail                 = $1921 ; G 
__smc_l_head                    = $1921 ; G 
__smc_l_tail                    = $1921 ; G 
__smc_lib_head                  = $1921 ; G 
__smc_lib_tail                  = $1921 ; G 
__smc_sound_bit_head            = $1921 ; G 
__smc_sound_bit_tail            = $1921 ; G 
__smc_user_head                 = $1921 ; G 
__smc_user_tail                 = $1921 ; G 
__data_alloc_malloc_tail        = $1923 ; G 
__data_fcntl_head               = $1923 ; G 
__stdio_heap                    = $1923 ; G page0
__data_fcntl_stdio_heap_head_head = $1925 ; G 
__data_fcntl_tail               = $1925 ; G 
__stdio_block                   = $1925 ; L page0
__data_fcntl_stdio_heap_body_head = $192B ; G 
__data_fcntl_stdio_heap_head_tail = $192B ; G 
__i_fcntl_heap_0                = $192B ; L page0
__i_fcntl_fdstruct_0            = $1931 ; L page0
__i_fcntl_heap_1                = $1942 ; L page0
__i_fcntl_fdstruct_1            = $1948 ; L page0
__i_fcntl_fdstruct_2            = $1948 ; L page0
__i_fcntl_heap_2                = $1959 ; L page0
__data_fcntl_stdio_heap_body_tail = $19A3 ; G 
__data_fcntl_stdio_heap_tail_head = $19A3 ; G 
__i_fcntl_heap_3                = $19A3 ; L page0
__data_fcntl_fdtable_body_head  = $19A5 ; G 
__data_fcntl_stdio_heap_tail_tail = $19A5 ; G 
__fcntl_fdtbl                   = $19A5 ; G page0
__data_fcntl_fdtable_body_tail  = $19AB ; G 
__data_sound_bit_head           = $19AB ; G 
__data_sound_bit_tail           = $19AB ; G 
__data_stdio_head               = $19AB ; G 
_stdin                          = $19AB ; G page0
__i_stdio_file_0                = $19AD ; L page0
_stdout                         = $19BC ; G page0
__i_stdio_file_1                = $19BE ; L page0
_stderr                         = $19CD ; G page0
__i_stdio_file_2                = $19CF ; L page0
__stdio_open_file_list          = $19DE ; G page0
__stdio_closed_file_list        = $19E0 ; G page0
__data_stdio_tail               = $19E4 ; G 
__data_stdlib_head              = $19E4 ; G 
__data_stdlib_tail              = $19E4 ; G 
__data_threads_head             = $19E4 ; G 
__thrd_id                       = $19E4 ; G page0
_EndOfLine                      = $19E5 ; G zcc77D42
__data_compiler_head            = $19E5 ; G 
__data_lib_head                 = $19E5 ; G 
__data_lib_tail                 = $19E5 ; G 
__data_threads_tail             = $19E5 ; G 
_ConsoleProtocol                = $19E7 ; G zcc77D412
_Commands                       = $19E9 ; L zcc77D416
__BSS_head                      = $19F3 ; G 
__DATA_END_head                 = $19F3 ; G 
__DATA_END_tail                 = $19F3 ; G 
__data_compiler_tail            = $19F3 ; G 
__data_user_head                = $19F3 ; G 
__data_user_tail                = $19F3 ; G 
__BSS_UNINITIALIZED_head        = $19F4 ; G 
__BSS_UNINITIALIZED_tail        = $19F4 ; G 
__BSS_tail                      = $19F4 ; G 
__bss_alloc_balloc_head         = $19F4 ; G 
__bss_alloc_balloc_tail         = $19F4 ; G 
__bss_alloc_malloc_head         = $19F4 ; G 
__bss_alloc_malloc_tail         = $19F4 ; G 
__bss_arch_head                 = $19F4 ; G 
__bss_arch_tail                 = $19F4 ; G 
__bss_clib_head                 = $19F4 ; G 
__bss_clib_tail                 = $19F4 ; G 
__bss_compress_aplib_head       = $19F4 ; G 
__bss_compress_aplib_tail       = $19F4 ; G 
__bss_driver_head               = $19F4 ; G 
__bss_driver_tail               = $19F4 ; G 
__bss_error_head                = $19F4 ; G 
__bss_font_head                 = $19F4 ; G 
__bss_font_tail                 = $19F4 ; G 
_errno                          = $19F4 ; G _errno
__bss_error_tail                = $19F6 ; G 
__bss_fcntl_head                = $19F6 ; G 
__bss_fcntl_tail                = $19F6 ; G 
__bss_input_head                = $19F6 ; G 
__bss_input_tail                = $19F6 ; G 
__bss_sound_bit_head            = $19F6 ; G 
__bss_sound_bit_tail            = $19F6 ; G 
__bss_stdio_head                = $19F6 ; G 
__bss_stdio_tail                = $19F6 ; G 
__bss_stdlib_head               = $19F6 ; G 
__exit_stack                    = $19F6 ; G page0
__quickexit_stack               = $19FB ; G page0
__bss_compiler_head             = $19FC ; G 
__bss_lib_head                  = $19FC ; G 
__bss_lib_tail                  = $19FC ; G 
__bss_stdlib_tail               = $19FC ; G 
__bss_string_head               = $19FC ; G 
__bss_string_tail               = $19FC ; G 
_crt_heap                       = $19FC ; G zcc77D44
_CurrentThread                  = $19FD ; L zcc77D45
_ConsoleStreamProvider          = $1A02 ; L zcc77D49
_DebugConsole                   = $1A04 ; L zcc77D412
_consoleAsyncResult             = $1A06 ; L zcc77D412
_Console                        = $1A09 ; L zcc77D415
__BSS_END_head                  = $1A0B ; G 
__BSS_END_tail                  = $1A0B ; G 
__IGNORE_head                   = $1A0B ; G 
__IGNORE_tail                   = $1A0B ; G 
__bss_compiler_tail             = $1A0B ; G 
__bss_user_head                 = $1A0B ; G 
__bss_user_tail                 = $1A0B ; G 
__size                          = $1A0B ; G 
__tail                          = $1A0B ; G 
IOCTL_ITERM_CAPS                = $C009 ; G page0
IOCTL_ITERM_COOK                = $C011 ; G page0
IOCTL_OTERM_CRLF                = $C012 ; G page0
IOCTL_OCHAR_CRLF                = $C014 ; G page0
IOCTL_ITERM_LINE                = $C021 ; G page0
IOCTL_OTERM_COOK                = $C022 ; G page0
IOCTL_ITERM_PASS                = $C041 ; G page0
IOCTL_OTERM_PAUSE               = $C042 ; G page0
IOCTL_ITERM_ECHO                = $C081 ; G page0
IOCTL_OTERM_PAGE                = $C082 ; G page0
IOCTL_ITERM_CRLF                = $C101 ; G page0
IOCTL_OTERM_BELL                = $C102 ; G page0
IOCTL_ICHAR_CRLF                = $C103 ; G page0
IOCTL_ITERM_CURS                = $C201 ; G page0
IOCTL_OTERM_SIGNAL              = $C202 ; G page0
IOCTL_OTERM_CLEAR               = $E002 ; G page0
DEF__crt_on_exit                = $10001 ; L page0
