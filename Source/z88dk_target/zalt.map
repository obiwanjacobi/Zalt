TAR__clib_malloc_heap_size      = $FFFFFFFF ; L page0
__clib_malloc_heap_size         = $FFFFFFFF ; L page0
CLIB_OPT_STDIO                  = $0000 ; L page0
DEF__crt_enable_eidi            = $0000 ; L page0
DEF__crt_include_preamble       = $0000 ; L page0
IOCTL_RESET                     = $0000 ; G page0
STDIO_SEEK_SET                  = $0000 ; G page0
TAR__clib_balloc_table_size     = $0000 ; L page0
TAR__clib_fopen_max             = $0000 ; L page0
TAR__clib_open_max              = $0000 ; L page0
TAR__clib_quickexit_stack_size  = $0000 ; L page0
TAR__crt_enable_commandline     = $0000 ; L page0
TAR__crt_enable_nmi             = $0000 ; L page0
TAR__crt_enable_restart         = $0000 ; L page0
TAR__crt_enable_rst             = $0000 ; L page0
TAR__crt_initialize_bss         = $0000 ; L page0
TAR__crt_model                  = $0000 ; L page0
TAR__crt_org_bss                = $0000 ; L page0
TAR__crt_org_code               = $0000 ; L page0
TAR__crt_org_data               = $0000 ; L page0
TAR__register_sp                = $0000 ; L page0
__BSS_END_size                  = $0000 ; G 
__BSS_UNINITIALIZED_size        = $0000 ; G 
__CLIB_OPT_FASTCOPY             = $0000 ; L asm_memset
__CLIB_OPT_IMATH                = $0000 ; L l_divu_16_16x8
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm_vioctl
__CLIB_OPT_MULTITHREAD          = $0000 ; L free_fastcall
__CLIB_OPT_MULTITHREAD          = $0000 ; L malloc_fastcall
__CLIB_OPT_NUM2TXT              = $0000 ; L asm_utoa
__CODE_END_size                 = $0000 ; G 
__CODE_head                     = $0000 ; G 
__CRTDEF                        = $0000 ; L page0
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G page0
__IGNORE_size                   = $0000 ; G 
__MMAP                          = $0000 ; L page0
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_stdio_size                = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L page0
__clib_fopen_max                = $0000 ; L page0
__clib_open_max                 = $0000 ; L page0
__clib_quickexit_stack_size     = $0000 ; L page0
__code_adt_b_array_size         = $0000 ; G 
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_forward_list_size  = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_arch_size                = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_common_size          = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_terminal_input_size = $0000 ; G 
__code_driver_terminal_output_size = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_fp_math48_size           = $0000 ; G 
__code_input_size               = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sccz80_size            = $0000 ; G 
__code_l_sdcc_size              = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_sound_bit_size           = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_user_size                = $0000 ; G 
__code_zalt_debug_size          = $0000 ; G 
__code_zalt_lib_size            = $0000 ; G 
__crt_enable_restart            = $0000 ; L page0
__crt_initialize_bss            = $0000 ; L page0
__crt_model                     = $0000 ; L page0
__crt_org_bss                   = $0000 ; L page0
__crt_org_code                  = $0000 ; L page0
__crt_org_data                  = $0000 ; L page0
__data_alloc_balloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_sound_bit_size           = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G page0
__rodata_clib_size              = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_4x8_size          = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_input_size             = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_stdlib_size            = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
startup                         = $0000 ; L page0
thrd_success                    = $0000 ; G page0
DEFINED_CLIB_OPT_STDIO          = $0001 ; L page0
DEFINED_Z88DK_USES_SDCC         = $0001 ; L page0
STDIO_MSG_PUTC                  = $0001 ; G page0
STDIO_SEEK_CUR                  = $0001 ; G page0
TAR__crt_enable_close           = $0001 ; L page0
Z88DK_USES_SDCC                 = $0001 ; L page0
_CLIB_CFG_ASM_                  = $0001 ; L asm_memset
_CLIB_CFG_ASM_                  = $0001 ; L asm_utoa
_CLIB_CFG_ASM_                  = $0001 ; L asm_vioctl
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_getc
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_read
_CLIB_CFG_ASM_                  = $0001 ; L character_00_output_ochar_putc_bin
_CLIB_CFG_ASM_                  = $0001 ; L console_01_input_terminal_fdriver
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_edom_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_einval_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_einval_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enomem_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enomem_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_zc
_CLIB_CFG_ASM_                  = $0001 ; L free_fastcall
_CLIB_CFG_ASM_                  = $0001 ; L l_divu_16_16x8
_CLIB_CFG_ASM_                  = $0001 ; L malloc_fastcall
__BSS_size                      = $0001 ; G 
__CLIB_OPT_ERROR                = $0001 ; L error_ebdfd_mc
__CLIB_OPT_ERROR                = $0001 ; L error_ebdfd_zc
__CLIB_OPT_ERROR                = $0001 ; L error_edom_mc
__CLIB_OPT_ERROR                = $0001 ; L error_einval_mc
__CLIB_OPT_ERROR                = $0001 ; L error_einval_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enolck_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enolck_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enomem_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enomem_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enotsup_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enotsup_zc
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G page0
__SDCC                          = $0001 ; L __stdio_nextarg_bc
__SDCC                          = $0001 ; L asm_memset
__SDCC                          = $0001 ; L asm_utoa
__SDCC                          = $0001 ; L asm_vioctl
__SDCC                          = $0001 ; L character_00_input_stdio_msg_getc
__SDCC                          = $0001 ; L character_00_input_stdio_msg_read
__SDCC                          = $0001 ; L character_00_output_ochar_putc_bin
__SDCC                          = $0001 ; L console_01_input_terminal_fdriver
__SDCC                          = $0001 ; L error_ebdfd_mc
__SDCC                          = $0001 ; L error_ebdfd_zc
__SDCC                          = $0001 ; L error_edom_mc
__SDCC                          = $0001 ; L error_einval_mc
__SDCC                          = $0001 ; L error_einval_zc
__SDCC                          = $0001 ; L error_enolck_mc
__SDCC                          = $0001 ; L error_enolck_zc
__SDCC                          = $0001 ; L error_enomem_mc
__SDCC                          = $0001 ; L error_enomem_zc
__SDCC                          = $0001 ; L error_enotsup_mc
__SDCC                          = $0001 ; L error_enotsup_zc
__SDCC                          = $0001 ; L free_fastcall
__SDCC                          = $0001 ; L l_divu_16_16x8
__SDCC                          = $0001 ; L malloc_fastcall
__SDCC_IY                       = $0001 ; L __stdio_nextarg_bc
__SDCC_IY                       = $0001 ; L asm_memset
__SDCC_IY                       = $0001 ; L asm_utoa
__SDCC_IY                       = $0001 ; L asm_vioctl
__SDCC_IY                       = $0001 ; L character_00_input_stdio_msg_getc
__SDCC_IY                       = $0001 ; L character_00_input_stdio_msg_read
__SDCC_IY                       = $0001 ; L character_00_output_ochar_putc_bin
__SDCC_IY                       = $0001 ; L console_01_input_terminal_fdriver
__SDCC_IY                       = $0001 ; L error_ebdfd_mc
__SDCC_IY                       = $0001 ; L error_ebdfd_zc
__SDCC_IY                       = $0001 ; L error_edom_mc
__SDCC_IY                       = $0001 ; L error_einval_mc
__SDCC_IY                       = $0001 ; L error_einval_zc
__SDCC_IY                       = $0001 ; L error_enolck_mc
__SDCC_IY                       = $0001 ; L error_enolck_zc
__SDCC_IY                       = $0001 ; L error_enomem_mc
__SDCC_IY                       = $0001 ; L error_enomem_zc
__SDCC_IY                       = $0001 ; L error_enotsup_mc
__SDCC_IY                       = $0001 ; L error_enotsup_zc
__SDCC_IY                       = $0001 ; L free_fastcall
__SDCC_IY                       = $0001 ; L l_divu_16_16x8
__SDCC_IY                       = $0001 ; L malloc_fastcall
__SDCC_IY                       = $0001 ; L page0
__crt_enable_close              = $0001 ; L page0
__data_threads_size             = $0001 ; G 
__rodata_error_string_end_size  = $0001 ; G 
isr_table_index                 = $0001 ; L page0
mtx_plain                       = $0001 ; G page0
thrd_error                      = $0001 ; G page0
STDIO_MSG_WRIT                  = $0002 ; G page0
STDIO_SEEK_END                  = $0002 ; G page0
TAR__clib_exit_stack_size       = $0002 ; L page0
__EBADF                         = $0002 ; G page0
__bss_error_size                = $0002 ; G 
__clib_exit_stack_size          = $0002 ; L page0
__data_alloc_malloc_size        = $0002 ; G 
__data_fcntl_size               = $0002 ; G 
__data_fcntl_stdio_heap_tail_size = $0002 ; G 
__exit_stack_size               = $0002 ; G page0
mtx_recursive                   = $0002 ; G page0
thrd_nomem                      = $0002 ; G page0
STDIO_MSG_GETC                  = $0003 ; G page0
__EBDFD                         = $0003 ; G page0
__code_crt_return_size          = $0003 ; G 
__fcntl_fdtbl_size              = $0003 ; G page0
STDIO_MSG_EATC                  = $0004 ; G page0
__EDOM                          = $0004 ; G page0
mtx_timed                       = $0004 ; G page0
thrd_busy                       = $0004 ; G page0
STDIO_MSG_READ                  = $0005 ; G page0
__EFBIG                         = $0005 ; G page0
__code_stdio_size               = $0005 ; G 
STDIO_MSG_SEEK                  = $0006 ; G page0
__EINVAL                        = $0006 ; G page0
__bss_stdlib_size               = $0006 ; G 
__data_fcntl_fdtable_body_size  = $0006 ; G 
__data_fcntl_stdio_heap_head_size = $0006 ; G 
DEF__crt_enable_streams         = $0007 ; L page0
STDIO_MSG_ICTL                  = $0007 ; G page0
__EMFILE                        = $0007 ; G page0
__code_crt_main_size            = $0007 ; G 
STDIO_MSG_FLSH                  = $0008 ; G page0
__ENFILE                        = $0008 ; G page0
thrd_timedout                   = $0008 ; G page0
STDIO_MSG_CLOS                  = $0009 ; G page0
__ENOLCK                        = $0009 ; G page0
__code_ctype_size               = $0009 ; G 
CHAR_LF                         = $000A ; L character_00_input_stdio_msg_read
CHAR_LF                         = $000A ; L character_00_output_ochar_putc_bin
__ENOMEM                        = $000A ; G page0
__ENOTSUP                       = $000B ; G page0
__EOVERFLOW                     = $000C ; G page0
CHAR_CR                         = $000D ; L character_00_input_stdio_msg_getc
CHAR_CR                         = $000D ; L character_00_output_ochar_putc_bin
__ERANGE                        = $000D ; G page0
__ESTAT                         = $000E ; G page0
ICHAR_MSG_GETC                  = $000F ; G page0
ITERM_MSG_GETC                  = $000F ; G page0
__EAGAIN                        = $000F ; G page0
__EWOULDBLOCK                   = $000F ; G page0
__bss_compiler_size             = $000F ; G 
ITERM_MSG_INTERRUPT             = $0010 ; G page0
ITERM_MSG_PUTC                  = $0011 ; G page0
ITERM_MSG_PRINT_CURSOR          = $0012 ; G page0
ITERM_MSG_ERASE_CURSOR          = $0013 ; G page0
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G page0
ITERM_MSG_BS                    = $0015 ; G page0
ITERM_MSG_BS_PWD                = $0016 ; G page0
__data_compiler_size            = $0016 ; G 
ITERM_MSG_READLINE_BEGIN        = $0017 ; G page0
ITERM_MSG_READLINE_END          = $0018 ; G page0
ITERM_MSG_BELL                  = $0019 ; G page0
OCHAR_MSG_PUTC_BIN              = $001E ; G page0
OTERM_MSG_PUTC                  = $001E ; G page0
OTERM_MSG_TTY                   = $001F ; G page0
__code_threads_mutex_size       = $001F ; G 
OCHAR_MSG_PUTC                  = $0020 ; G page0
OTERM_MSG_PRINTC                = $0020 ; G page0
bios_sysctrl_debugconsole       = $0020 ; L system
OTERM_MSG_SCROLL                = $0021 ; G page0
__code_z80_size                 = $0021 ; G 
OTERM_MSG_CLS                   = $0022 ; G page0
__code_zalt_system_size         = $0022 ; G 
OTERM_MSG_PAUSE                 = $0023 ; G page0
OTERM_MSG_BELL                  = $0024 ; G page0
__code_crt_init_size            = $0024 ; G 
OTERM_MSG_PSCROLL               = $0025 ; G page0
__code_driver_general_size      = $0025 ; G 
__rodata_error_strings_size     = $002E ; G 
__data_stdio_size               = $0039 ; G 
__code_math_size                = $003B ; G 
bios_var_ram_top_page           = $0040 ; G page0
bios_var_ram_active_page        = $0041 ; G page0
bios_var_ram_top                = $0042 ; L page0
bios_interrupt_enable_count     = $0044 ; L page0
__code_l_size                   = $0056 ; G 
BiosFn1                         = $0068 ; L page0
BiosFn2                         = $0068 ; L page0
BiosFn3                         = $0068 ; L page0
BiosFn4                         = $0068 ; L page0
BiosFn5                         = $0068 ; L page0
bios_interrupt_disable          = $006B ; G page0
bios_interrupt_enable           = $0076 ; G page0
__data_fcntl_stdio_heap_body_size = $0078 ; G 
__code_error_size               = $007C ; G 
__code_stdlib_size              = $007D ; G 
TAR__clib_stdio_heap_size       = $0080 ; L page0
__clib_stdio_heap_size          = $0080 ; L page0
bios_interrupt_enable_done      = $0082 ; L page0
__code_driver_character_output_size = $008D ; G 
__code_fcntl_size               = $009C ; G 
__code_alloc_malloc_size        = $00C1 ; G 
__code_driver_character_input_size = $00DB ; G 
__code_string_size              = $00DF ; G 
__rodata_compiler_size          = $00E5 ; G 
isr_table_address               = $0100 ; L page0
IOCTL_OTERM_CLS                 = $0102 ; G page0
TAR__crt_stack_size             = $0200 ; L page0
__crt_stack_size                = $0200 ; L page0
isr_null_vector                 = $0200 ; G page0
IOCTL_ITERM_TIE                 = $0201 ; G page0
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G page0
bios_trap_illegal               = $0203 ; G page0
bios_reset_init                 = $0204 ; G page0
resetWarm                       = $0229 ; L page0
bios_load_byte_instruction      = $0231 ; L page0
bios_load_word_instruction      = $0238 ; L page0
__CODE_size                     = $0241 ; G 
__CODE_tail                     = $0241 ; G 
__Start                         = $0241 ; G page0
__code_crt_init_head            = $0241 ; G 
__code_crt_init_tail            = $0265 ; G 
__code_crt_main_head            = $0265 ; G 
__Exit                          = $026B ; G page0
__code_crt_exit_head            = $026C ; G 
__code_crt_exit_tail            = $026C ; G 
__code_crt_main_tail            = $026C ; G 
__code_crt_return_head          = $026C ; G 
zalt_oblivian                   = $026D ; L page0
_System_DebugConsole_Out__fast  = $026F ; G system
__code_crt_common_head          = $026F ; G 
__code_crt_common_tail          = $026F ; G 
__code_crt_return_tail          = $026F ; G 
__code_zalt_system_head         = $026F ; G 
bios_sysctrl_debugconsole_out   = $026F ; G system
_System_DebugConsole_In         = $0275 ; G system
bios_sysctrl_debugconsole_in    = $0275 ; G system
keyboard_isr                    = $027F ; G keyboard
keyboard_isr_skip               = $028B ; L keyboard
__code_adt_b_array_head         = $0291 ; G 
__code_adt_b_array_tail         = $0291 ; G 
__code_adt_b_vector_head        = $0291 ; G 
__code_adt_b_vector_tail        = $0291 ; G 
__code_adt_ba_priority_queue_head = $0291 ; G 
__code_adt_ba_priority_queue_tail = $0291 ; G 
__code_adt_ba_stack_head        = $0291 ; G 
__code_adt_ba_stack_tail        = $0291 ; G 
__code_adt_bv_priority_queue_head = $0291 ; G 
__code_adt_bv_priority_queue_tail = $0291 ; G 
__code_adt_bv_stack_head        = $0291 ; G 
__code_adt_bv_stack_tail        = $0291 ; G 
__code_adt_p_forward_list_alt_head = $0291 ; G 
__code_adt_p_forward_list_alt_tail = $0291 ; G 
__code_adt_p_forward_list_head  = $0291 ; G 
__code_adt_p_forward_list_tail  = $0291 ; G 
__code_adt_p_list_head          = $0291 ; G 
__code_adt_p_list_tail          = $0291 ; G 
__code_adt_p_queue_head         = $0291 ; G 
__code_adt_p_queue_tail         = $0291 ; G 
__code_adt_p_stack_head         = $0291 ; G 
__code_adt_p_stack_tail         = $0291 ; G 
__code_adt_w_array_head         = $0291 ; G 
__code_adt_w_array_tail         = $0291 ; G 
__code_adt_w_vector_head        = $0291 ; G 
__code_adt_w_vector_tail        = $0291 ; G 
__code_adt_wa_priority_queue_head = $0291 ; G 
__code_adt_wa_priority_queue_tail = $0291 ; G 
__code_adt_wa_stack_head        = $0291 ; G 
__code_adt_wa_stack_tail        = $0291 ; G 
__code_adt_wv_priority_queue_head = $0291 ; G 
__code_adt_wv_priority_queue_tail = $0291 ; G 
__code_adt_wv_stack_head        = $0291 ; G 
__code_adt_wv_stack_tail        = $0291 ; G 
__code_alloc_balloc_head        = $0291 ; G 
__code_alloc_balloc_tail        = $0291 ; G 
__code_alloc_malloc_head        = $0291 ; G 
__code_clib_head                = $0291 ; G 
__code_clib_tail                = $0291 ; G 
__code_driver_head              = $0291 ; G 
__code_driver_tail              = $0291 ; G 
__code_font_head                = $0291 ; G 
__code_font_tail                = $0291 ; G 
__code_zalt_debug_head          = $0291 ; G 
__code_zalt_debug_tail          = $0291 ; G 
__code_zalt_lib_head            = $0291 ; G 
__code_zalt_lib_tail            = $0291 ; G 
__code_zalt_system_tail         = $0291 ; G 
_free_fastcall                  = $0291 ; G free_fastcall
_free_unlocked_fastcall         = $0291 ; G free_unlocked_fastcall
asm_free_unlocked               = $0291 ; G asm_free_unlocked
asm_heap_free_unlocked          = $0298 ; G asm_heap_free_unlocked
remove_block                    = $02A6 ; L asm_heap_free_unlocked
asm_heap_init                   = $02BC ; G asm_heap_init
_malloc_fastcall                = $02DE ; G malloc_fastcall
_malloc_unlocked_fastcall       = $02DE ; G malloc_unlocked_fastcall
asm_malloc_unlocked             = $02DE ; G asm_malloc_unlocked
asm_heap_alloc_unlocked         = $02E5 ; G asm_heap_alloc_unlocked
block_loop                      = $02F5 ; L asm_heap_alloc_unlocked
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G page0
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G page0
found_memory                    = $0314 ; L asm_heap_alloc_unlocked
__heap_allocate_block           = $0318 ; G __heap_allocate_block
insert_block                    = $0320 ; L __heap_allocate_block
block_next_present              = $0335 ; L __heap_allocate_block
block_next_absent               = $033D ; L __heap_allocate_block
overlay_block                   = $0349 ; L __heap_allocate_block
__code_alloc_malloc_tail        = $0352 ; G 
__code_alloc_obstack_head       = $0352 ; G 
__code_alloc_obstack_tail       = $0352 ; G 
__code_arch_head                = $0352 ; G 
__code_arch_tail                = $0352 ; G 
__code_bifrost2_head            = $0352 ; G 
__code_bifrost2_tail            = $0352 ; G 
__code_bifrost_h_head           = $0352 ; G 
__code_bifrost_h_tail           = $0352 ; G 
__code_bifrost_l_head           = $0352 ; G 
__code_bifrost_l_tail           = $0352 ; G 
__code_compress_aplib_head      = $0352 ; G 
__code_compress_aplib_tail      = $0352 ; G 
__code_compress_zx7_head        = $0352 ; G 
__code_compress_zx7_tail        = $0352 ; G 
__code_ctype_head               = $0352 ; G 
asm_tolower                     = $0352 ; G asm_tolower
__code_ctype_tail               = $035B ; G 
__code_driver_general_head      = $035B ; G 
console_01_input_terminal_fdriver = $035B ; G console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = $035B ; G console_01_output_terminal_fdriver
device_reset_error              = $0363 ; G device_reset_error
device_return_error             = $036C ; G device_return_error
device_set_error                = $0373 ; G device_set_error
__code_driver_character_input_head = $0380 ; G 
__code_driver_general_tail      = $0380 ; G 
zalt_00_input_sysctrl           = $0380 ; G zalt_00_input_sysctrl_driver
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G page0
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G page0
zalt_00_input_sysctrl_ichar_msg_getc = $0387 ; L zalt_00_input_sysctrl_driver
character_00_input              = $0392 ; G character_00_input
character_00_input_stdio_msg_eatc = $03B8 ; G character_00_input_stdio_msg_eatc
eatc_loop                       = $03BD ; L character_00_input_stdio_msg_eatc
eatc_exit                       = $03D7 ; L character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_getc = $03DA ; G character_00_input_stdio_msg_getc
reject_cr                       = $03E2 ; L character_00_input_stdio_msg_getc
cr                              = $03F3 ; L character_00_input_stdio_msg_getc
character_00_input_stdio_msg_ictl = $03FA ; G character_00_input_stdio_msg_ictl
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G page0
_ictl_messages                  = $0408 ; L character_00_input_stdio_msg_ictl
exit_error                      = $040D ; L character_00_input_stdio_msg_ictl
character_00_input_stdio_msg_read = $040F ; G character_00_input_stdio_msg_read
read_loop                       = $0410 ; L character_00_input_stdio_msg_read
read_exit                       = $0426 ; L character_00_input_stdio_msg_read
read_exit_error                 = $042E ; L character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = $0439 ; G character_00_input_stdio_msg_seek
seek_loop                       = $0445 ; L character_00_input_stdio_msg_seek
__code_driver_character_input_tail = $045B ; G 
__code_driver_character_output_head = $045B ; G 
zalt_00_output_sysctrl          = $045B ; G zalt_00_output_sysctrl_driver
zalt_00_output_sysctrl_ochar_msg_putc = $0462 ; L zalt_00_output_sysctrl_driver
character_00_output             = $046B ; G character_00_output
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G page0
character_00_output_ochar_msg_putc_bin = $0491 ; G character_00_output_ochar_putc_bin
putchar                         = $04A7 ; L character_00_output_ochar_putc_bin
character_00_output_stdio_msg_ictl = $04AB ; G character_00_output_stdio_msg_ictl
exit_error                      = $04B9 ; L character_00_output_stdio_msg_ictl
character_00_output_stdio_msg_putc = $04BB ; G character_00_output_stdio_msg_putc
putc_loop                       = $04BF ; L character_00_output_stdio_msg_putc
character_00_output_stdio_msg_writ = $04CF ; G character_00_output_stdio_msg_writ
writ_loop                       = $04D3 ; L character_00_output_stdio_msg_writ
writ_end                        = $04E4 ; L character_00_output_stdio_msg_writ
__code_driver_character_output_tail = $04E8 ; G 
__code_driver_memstream_head    = $04E8 ; G 
__code_driver_memstream_tail    = $04E8 ; G 
__code_driver_terminal_input_head = $04E8 ; G 
__code_driver_terminal_input_tail = $04E8 ; G 
__code_driver_terminal_output_head = $04E8 ; G 
__code_driver_terminal_output_tail = $04E8 ; G 
__code_driver_tty_head          = $04E8 ; G 
__code_driver_tty_tail          = $04E8 ; G 
__code_error_head               = $04E8 ; G 
error_enolck_zc                 = $04EA ; G error_enolck_zc
error_enolck_mc                 = $04F0 ; G error_enolck_mc
errno_mc                        = $04FA ; G errno_mc
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G page0
error_enomem_zc                 = $0504 ; G error_enomem_zc
error_enomem_mc                 = $050A ; G error_enomem_mc
error_mc                        = $0512 ; G error_mc
__ch_system                     = $051B ; G page0
error_zc                        = $051B ; G error_zc
error_einval_zc                 = $0523 ; G error_einval_zc
error_einval_mc                 = $0529 ; G error_einval_mc
error_divide_by_zero_mc         = $052F ; G error_divide_by_zero_mc
error_edom_mc                   = $052F ; G error_edom_mc
error_znc                       = $0537 ; G error_znc
error_enotsup_zc                = $053E ; G error_enotsup_zc
error_enotsup_mc                = $0544 ; G error_enotsup_mc
error_lzc                       = $054A ; G error_lzc
error_lznc                      = $0551 ; G error_lznc
error_ebdfd_zc                  = $0558 ; G error_ebdfd_zc
error_ebdfd_mc                  = $055F ; G error_ebdfd_mc
__code_error_tail               = $0564 ; G 
__code_fcntl_head               = $0564 ; G 
asm_vioctl                      = $0564 ; G asm_vioctl
critical_section                = $0564 ; L asm_vioctl
find_driver_loop                = $0572 ; L asm_vioctl
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G page0
deliver_message                 = $0582 ; L asm_vioctl
__bool                          = $0596 ; L asm_vioctl
__setf                          = $059D ; L asm_vioctl
forward_ioctl                   = $05A8 ; L asm_vioctl
__getf                          = $05B1 ; L asm_vioctl
asm_vioctl_driver               = $05BC ; G asm_vioctl
__fcntl_fdchain_descend         = $05D8 ; G __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_2      = $05DF ; G __fcntl_fdstruct_from_fd_2
__fcntl_fdstruct_from_fd_1      = $05EA ; G __fcntl_fdstruct_from_fd_1
__code_fcntl_tail               = $0600 ; G 
__code_font_fzx_head            = $0600 ; G 
__code_font_fzx_tail            = $0600 ; G 
__code_fp_genmath_head          = $0600 ; G 
__code_fp_genmath_tail          = $0600 ; G 
__code_fp_math48_head           = $0600 ; G 
__code_fp_math48_tail           = $0600 ; G 
__code_input_head               = $0600 ; G 
__code_input_tail               = $0600 ; G 
__code_inttypes_head            = $0600 ; G 
__code_inttypes_tail            = $0600 ; G 
__code_l_head                   = $0600 ; G 
l_jpix                          = $0600 ; G l_jpix
IOCTL_OTERM_GET_OTERM           = $0602 ; G page0
__thread_block_timeout          = $0603 ; G page0
__thread_context_switch         = $0603 ; G page0
__thread_unblock                = $0603 ; G page0
l_ret                           = $0603 ; G l_ret
l_setmem_hl                     = $0624 ; G l_setmem_hl
___sdcc_call_hl                 = $0625 ; G ___sdcc_call_hl
l_jphl                          = $0625 ; G l_jphl
l_valid_base                    = $0626 ; G l_valid_base
l_neg_hl                        = $0633 ; G l_neg_hl
l_num2char                      = $063B ; G l_num2char
alpha                           = $0642 ; L l_num2char
l_decu_dehl                     = $0645 ; G l_decu_dehl
msw                             = $064B ; L l_decu_dehl
limit                           = $0651 ; L l_decu_dehl
__code_l_sccz80_head            = $0656 ; G 
__code_l_sccz80_tail            = $0656 ; G 
__code_l_sdcc_head              = $0656 ; G 
__code_l_sdcc_tail              = $0656 ; G 
__code_l_tail                   = $0656 ; G 
__code_locale_head              = $0656 ; G 
__code_locale_tail              = $0656 ; G 
__code_math_head                = $0656 ; G 
l_small_divu_16_16x16           = $0657 ; G l_small_divu_16_16x16
l0_small_divu_16_16x16          = $065B ; G l_small_divu_16_16x16
divisor_sixteen_bit             = $065F ; L l_small_divu_16_16x16
loop_16_0                       = $0665 ; L l_small_divu_16_16x16
loop_16_1                       = $066D ; L l_small_divu_16_16x16
l_divu_16_16x8                  = $0677 ; G l_divu_16_16x8
l_small_divu_16_16x8            = $0677 ; G l_small_divu_16_16x16
l0_divu_16_16x8                 = $067B ; G l_divu_16_16x8
l0_small_divu_16_16x8           = $067B ; G l_small_divu_16_16x16
loop_8_0                        = $067F ; L l_small_divu_16_16x16
loop_8_2                        = $0686 ; L l_small_divu_16_16x16
loop_8_1                        = $0688 ; L l_small_divu_16_16x16
divide_zero                     = $068D ; L l_small_divu_16_16x16
__code_math_tail                = $0691 ; G 
__code_network_head             = $0691 ; G 
__code_network_tail             = $0691 ; G 
__code_nirvanam_head            = $0691 ; G 
__code_nirvanam_tail            = $0691 ; G 
__code_nirvanap_head            = $0691 ; G 
__code_nirvanap_tail            = $0691 ; G 
__code_setjmp_head              = $0691 ; G 
__code_setjmp_tail              = $0691 ; G 
__code_sound_bit_head           = $0691 ; G 
__code_sound_bit_tail           = $0691 ; G 
__code_stdio_head               = $0691 ; G 
__stdio_nextarg_bc              = $0691 ; G __stdio_nextarg_bc
__code_stdio_tail               = $0696 ; G 
__code_stdlib_head              = $0696 ; G 
_itoa_callee                    = $0696 ; G itoa_callee
_utoa_callee                    = $069E ; G utoa_callee
asm_exit                        = $06A6 ; G asm_exit
asm0_exit                       = $06A9 ; G asm_exit
loop                            = $06B5 ; L asm_exit
asm_itoa                        = $06C7 ; G asm_itoa
asm0_itoa                       = $06CC ; G asm_itoa
asm_utoa                        = $06E8 ; G asm_utoa
asm0_utoa                       = $06ED ; G asm_utoa
asm1_utoa                       = $06F3 ; G asm_utoa
compute_lp                      = $06FA ; L asm_utoa
IOCTL_OTERM_SCROLL              = $0702 ; G page0
write_lp                        = $070C ; L asm_utoa
__code_stdlib_tail              = $0713 ; G 
__code_string_head              = $0713 ; G 
_memset_callee                  = $0713 ; G memset_callee
_strcmp_callee                  = $071B ; G strcmp_callee
_strcasecmp_callee              = $0721 ; G strcasecmp_callee
_stricmp_callee                 = $0721 ; G stricmp_callee
_strlcpy_callee                 = $0727 ; G strlcpy_callee
_strncmp_callee                 = $072F ; G strncmp_callee
_strncasecmp_callee             = $0737 ; G strncasecmp_callee
_strnicmp_callee                = $0737 ; G strnicmp_callee
_strnlen_callee                 = $073F ; G strnlen_callee
asm_memset                      = $0746 ; G asm_memset
asm_strcasecmp                  = $0757 ; G asm_strcasecmp
loop                            = $0757 ; L asm_strcasecmp
equal                           = $0768 ; L asm_strcasecmp
different                       = $076C ; L asm_strcasecmp
asm_strcmp                      = $076F ; G asm_strcmp
loop                            = $076F ; L asm_strcmp
equal                           = $0778 ; L asm_strcmp
different                       = $077C ; L asm_strcmp
asm_strlcpy                     = $0780 ; G asm_strlcpy
cpyloop                         = $0786 ; L asm_strlcpy
szexceeded0                     = $078E ; L asm_strlcpy
szexceeded1                     = $0791 ; L asm_strlcpy
done                            = $0799 ; L asm_strlcpy
_strlen_fastcall                = $079E ; G strlen_fastcall
asm_strlen                      = $079E ; G asm_strlen
asm_strncasecmp                 = $07A9 ; G asm_strncasecmp
loop                            = $07A9 ; L asm_strncasecmp
equal                           = $07C2 ; L asm_strncasecmp
different                       = $07C5 ; L asm_strncasecmp
asm_strncmp                     = $07C9 ; G asm_strncmp
loop                            = $07CD ; L asm_strncmp
equal                           = $07DA ; L asm_strncmp
different                       = $07DE ; L asm_strncmp
asm_strnlen                     = $07E2 ; G asm_strnlen
notend                          = $07EF ; L asm_strnlen
__code_string_tail              = $07F2 ; G 
__code_temp_sp1_head            = $07F2 ; G 
__code_temp_sp1_tail            = $07F2 ; G 
__code_threads_head             = $07F2 ; G 
__code_threads_mutex_head       = $07F2 ; G 
__code_threads_tail             = $07F2 ; G 
asm_mtx_init                    = $07F2 ; G asm_mtx_init
IOCTL_OTERM_FONT                = $0802 ; G page0
unknown_type                    = $080C ; L asm_mtx_init
__code_threads_mutex_tail       = $0811 ; G 
__code_z80_head                 = $0811 ; G 
asm_z80_pop_registers           = $0811 ; G asm_z80_pop_registers
asm_z80_push_registers          = $0822 ; G asm_z80_push_registers
_Error_Set__fast                = $0832 ; G zccEB6B3
__code_compiler_head            = $0832 ; G 
__code_lib_head                 = $0832 ; G 
__code_lib_tail                 = $0832 ; G 
__code_z80_tail                 = $0832 ; G 
_Error_Get                      = $083E ; G zccEB6B3
_Heap_Construct__fast           = $0847 ; G zccEB6B4
_Heap_Alloc                     = $084D ; G zccEB6B4
l_Heap_Alloc_00109              = $0863 ; L zccEB6B4
l_Heap_Alloc_00102              = $0868 ; L zccEB6B4
l_Heap_Alloc_00103              = $0871 ; L zccEB6B4
_Heap_Free                      = $0874 ; G zccEB6B4
l_Heap_Free_00103               = $0893 ; L zccEB6B4
_Thread_Construct               = $0896 ; G zccEB6B5
_Thread_GetCurrent              = $08AA ; G zccEB6B5
_Thread_GetId                   = $08AE ; G zccEB6B5
_Thread_GetHeap__fast           = $08B0 ; G zccEB6B5
_Thread_Alloc__fast             = $08B8 ; G zccEB6B5
l_Thread_Alloc__fast_00102      = $08C3 ; L zccEB6B5
l_Thread_Alloc__fast_00103      = $08CD ; L zccEB6B5
_Thread_Free__fast              = $08CE ; G zccEB6B5
_Async_Construct__fast          = $08DC ; G zccEB6B6
_Async_IsComplete__fast         = $08E9 ; G zccEB6B6
l_Async_IsComplete__fast_00114  = $08F4 ; L zccEB6B6
l_Async_IsComplete__fast_00115  = $08FC ; L zccEB6B6
l_Async_IsComplete__fast_00104  = $0900 ; L zccEB6B6
l_Async_IsComplete__fast_00105  = $0902 ; L zccEB6B6
_Async_Wait__fast               = $0903 ; G zccEB6B6
_String_Copy                    = $0906 ; G zccEB6B7
l_String_Copy_00102             = $0921 ; L zccEB6B7
l_String_Copy_00104             = $0934 ; L zccEB6B7
l_String_Copy_00106             = $0947 ; L zccEB6B7
l_String_Copy_00107             = $095F ; L zccEB6B7
_String_Compare                 = $0962 ; G zccEB6B7
l_String_Compare_00102          = $097D ; L zccEB6B7
l_String_Compare_00104          = $0990 ; L zccEB6B7
l_String_Compare_00106          = $09AB ; L zccEB6B7
l_String_Compare_00107          = $09C3 ; L zccEB6B7
_String_CompareExact            = $09C6 ; G zccEB6B7
l_String_CompareExact_00102     = $09E1 ; L zccEB6B7
l_String_CompareExact_00104     = $09F4 ; L zccEB6B7
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G page0
l_String_CompareExact_00106     = $0A0F ; L zccEB6B7
l_String_CompareExact_00107     = $0A27 ; L zccEB6B7
_String_GetLength               = $0A2A ; G zccEB6B7
l_String_GetLength_00102        = $0A45 ; L zccEB6B7
l_String_GetLength_00104        = $0A58 ; L zccEB6B7
l_String_GetLength_00105        = $0A69 ; L zccEB6B7
_System_DebugConsole_Log__fast  = $0A6C ; G zccEB6B8
l_System_DebugConsole_Log__fast_00103 = $0A72 ; L zccEB6B8
l_System_DebugConsole_Log__fast_00106 = $0A7E ; L zccEB6B8
_System_DebugConsole_LogAssertFailed = $0A7F ; G zccEB6B8
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G page0
_StreamProvider_Construct       = $0AC0 ; G zccEB6B9
l_StreamProvider_Construct_00103 = $0AD6 ; L zccEB6B9
l_StreamProvider_Construct_00104 = $0AD8 ; L zccEB6B9
_Stream_Construct__fast         = $0ADB ; G zccEB6B9
_Stream_Open                    = $0AEC ; G zccEB6B9
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G page0
l_Stream_Open_00102             = $0B21 ; L zccEB6B9
l_Stream_Open_00105             = $0B4A ; L zccEB6B9
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G page0
l_Stream_Open_00107             = $0BA0 ; L zccEB6B9
l_Stream_Open_00108             = $0BA2 ; L zccEB6B9
_Stream_Close__fast             = $0BA7 ; G zccEB6B9
l_Stream_Close__fast_00102      = $0BB2 ; L zccEB6B9
l_Stream_Close__fast_00104      = $0BC2 ; L zccEB6B9
l_Stream_Close__fast_00106      = $0BD6 ; L zccEB6B9
l_Stream_Close__fast_00107      = $0BDE ; L zccEB6B9
_Stream_Read                    = $0BDF ; G zccEB6B9
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G page0
l_Stream_Read_00102             = $0C03 ; L zccEB6B9
l_Stream_Read_00104             = $0C2E ; L zccEB6B9
l_Stream_Read_00106             = $0C44 ; L zccEB6B9
l_Stream_Read_00107             = $0C5B ; L zccEB6B9
l_Stream_Read_00109             = $0CB1 ; L zccEB6B9
l_Stream_Read_00110             = $0CB3 ; L zccEB6B9
_Stream_Write                   = $0CB8 ; G zccEB6B9
l_Stream_Write_00102            = $0CD6 ; L zccEB6B9
l_Stream_Write_00104            = $0CEA ; L zccEB6B9
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G page0
l_Stream_Write_00106            = $0D15 ; L zccEB6B9
l_Stream_Write_00108            = $0D2B ; L zccEB6B9
l_Stream_Write_00109            = $0D42 ; L zccEB6B9
l_Stream_Write_00111            = $0D98 ; L zccEB6B9
l_Stream_Write_00112            = $0D9A ; L zccEB6B9
_Stream_HasFlags                = $0D9F ; G zccEB6B9
l_Stream_HasFlags_00103         = $0DB9 ; L zccEB6B9
l_Stream_HasFlags_00104         = $0DBC ; L zccEB6B9
_StreamReader_TryReadByte       = $0DBF ; G zccEB6B10
l_StreamReader_TryReadByte_00102 = $0DD9 ; L zccEB6B10
l_StreamReader_TryReadByte_00105 = $0DFA ; L zccEB6B10
l_StreamReader_TryReadByte_00103 = $0DFD ; L zccEB6B10
l_StreamReader_TryReadByte_00106 = $0DFD ; L zccEB6B10
_GetByte__fast                  = $0E00 ; G zccEB6B10
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G page0
l_GetByte__fast_00103           = $0E1D ; L zccEB6B10
l_GetByte__fast_00105           = $0E3A ; L zccEB6B10
l_GetByte__fast_00106           = $0E3D ; L zccEB6B10
_StreamReader_ReadLine          = $0E41 ; G zccEB6B10
l_StreamReader_ReadLine_00104   = $0E67 ; L zccEB6B10
l_StreamReader_ReadLine_00105   = $0E77 ; L zccEB6B10
l_StreamReader_ReadLine_00120   = $0E83 ; L zccEB6B10
l_StreamReader_ReadLine_00109   = $0E86 ; L zccEB6B10
l_StreamReader_ReadLine_00111   = $0EC0 ; L zccEB6B10
l_StreamReader_ReadLine_00112   = $0EC1 ; L zccEB6B10
_StreamWriter_Write             = $0EC6 ; G zccEB6B11
l_StreamWriter_Write_00102      = $0EE3 ; L zccEB6B11
l_StreamWriter_Write_00104      = $0EF7 ; L zccEB6B11
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G page0
l_StreamWriter_Write_00106      = $0F0A ; L zccEB6B11
l_StreamWriter_Write_00111      = $0F30 ; L zccEB6B11
l_StreamWriter_Write_00110      = $0F74 ; L zccEB6B11
l_StreamWriter_Write_00113      = $0F79 ; L zccEB6B11
l_StreamWriter_Write_00114      = $0F7B ; L zccEB6B11
_StreamWriter_WriteLine         = $0F80 ; G zccEB6B11
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G page0
_ConsoleStreamProvider_CanProvide = $0FBE ; G zccEB6B12
l_ConsoleStreamProvider_CanProvide_00102 = $0FE6 ; L zccEB6B12
l_ConsoleStreamProvider_CanProvide_00103 = $0FE9 ; L zccEB6B12
_ConsoleStreamProvider_TryOpenStreamAsync = $0FEC ; G zccEB6B12
l_ConsoleStreamProvider_TryOpenStreamAsync_00102 = $100C ; L zccEB6B12
l_ConsoleStreamProvider_TryOpenStreamAsync_00103 = $1024 ; L zccEB6B12
_ConsoleStreamProvider_ReadStreamAsync = $1027 ; G zccEB6B12
l_ConsoleStreamProvider_ReadStreamAsync_00102 = $1048 ; L zccEB6B12
l_ConsoleStreamProvider_ReadStreamAsync_00104 = $105C ; L zccEB6B12
l_ConsoleStreamProvider_ReadStreamAsync_00106 = $1070 ; L zccEB6B12
l_ConsoleStreamProvider_ReadStreamAsync_00112 = $107E ; L zccEB6B12
l_ConsoleStreamProvider_ReadStreamAsync_00109 = $10C7 ; L zccEB6B12
__code_compiler_size            = $10CC ; G 
l_ConsoleStreamProvider_ReadStreamAsync_00114 = $10ED ; L zccEB6B12
_ConsoleStreamProvider_WriteStreamAsync = $10F2 ; G zccEB6B12
l_ConsoleStreamProvider_WriteStreamAsync_00102 = $1119 ; L zccEB6B12
l_ConsoleStreamProvider_WriteStreamAsync_00104 = $112C ; L zccEB6B12
l_ConsoleStreamProvider_WriteStreamAsync_00117 = $113F ; L zccEB6B12
l_ConsoleStreamProvider_WriteStreamAsync_00109 = $1142 ; L zccEB6B12
l_ConsoleStreamProvider_WriteStreamAsync_00107 = $1167 ; L zccEB6B12
l_ConsoleStreamProvider_WriteStreamAsync_00111 = $118E ; L zccEB6B12
_ConsoleStreamProvider_Construct__fast = $1193 ; G zccEB6B12
l_ConsoleStreamProvider_Construct__fast_00102 = $11A4 ; L zccEB6B12
l_ConsoleStreamProvider_Construct__fast_00103 = $11E0 ; L zccEB6B12
_KeyBoard_OnKey__isr            = $11E1 ; G zccEB6B12
l_KeyBoard_OnKey__isr_00104     = $11F5 ; L zccEB6B12
l_KeyBoard_OnKey__isr_00106     = $1201 ; L zccEB6B12
l_KeyBoard_OnKey__isr_00108     = $120D ; L zccEB6B12
l_KeyBoard_OnKey__isr_00110     = $1219 ; L zccEB6B12
l_KeyBoard_OnKey__isr_00113     = $1224 ; L zccEB6B12
_RingBuffer_Construct           = $1225 ; G zccEB6B13
l_RingBuffer_Construct_00102    = $123E ; L zccEB6B13
l_RingBuffer_Construct_00103    = $1247 ; L zccEB6B13
_RingBuffer_GetCount            = $124A ; G zccEB6B13
_RingBuffer_IsFull              = $1264 ; G zccEB6B13
l_RingBuffer_IsFull_00103       = $128A ; L zccEB6B13
l_RingBuffer_IsFull_00104       = $128D ; L zccEB6B13
_RingBuffer_IsEmpty             = $1290 ; G zccEB6B13
l_RingBuffer_IsEmpty_00103      = $12AC ; L zccEB6B13
l_RingBuffer_IsEmpty_00104      = $12AF ; L zccEB6B13
_RingBuffer_Read                = $12B2 ; G zccEB6B13
_RingBuffer_Peek                = $12D8 ; G zccEB6B13
_RingBuffer_Write               = $12F3 ; G zccEB6B13
_RingBuffer_Clear               = $1316 ; G zccEB6B13
_StringBuilder_Construct        = $132C ; G zccEB6B14
l_StringBuilder_Construct_00102 = $1347 ; L zccEB6B14
l_StringBuilder_Construct_00104 = $135F ; L zccEB6B14
l_StringBuilder_Construct_00105 = $1386 ; L zccEB6B14
_StringBuilder_AppendString     = $138B ; G zccEB6B14
l_StringBuilder_AppendString_00102 = $13A1 ; L zccEB6B14
l_StringBuilder_AppendString_00104 = $13AE ; L zccEB6B14
l_StringBuilder_AppendString_00106 = $13DE ; L zccEB6B14
l_StringBuilder_AppendString_00107 = $1410 ; L zccEB6B14
_StringBuilder_AppendChar       = $1415 ; G zccEB6B14
l_StringBuilder_AppendChar_00102 = $142B ; L zccEB6B14
l_StringBuilder_AppendChar_00104 = $1451 ; L zccEB6B14
l_StringBuilder_AppendChar_00105 = $147E ; L zccEB6B14
_StringBuilder_AppendUint8      = $1483 ; G zccEB6B14
l_StringBuilder_AppendUint8_00102 = $149A ; L zccEB6B14
l_StringBuilder_AppendUint8_00104 = $14C0 ; L zccEB6B14
l_StringBuilder_AppendUint8_00105 = $1514 ; L zccEB6B14
_StringBuilder_AppendUint16     = $1519 ; G zccEB6B14
l_StringBuilder_AppendUint16_00102 = $152F ; L zccEB6B14
l_StringBuilder_AppendUint16_00104 = $1555 ; L zccEB6B14
l_StringBuilder_AppendUint16_00105 = $159F ; L zccEB6B14
_OpenConsole                    = $15A4 ; G zccEB6B15
_ReadLineInto                   = $15B5 ; G zccEB6B15
_Monitor_Start                  = $15E3 ; G zccEB6B15
l_Monitor_Start_00106           = $15FE ; L zccEB6B15
l_Monitor_Start_00108           = $1652 ; L zccEB6B15
_PrintLogo                      = $1655 ; G zccEB6B16
_ExecuteDump                    = $1677 ; G zccEB6B16
_ExecuteHelp                    = $1682 ; G zccEB6B16
_ExecuteReg                     = $16D2 ; G zccEB6B16
_ExecuteCommand                 = $16DD ; G zccEB6B16
l_ExecuteCommand_00112          = $16F7 ; L zccEB6B16
l_ExecuteCommand_00101          = $16FF ; L zccEB6B16
l_ExecuteCommand_00102          = $1714 ; L zccEB6B16
l_ExecuteCommand_00103          = $1721 ; L zccEB6B16
l_ExecuteCommand_00104          = $1736 ; L zccEB6B16
l_ExecuteCommand_00105          = $173A ; L zccEB6B16
l_ExecuteCommand_00106          = $173C ; L zccEB6B16
_Dispatch                       = $173F ; G zccEB6B16
l_Dispatch_00103                = $1754 ; L zccEB6B16
l_Dispatch_00102                = $17BE ; L zccEB6B16
l_Dispatch_00105                = $17C9 ; L zccEB6B16
l_Dispatch_00106                = $17E2 ; L zccEB6B16
_init                           = $17E7 ; G zccEB6B17
_main                           = $17ED ; G zccEB6B17
l_main_00102                    = $17F0 ; L zccEB6B17
_HasKey                         = $17FB ; G zccEB6B18
l_HasKey_00102                  = $1815 ; L zccEB6B18
l_HasKey_00103                  = $1817 ; L zccEB6B18
_Task1_Execute                  = $1818 ; G zccEB6B18
l_Task1_Execute_00101           = $182F ; L zccEB6B18
l_Task1_Execute_00106           = $183F ; L zccEB6B18
l_Task1_Execute_00102           = $1845 ; L zccEB6B18
l_Task1_Execute_00104           = $184F ; L zccEB6B18
l_Task1_Execute_00108           = $1857 ; L zccEB6B18
l_Task1_Execute_00109           = $185F ; L zccEB6B18
_CountDown2                     = $1860 ; G zccEB6B19
l_CountDown2_00102              = $1875 ; L zccEB6B19
l_CountDown2_00103              = $1877 ; L zccEB6B19
_Task2_Execute                  = $1878 ; G zccEB6B19
l_Task2_Execute_00106           = $188F ; L zccEB6B19
l_Task2_Execute_00102           = $1895 ; L zccEB6B19
l_Task2_Execute_00104           = $189F ; L zccEB6B19
l_Task2_Execute_00108           = $18A6 ; L zccEB6B19
l_Task2_Execute_00109           = $18AE ; L zccEB6B19
_CountDown3                     = $18AF ; G zccEB6B20
l_CountDown3_00102              = $18C4 ; L zccEB6B20
l_CountDown3_00103              = $18C6 ; L zccEB6B20
_Task3_Execute                  = $18C7 ; G zccEB6B20
l_Task3_Execute_00106           = $18DE ; L zccEB6B20
l_Task3_Execute_00102           = $18E4 ; L zccEB6B20
l_Task3_Execute_00104           = $18EE ; L zccEB6B20
l_Task3_Execute_00108           = $18F5 ; L zccEB6B20
l_Task3_Execute_00109           = $18FD ; L zccEB6B20
__code_compiler_tail            = $18FE ; G 
__code_user_head                = $18FE ; G 
__code_user_tail                = $18FE ; G 
__rodata_clib_head              = $18FE ; G 
__rodata_clib_tail              = $18FE ; G 
__rodata_driver_head            = $18FE ; G 
__rodata_driver_tail            = $18FE ; G 
__rodata_error_strings_head     = $18FE ; G 
__rodata_font_head              = $18FE ; G 
__rodata_font_tail              = $18FE ; G 
__rodata_error_string_end_head  = $192C ; G 
__rodata_error_strings_tail     = $192C ; G 
_NewLineChar                    = $192D ; G zccEB6B2
__rodata_compiler_head          = $192D ; G 
__rodata_error_string_end_tail  = $192D ; G 
__rodata_fcntl_head             = $192D ; G 
__rodata_fcntl_tail             = $192D ; G 
__rodata_font_4x8_head          = $192D ; G 
__rodata_font_4x8_tail          = $192D ; G 
__rodata_font_8x8_head          = $192D ; G 
__rodata_font_8x8_tail          = $192D ; G 
__rodata_font_fzx_head          = $192D ; G 
__rodata_font_fzx_tail          = $192D ; G 
__rodata_input_head             = $192D ; G 
__rodata_input_tail             = $192D ; G 
__rodata_lib_head               = $192D ; G 
__rodata_lib_tail               = $192D ; G 
__rodata_sound_bit_head         = $192D ; G 
__rodata_sound_bit_tail         = $192D ; G 
__rodata_stdio_head             = $192D ; G 
__rodata_stdio_tail             = $192D ; G 
__rodata_stdlib_head            = $192D ; G 
__rodata_stdlib_tail            = $192D ; G 
_CarriageReturnChar             = $192E ; G zccEB6B2
_SmallArray8_size               = $192F ; G zccEB6B2
_SmallArray8_MaxCapacity        = $1930 ; G zccEB6B2
_Array8_size                    = $1931 ; G zccEB6B2
_Array8_MaxCapacity             = $1932 ; G zccEB6B2
_Collection8_size               = $1934 ; G zccEB6B2
_Collection8_MaxCapacity        = $1935 ; G zccEB6B2
_AsyncThis_size                 = $1937 ; G zccEB6B6
___str_0                        = $1938 ; L zccEB6B8
___str_1                        = $1953 ; L zccEB6B8
_ConsoleStreamProvider_size     = $195E ; G zccEB6B12
_ConsoleStream_size             = $195F ; L zccEB6B12
___str_0                        = $1960 ; L zccEB6B12
_RingBuffer_size                = $1964 ; G zccEB6B13
_RingBuffer_MaxCapacity         = $1966 ; G zccEB6B13
___str_0                        = $1968 ; L zccEB6B15
_MaxCommandLength               = $196D ; L zccEB6B16
___str_0                        = $196E ; L zccEB6B16
___str_1                        = $1980 ; L zccEB6B16
___str_2                        = $1999 ; L zccEB6B16
___str_3                        = $19C1 ; L zccEB6B16
___str_4                        = $19EC ; L zccEB6B16
___str_5                        = $19FF ; L zccEB6B16
___str_6                        = $1A04 ; L zccEB6B16
___str_7                        = $1A09 ; L zccEB6B16
___str_8                        = $1A0D ; L zccEB6B16
__CODE_END_head                 = $1A12 ; G 
__CODE_END_tail                 = $1A12 ; G 
__DATA_head                     = $1A12 ; G 
__rodata_compiler_tail          = $1A12 ; G 
__rodata_user_head              = $1A12 ; G 
__rodata_user_tail              = $1A12 ; G 
__DATA_tail                     = $1A13 ; G 
__data_alloc_balloc_head        = $1A13 ; G 
__data_alloc_balloc_tail        = $1A13 ; G 
__data_alloc_malloc_head        = $1A13 ; G 
__data_clib_head                = $1A13 ; G 
__data_clib_tail                = $1A13 ; G 
__data_driver_head              = $1A13 ; G 
__data_driver_tail              = $1A13 ; G 
__data_font_head                = $1A13 ; G 
__data_font_tail                = $1A13 ; G 
__malloc_heap                   = $1A13 ; G page0
__smc_clib_head                 = $1A13 ; G 
__smc_clib_tail                 = $1A13 ; G 
__smc_compiler_head             = $1A13 ; G 
__smc_compiler_tail             = $1A13 ; G 
__smc_driver_head               = $1A13 ; G 
__smc_driver_tail               = $1A13 ; G 
__smc_fcntl_head                = $1A13 ; G 
__smc_fcntl_tail                = $1A13 ; G 
__smc_font_head                 = $1A13 ; G 
__smc_font_tail                 = $1A13 ; G 
__smc_l_head                    = $1A13 ; G 
__smc_l_tail                    = $1A13 ; G 
__smc_lib_head                  = $1A13 ; G 
__smc_lib_tail                  = $1A13 ; G 
__smc_sound_bit_head            = $1A13 ; G 
__smc_sound_bit_tail            = $1A13 ; G 
__smc_user_head                 = $1A13 ; G 
__smc_user_tail                 = $1A13 ; G 
__data_alloc_malloc_tail        = $1A15 ; G 
__data_fcntl_head               = $1A15 ; G 
__stdio_heap                    = $1A15 ; G page0
__data_fcntl_stdio_heap_head_head = $1A17 ; G 
__data_fcntl_tail               = $1A17 ; G 
__stdio_block                   = $1A17 ; L page0
__data_fcntl_stdio_heap_body_head = $1A1D ; G 
__data_fcntl_stdio_heap_head_tail = $1A1D ; G 
__i_fcntl_heap_0                = $1A1D ; L page0
__i_fcntl_fdstruct_0            = $1A23 ; L page0
__i_fcntl_heap_1                = $1A34 ; L page0
__i_fcntl_fdstruct_1            = $1A3A ; L page0
__i_fcntl_fdstruct_2            = $1A3A ; L page0
__i_fcntl_heap_2                = $1A4B ; L page0
__data_fcntl_stdio_heap_body_tail = $1A95 ; G 
__data_fcntl_stdio_heap_tail_head = $1A95 ; G 
__i_fcntl_heap_3                = $1A95 ; L page0
__data_fcntl_fdtable_body_head  = $1A97 ; G 
__data_fcntl_stdio_heap_tail_tail = $1A97 ; G 
__fcntl_fdtbl                   = $1A97 ; G page0
__data_fcntl_fdtable_body_tail  = $1A9D ; G 
__data_sound_bit_head           = $1A9D ; G 
__data_sound_bit_tail           = $1A9D ; G 
__data_stdio_head               = $1A9D ; G 
_stdin                          = $1A9D ; G page0
__i_stdio_file_0                = $1A9F ; L page0
_stdout                         = $1AAE ; G page0
__i_stdio_file_1                = $1AB0 ; L page0
_stderr                         = $1ABF ; G page0
__i_stdio_file_2                = $1AC1 ; L page0
__stdio_open_file_list          = $1AD0 ; G page0
__stdio_closed_file_list        = $1AD2 ; G page0
__data_stdio_tail               = $1AD6 ; G 
__data_stdlib_head              = $1AD6 ; G 
__data_stdlib_tail              = $1AD6 ; G 
__data_threads_head             = $1AD6 ; G 
__thrd_id                       = $1AD6 ; G page0
_ConsoleProtocol                = $1AD7 ; G zccEB6B12
__data_compiler_head            = $1AD7 ; G 
__data_lib_head                 = $1AD7 ; G 
__data_lib_tail                 = $1AD7 ; G 
__data_threads_tail             = $1AD7 ; G 
_Commands                       = $1AD9 ; L zccEB6B16
__task                          = $1AE3 ; L zccEB6B18
__task                          = $1AE5 ; L zccEB6B19
_count                          = $1AE7 ; L zccEB6B19
__task                          = $1AE9 ; L zccEB6B20
_count                          = $1AEB ; L zccEB6B20
__BSS_head                      = $1AED ; G 
__DATA_END_head                 = $1AED ; G 
__DATA_END_tail                 = $1AED ; G 
__data_compiler_tail            = $1AED ; G 
__data_user_head                = $1AED ; G 
__data_user_tail                = $1AED ; G 
__BSS_UNINITIALIZED_head        = $1AEE ; G 
__BSS_UNINITIALIZED_tail        = $1AEE ; G 
__BSS_tail                      = $1AEE ; G 
__bss_alloc_balloc_head         = $1AEE ; G 
__bss_alloc_balloc_tail         = $1AEE ; G 
__bss_alloc_malloc_head         = $1AEE ; G 
__bss_alloc_malloc_tail         = $1AEE ; G 
__bss_arch_head                 = $1AEE ; G 
__bss_arch_tail                 = $1AEE ; G 
__bss_clib_head                 = $1AEE ; G 
__bss_clib_tail                 = $1AEE ; G 
__bss_compress_aplib_head       = $1AEE ; G 
__bss_compress_aplib_tail       = $1AEE ; G 
__bss_driver_head               = $1AEE ; G 
__bss_driver_tail               = $1AEE ; G 
__bss_error_head                = $1AEE ; G 
__bss_font_head                 = $1AEE ; G 
__bss_font_tail                 = $1AEE ; G 
_errno                          = $1AEE ; G _errno
__bss_error_tail                = $1AF0 ; G 
__bss_fcntl_head                = $1AF0 ; G 
__bss_fcntl_tail                = $1AF0 ; G 
__bss_input_head                = $1AF0 ; G 
__bss_input_tail                = $1AF0 ; G 
__bss_sound_bit_head            = $1AF0 ; G 
__bss_sound_bit_tail            = $1AF0 ; G 
__bss_stdio_head                = $1AF0 ; G 
__bss_stdio_tail                = $1AF0 ; G 
__bss_stdlib_head               = $1AF0 ; G 
__exit_stack                    = $1AF0 ; G page0
__quickexit_stack               = $1AF5 ; G page0
__bss_compiler_head             = $1AF6 ; G 
__bss_lib_head                  = $1AF6 ; G 
__bss_lib_tail                  = $1AF6 ; G 
__bss_stdlib_tail               = $1AF6 ; G 
__bss_string_head               = $1AF6 ; G 
__bss_string_tail               = $1AF6 ; G 
_crt_heap                       = $1AF6 ; G zccEB6B4
_CurrentThread                  = $1AF7 ; L zccEB6B5
_ConsoleStreamProvider          = $1AFC ; L zccEB6B9
_DebugConsole                   = $1AFE ; L zccEB6B12
_Console                        = $1B00 ; L zccEB6B15
_Console                        = $1B02 ; L zccEB6B18
_Key                            = $1B04 ; L zccEB6B18
__BSS_END_head                  = $1B05 ; G 
__BSS_END_tail                  = $1B05 ; G 
__IGNORE_head                   = $1B05 ; G 
__IGNORE_tail                   = $1B05 ; G 
__bss_compiler_tail             = $1B05 ; G 
__bss_user_head                 = $1B05 ; G 
__bss_user_tail                 = $1B05 ; G 
__size                          = $1B05 ; G 
__tail                          = $1B05 ; G 
IOCTL_ITERM_CAPS                = $C009 ; G page0
IOCTL_ITERM_COOK                = $C011 ; G page0
IOCTL_OTERM_CRLF                = $C012 ; G page0
IOCTL_OCHAR_CRLF                = $C014 ; G page0
IOCTL_ITERM_LINE                = $C021 ; G page0
IOCTL_OTERM_COOK                = $C022 ; G page0
IOCTL_ITERM_PASS                = $C041 ; G page0
IOCTL_OTERM_PAUSE               = $C042 ; G page0
IOCTL_ITERM_ECHO                = $C081 ; G page0
IOCTL_OTERM_PAGE                = $C082 ; G page0
IOCTL_ITERM_CRLF                = $C101 ; G page0
IOCTL_OTERM_BELL                = $C102 ; G page0
IOCTL_ICHAR_CRLF                = $C103 ; G page0
IOCTL_ITERM_CURS                = $C201 ; G page0
IOCTL_OTERM_SIGNAL              = $C202 ; G page0
IOCTL_OTERM_CLEAR               = $E002 ; G page0
DEF__crt_on_exit                = $10001 ; L page0
