TAR__clib_malloc_heap_size      = $FFFFFFFF ; L page0
__clib_malloc_heap_size         = $FFFFFFFF ; L page0
CLIB_OPT_STDIO                  = $0000 ; L page0
DEF__crt_enable_eidi            = $0000 ; L page0
DEF__crt_include_preamble       = $0000 ; L page0
IOCTL_RESET                     = $0000 ; G page0
STDIO_SEEK_SET                  = $0000 ; G page0
TAR__clib_balloc_table_size     = $0000 ; L page0
TAR__clib_fopen_max             = $0000 ; L page0
TAR__clib_open_max              = $0000 ; L page0
TAR__clib_quickexit_stack_size  = $0000 ; L page0
TAR__crt_enable_commandline     = $0000 ; L page0
TAR__crt_enable_nmi             = $0000 ; L page0
TAR__crt_enable_restart         = $0000 ; L page0
TAR__crt_enable_rst             = $0000 ; L page0
TAR__crt_initialize_bss         = $0000 ; L page0
TAR__crt_model                  = $0000 ; L page0
TAR__crt_org_bss                = $0000 ; L page0
TAR__crt_org_code               = $0000 ; L page0
TAR__crt_org_data               = $0000 ; L page0
TAR__register_sp                = $0000 ; L page0
__BSS_END_size                  = $0000 ; G 
__BSS_UNINITIALIZED_size        = $0000 ; G 
__CLIB_OPT_FASTCOPY             = $0000 ; L asm_memset
__CLIB_OPT_IMATH                = $0000 ; L l_divu_16_16x8
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm_vioctl
__CLIB_OPT_MULTITHREAD          = $0000 ; L free_fastcall
__CLIB_OPT_MULTITHREAD          = $0000 ; L malloc_fastcall
__CLIB_OPT_NUM2TXT              = $0000 ; L asm_utoa
__CODE_END_size                 = $0000 ; G 
__CODE_head                     = $0000 ; G 
__CRTDEF                        = $0000 ; L page0
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G page0
__IGNORE_size                   = $0000 ; G 
__MMAP                          = $0000 ; L page0
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_stdio_size                = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L page0
__clib_fopen_max                = $0000 ; L page0
__clib_open_max                 = $0000 ; L page0
__clib_quickexit_stack_size     = $0000 ; L page0
__code_adt_b_array_size         = $0000 ; G 
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_forward_list_size  = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_arch_size                = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_common_size          = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_terminal_input_size = $0000 ; G 
__code_driver_terminal_output_size = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_fp_math48_size           = $0000 ; G 
__code_input_size               = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sccz80_size            = $0000 ; G 
__code_l_sdcc_size              = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_sound_bit_size           = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_user_size                = $0000 ; G 
__code_zalt_lib_size            = $0000 ; G 
__crt_enable_restart            = $0000 ; L page0
__crt_initialize_bss            = $0000 ; L page0
__crt_model                     = $0000 ; L page0
__crt_org_bss                   = $0000 ; L page0
__crt_org_code                  = $0000 ; L page0
__crt_org_data                  = $0000 ; L page0
__data_alloc_balloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_sound_bit_size           = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G page0
__rodata_clib_size              = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_4x8_size          = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_input_size             = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_stdlib_size            = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
debug_status_none               = $0000 ; L debug
debug_var_af_offset             = $0000 ; L debug
startup                         = $0000 ; L page0
thrd_success                    = $0000 ; G page0
DEFINED_CLIB_OPT_STDIO          = $0001 ; L page0
DEFINED_Z88DK_USES_SDCC         = $0001 ; L page0
STDIO_MSG_PUTC                  = $0001 ; G page0
STDIO_SEEK_CUR                  = $0001 ; G page0
TAR__crt_enable_close           = $0001 ; L page0
Z88DK_USES_SDCC                 = $0001 ; L page0
_CLIB_CFG_ASM_                  = $0001 ; L asm_memset
_CLIB_CFG_ASM_                  = $0001 ; L asm_utoa
_CLIB_CFG_ASM_                  = $0001 ; L asm_vioctl
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_getc
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_read
_CLIB_CFG_ASM_                  = $0001 ; L character_00_output_ochar_putc_bin
_CLIB_CFG_ASM_                  = $0001 ; L console_01_input_terminal_fdriver
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_edom_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_einval_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_einval_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enomem_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enomem_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_zc
_CLIB_CFG_ASM_                  = $0001 ; L free_fastcall
_CLIB_CFG_ASM_                  = $0001 ; L l_divu_16_16x8
_CLIB_CFG_ASM_                  = $0001 ; L malloc_fastcall
__BSS_size                      = $0001 ; G 
__CLIB_OPT_ERROR                = $0001 ; L error_ebdfd_mc
__CLIB_OPT_ERROR                = $0001 ; L error_ebdfd_zc
__CLIB_OPT_ERROR                = $0001 ; L error_edom_mc
__CLIB_OPT_ERROR                = $0001 ; L error_einval_mc
__CLIB_OPT_ERROR                = $0001 ; L error_einval_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enolck_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enolck_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enomem_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enomem_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enotsup_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enotsup_zc
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G page0
__SDCC                          = $0001 ; L __stdio_nextarg_bc
__SDCC                          = $0001 ; L asm_memset
__SDCC                          = $0001 ; L asm_utoa
__SDCC                          = $0001 ; L asm_vioctl
__SDCC                          = $0001 ; L character_00_input_stdio_msg_getc
__SDCC                          = $0001 ; L character_00_input_stdio_msg_read
__SDCC                          = $0001 ; L character_00_output_ochar_putc_bin
__SDCC                          = $0001 ; L console_01_input_terminal_fdriver
__SDCC                          = $0001 ; L error_ebdfd_mc
__SDCC                          = $0001 ; L error_ebdfd_zc
__SDCC                          = $0001 ; L error_edom_mc
__SDCC                          = $0001 ; L error_einval_mc
__SDCC                          = $0001 ; L error_einval_zc
__SDCC                          = $0001 ; L error_enolck_mc
__SDCC                          = $0001 ; L error_enolck_zc
__SDCC                          = $0001 ; L error_enomem_mc
__SDCC                          = $0001 ; L error_enomem_zc
__SDCC                          = $0001 ; L error_enotsup_mc
__SDCC                          = $0001 ; L error_enotsup_zc
__SDCC                          = $0001 ; L free_fastcall
__SDCC                          = $0001 ; L l_divu_16_16x8
__SDCC                          = $0001 ; L malloc_fastcall
__SDCC_IY                       = $0001 ; L __stdio_nextarg_bc
__SDCC_IY                       = $0001 ; L asm_memset
__SDCC_IY                       = $0001 ; L asm_utoa
__SDCC_IY                       = $0001 ; L asm_vioctl
__SDCC_IY                       = $0001 ; L character_00_input_stdio_msg_getc
__SDCC_IY                       = $0001 ; L character_00_input_stdio_msg_read
__SDCC_IY                       = $0001 ; L character_00_output_ochar_putc_bin
__SDCC_IY                       = $0001 ; L console_01_input_terminal_fdriver
__SDCC_IY                       = $0001 ; L error_ebdfd_mc
__SDCC_IY                       = $0001 ; L error_ebdfd_zc
__SDCC_IY                       = $0001 ; L error_edom_mc
__SDCC_IY                       = $0001 ; L error_einval_mc
__SDCC_IY                       = $0001 ; L error_einval_zc
__SDCC_IY                       = $0001 ; L error_enolck_mc
__SDCC_IY                       = $0001 ; L error_enolck_zc
__SDCC_IY                       = $0001 ; L error_enomem_mc
__SDCC_IY                       = $0001 ; L error_enomem_zc
__SDCC_IY                       = $0001 ; L error_enotsup_mc
__SDCC_IY                       = $0001 ; L error_enotsup_zc
__SDCC_IY                       = $0001 ; L free_fastcall
__SDCC_IY                       = $0001 ; L l_divu_16_16x8
__SDCC_IY                       = $0001 ; L malloc_fastcall
__SDCC_IY                       = $0001 ; L page0
__crt_enable_close              = $0001 ; L page0
__data_threads_size             = $0001 ; G 
__rodata_error_string_end_size  = $0001 ; G 
debug_status_registers_saved    = $0001 ; L debug
isr_table_index                 = $0001 ; L page0
mtx_plain                       = $0001 ; G page0
thrd_error                      = $0001 ; G page0
STDIO_MSG_WRIT                  = $0002 ; G page0
STDIO_SEEK_END                  = $0002 ; G page0
TAR__clib_exit_stack_size       = $0002 ; L page0
__EBADF                         = $0002 ; G page0
__bss_error_size                = $0002 ; G 
__clib_exit_stack_size          = $0002 ; L page0
__data_alloc_malloc_size        = $0002 ; G 
__data_fcntl_size               = $0002 ; G 
__data_fcntl_stdio_heap_tail_size = $0002 ; G 
__exit_stack_size               = $0002 ; G page0
debug_cmd_dumpregs              = $0002 ; L debug
debug_var_bc_offset             = $0002 ; L debug
mtx_recursive                   = $0002 ; G page0
thrd_nomem                      = $0002 ; G page0
STDIO_MSG_GETC                  = $0003 ; G page0
__EBDFD                         = $0003 ; G page0
__code_crt_return_size          = $0003 ; G 
__fcntl_fdtbl_size              = $0003 ; G page0
STDIO_MSG_EATC                  = $0004 ; G page0
__EDOM                          = $0004 ; G page0
debug_var_de_offset             = $0004 ; L debug
mtx_timed                       = $0004 ; G page0
thrd_busy                       = $0004 ; G page0
STDIO_MSG_READ                  = $0005 ; G page0
__EFBIG                         = $0005 ; G page0
__code_stdio_size               = $0005 ; G 
STDIO_MSG_SEEK                  = $0006 ; G page0
__EINVAL                        = $0006 ; G page0
__bss_stdlib_size               = $0006 ; G 
__data_fcntl_fdtable_body_size  = $0006 ; G 
__data_fcntl_stdio_heap_head_size = $0006 ; G 
debug_var_hl_offset             = $0006 ; L debug
DEF__crt_enable_streams         = $0007 ; L page0
STDIO_MSG_ICTL                  = $0007 ; G page0
__EMFILE                        = $0007 ; G page0
__code_crt_main_size            = $0007 ; G 
STDIO_MSG_FLSH                  = $0008 ; G page0
__ENFILE                        = $0008 ; G page0
debug_sysctrl_port              = $0008 ; L debug
debug_var_ix_offset             = $0008 ; L debug
thrd_timedout                   = $0008 ; G page0
STDIO_MSG_CLOS                  = $0009 ; G page0
__ENOLCK                        = $0009 ; G page0
__code_ctype_size               = $0009 ; G 
CHAR_LF                         = $000A ; L character_00_input_stdio_msg_read
CHAR_LF                         = $000A ; L character_00_output_ochar_putc_bin
__ENOMEM                        = $000A ; G page0
debug_var_iy_offset             = $000A ; L debug
__ENOTSUP                       = $000B ; G page0
__EOVERFLOW                     = $000C ; G page0
debug_var_sp_offset             = $000C ; L debug
CHAR_CR                         = $000D ; L character_00_input_stdio_msg_getc
CHAR_CR                         = $000D ; L character_00_output_ochar_putc_bin
__ERANGE                        = $000D ; G page0
__ESTAT                         = $000E ; G page0
debug_var_pc_offset             = $000E ; L debug
ICHAR_MSG_GETC                  = $000F ; G page0
ITERM_MSG_GETC                  = $000F ; G page0
__EAGAIN                        = $000F ; G page0
__EWOULDBLOCK                   = $000F ; G page0
ITERM_MSG_INTERRUPT             = $0010 ; G page0
debug_var_af2_offset            = $0010 ; L debug
ITERM_MSG_PUTC                  = $0011 ; G page0
ITERM_MSG_PRINT_CURSOR          = $0012 ; G page0
__bss_compiler_size             = $0012 ; G 
debug_var_bc2_offset            = $0012 ; L debug
ITERM_MSG_ERASE_CURSOR          = $0013 ; G page0
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G page0
debug_var_de2_offset            = $0014 ; L debug
ITERM_MSG_BS                    = $0015 ; G page0
ITERM_MSG_BS_PWD                = $0016 ; G page0
ITERM_MSG_READLINE_BEGIN        = $0017 ; G page0
ITERM_MSG_READLINE_END          = $0018 ; G page0
__data_compiler_size            = $0018 ; G 
debug_var_hl2_offset            = $0018 ; L debug
debug_vars_size                 = $0018 ; L debug
ITERM_MSG_BELL                  = $0019 ; G page0
OCHAR_MSG_PUTC_BIN              = $001E ; G page0
OTERM_MSG_PUTC                  = $001E ; G page0
OTERM_MSG_TTY                   = $001F ; G page0
__code_threads_mutex_size       = $001F ; G 
OCHAR_MSG_PUTC                  = $0020 ; G page0
OTERM_MSG_PRINTC                = $0020 ; G page0
bios_sysctrl_debugconsole       = $0020 ; L system
OTERM_MSG_SCROLL                = $0021 ; G page0
__code_z80_size                 = $0021 ; G 
OTERM_MSG_CLS                   = $0022 ; G page0
__code_zalt_system_size         = $0022 ; G 
OTERM_MSG_PAUSE                 = $0023 ; G page0
OTERM_MSG_BELL                  = $0024 ; G page0
__code_crt_init_size            = $0024 ; G 
__rodata_compiler_size          = $0024 ; G 
OTERM_MSG_PSCROLL               = $0025 ; G page0
__code_driver_general_size      = $0025 ; G 
__rodata_error_strings_size     = $002E ; G 
__data_stdio_size               = $0039 ; G 
__code_math_size                = $003B ; G 
bios_var_ram_top_page           = $0040 ; G page0
bios_var_ram_active_page        = $0041 ; G page0
bios_var_ram_top                = $0042 ; L page0
bios_interrupt_enable_count     = $0044 ; L page0
__code_l_size                   = $0056 ; G 
BiosFn1                         = $006B ; L page0
BiosFn2                         = $006B ; L page0
BiosFn3                         = $006B ; L page0
BiosFn4                         = $006B ; L page0
BiosFn5                         = $006B ; L page0
bios_interrupt_disable          = $006E ; G page0
__data_fcntl_stdio_heap_body_size = $0078 ; G 
bios_interrupt_enable           = $0079 ; G page0
__code_error_size               = $007C ; G 
__code_stdlib_size              = $007D ; G 
TAR__clib_stdio_heap_size       = $0080 ; L page0
__clib_stdio_heap_size          = $0080 ; L page0
bios_interrupt_enable_done      = $0085 ; L page0
__code_driver_character_output_size = $008D ; G 
__code_fcntl_size               = $009C ; G 
__code_zalt_debug_size          = $00A3 ; G 
__code_alloc_malloc_size        = $00C1 ; G 
__code_driver_character_input_size = $00DB ; G 
__code_string_size              = $00DF ; G 
isr_table_address               = $0100 ; L page0
IOCTL_OTERM_CLS                 = $0102 ; G page0
TAR__crt_stack_size             = $0200 ; L page0
__crt_stack_size                = $0200 ; L page0
isr_null_vector                 = $0200 ; G page0
IOCTL_ITERM_TIE                 = $0201 ; G page0
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G page0
bios_trap_illegal               = $0203 ; G page0
bios_reset_init                 = $0204 ; G page0
resetWarm                       = $0229 ; L page0
bios_load_byte_instruction      = $0231 ; L page0
bios_load_word_instruction      = $0238 ; L page0
__CODE_size                     = $0241 ; G 
__CODE_tail                     = $0241 ; G 
__Start                         = $0241 ; G page0
__code_crt_init_head            = $0241 ; G 
__code_crt_init_tail            = $0265 ; G 
__code_crt_main_head            = $0265 ; G 
__Exit                          = $026B ; G page0
__code_crt_exit_head            = $026C ; G 
__code_crt_exit_tail            = $026C ; G 
__code_crt_main_tail            = $026C ; G 
__code_crt_return_head          = $026C ; G 
zalt_oblivian                   = $026D ; L page0
_System_DebugConsole_Out__fast  = $026F ; G system
__code_crt_common_head          = $026F ; G 
__code_crt_common_tail          = $026F ; G 
__code_crt_return_tail          = $026F ; G 
__code_zalt_system_head         = $026F ; G 
bios_sysctrl_debugconsole_out   = $026F ; G system
_System_DebugConsole_In         = $0275 ; G system
bios_sysctrl_debugconsole_in    = $0275 ; G system
keyboard_isr                    = $027F ; G keyboard
keyboard_isr_skip               = $028B ; L keyboard
__code_zalt_debug_head          = $0291 ; G 
__code_zalt_lib_head            = $0291 ; G 
__code_zalt_lib_tail            = $0291 ; G 
__code_zalt_system_tail         = $0291 ; G 
debug_var_af                    = $0291 ; L debug
debug_var_base                  = $0291 ; L debug
debug_vars                      = $0291 ; L debug
debug_status                    = $0293 ; L debug
debug_var_bc                    = $0293 ; L debug
debug_save_registers            = $0294 ; G debug
debug_var_de                    = $0295 ; L debug
debug_var_hl                    = $0297 ; L debug
debug_var_ix                    = $0299 ; L debug
debug_var_iy                    = $029B ; L debug
debug_var_sp                    = $029D ; L debug
debug_var_pc                    = $029F ; L debug
debug_var_af2                   = $02A1 ; L debug
debug_var_bc2                   = $02A3 ; L debug
debug_var_de2                   = $02A5 ; L debug
debug_var_hl2                   = $02A9 ; L debug
debug_restore_registers_all     = $02D2 ; L debug
debug_restore_registers         = $02DA ; G debug
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G page0
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G page0
debug_monitor                   = $030C ; G debug
debug_monitor_get_cmd           = $030F ; L debug
debug_dump_registers            = $0319 ; L debug
debug_dump_registers_loop       = $031E ; L debug
debug_breakpoint                = $0326 ; G debug
__code_adt_b_array_head         = $0334 ; G 
__code_adt_b_array_tail         = $0334 ; G 
__code_adt_b_vector_head        = $0334 ; G 
__code_adt_b_vector_tail        = $0334 ; G 
__code_adt_ba_priority_queue_head = $0334 ; G 
__code_adt_ba_priority_queue_tail = $0334 ; G 
__code_adt_ba_stack_head        = $0334 ; G 
__code_adt_ba_stack_tail        = $0334 ; G 
__code_adt_bv_priority_queue_head = $0334 ; G 
__code_adt_bv_priority_queue_tail = $0334 ; G 
__code_adt_bv_stack_head        = $0334 ; G 
__code_adt_bv_stack_tail        = $0334 ; G 
__code_adt_p_forward_list_alt_head = $0334 ; G 
__code_adt_p_forward_list_alt_tail = $0334 ; G 
__code_adt_p_forward_list_head  = $0334 ; G 
__code_adt_p_forward_list_tail  = $0334 ; G 
__code_adt_p_list_head          = $0334 ; G 
__code_adt_p_list_tail          = $0334 ; G 
__code_adt_p_queue_head         = $0334 ; G 
__code_adt_p_queue_tail         = $0334 ; G 
__code_adt_p_stack_head         = $0334 ; G 
__code_adt_p_stack_tail         = $0334 ; G 
__code_adt_w_array_head         = $0334 ; G 
__code_adt_w_array_tail         = $0334 ; G 
__code_adt_w_vector_head        = $0334 ; G 
__code_adt_w_vector_tail        = $0334 ; G 
__code_adt_wa_priority_queue_head = $0334 ; G 
__code_adt_wa_priority_queue_tail = $0334 ; G 
__code_adt_wa_stack_head        = $0334 ; G 
__code_adt_wa_stack_tail        = $0334 ; G 
__code_adt_wv_priority_queue_head = $0334 ; G 
__code_adt_wv_priority_queue_tail = $0334 ; G 
__code_adt_wv_stack_head        = $0334 ; G 
__code_adt_wv_stack_tail        = $0334 ; G 
__code_alloc_balloc_head        = $0334 ; G 
__code_alloc_balloc_tail        = $0334 ; G 
__code_alloc_malloc_head        = $0334 ; G 
__code_clib_head                = $0334 ; G 
__code_clib_tail                = $0334 ; G 
__code_driver_head              = $0334 ; G 
__code_driver_tail              = $0334 ; G 
__code_font_head                = $0334 ; G 
__code_font_tail                = $0334 ; G 
__code_zalt_debug_tail          = $0334 ; G 
_free_fastcall                  = $0334 ; G free_fastcall
_free_unlocked_fastcall         = $0334 ; G free_unlocked_fastcall
asm_free_unlocked               = $0334 ; G asm_free_unlocked
asm_heap_free_unlocked          = $033B ; G asm_heap_free_unlocked
remove_block                    = $0349 ; L asm_heap_free_unlocked
asm_heap_init                   = $035F ; G asm_heap_init
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G page0
_malloc_fastcall                = $0381 ; G malloc_fastcall
_malloc_unlocked_fastcall       = $0381 ; G malloc_unlocked_fastcall
asm_malloc_unlocked             = $0381 ; G asm_malloc_unlocked
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G page0
asm_heap_alloc_unlocked         = $0388 ; G asm_heap_alloc_unlocked
block_loop                      = $0398 ; L asm_heap_alloc_unlocked
found_memory                    = $03B7 ; L asm_heap_alloc_unlocked
__heap_allocate_block           = $03BB ; G __heap_allocate_block
insert_block                    = $03C3 ; L __heap_allocate_block
block_next_present              = $03D8 ; L __heap_allocate_block
block_next_absent               = $03E0 ; L __heap_allocate_block
overlay_block                   = $03EC ; L __heap_allocate_block
__code_alloc_malloc_tail        = $03F5 ; G 
__code_alloc_obstack_head       = $03F5 ; G 
__code_alloc_obstack_tail       = $03F5 ; G 
__code_arch_head                = $03F5 ; G 
__code_arch_tail                = $03F5 ; G 
__code_bifrost2_head            = $03F5 ; G 
__code_bifrost2_tail            = $03F5 ; G 
__code_bifrost_h_head           = $03F5 ; G 
__code_bifrost_h_tail           = $03F5 ; G 
__code_bifrost_l_head           = $03F5 ; G 
__code_bifrost_l_tail           = $03F5 ; G 
__code_compress_aplib_head      = $03F5 ; G 
__code_compress_aplib_tail      = $03F5 ; G 
__code_compress_zx7_head        = $03F5 ; G 
__code_compress_zx7_tail        = $03F5 ; G 
__code_ctype_head               = $03F5 ; G 
asm_tolower                     = $03F5 ; G asm_tolower
__code_ctype_tail               = $03FE ; G 
__code_driver_general_head      = $03FE ; G 
console_01_input_terminal_fdriver = $03FE ; G console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = $03FE ; G console_01_output_terminal_fdriver
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G page0
device_reset_error              = $0406 ; G device_reset_error
device_return_error             = $040F ; G device_return_error
device_set_error                = $0416 ; G device_set_error
__code_driver_character_input_head = $0423 ; G 
__code_driver_general_tail      = $0423 ; G 
zalt_00_input_sysctrl           = $0423 ; G zalt_00_input_sysctrl_driver
zalt_00_input_sysctrl_ichar_msg_getc = $042A ; L zalt_00_input_sysctrl_driver
character_00_input              = $0435 ; G character_00_input
character_00_input_stdio_msg_eatc = $045B ; G character_00_input_stdio_msg_eatc
eatc_loop                       = $0460 ; L character_00_input_stdio_msg_eatc
eatc_exit                       = $047A ; L character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_getc = $047D ; G character_00_input_stdio_msg_getc
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G page0
reject_cr                       = $0485 ; L character_00_input_stdio_msg_getc
cr                              = $0496 ; L character_00_input_stdio_msg_getc
character_00_input_stdio_msg_ictl = $049D ; G character_00_input_stdio_msg_ictl
_ictl_messages                  = $04AB ; L character_00_input_stdio_msg_ictl
exit_error                      = $04B0 ; L character_00_input_stdio_msg_ictl
character_00_input_stdio_msg_read = $04B2 ; G character_00_input_stdio_msg_read
read_loop                       = $04B3 ; L character_00_input_stdio_msg_read
read_exit                       = $04C9 ; L character_00_input_stdio_msg_read
read_exit_error                 = $04D1 ; L character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = $04DC ; G character_00_input_stdio_msg_seek
seek_loop                       = $04E8 ; L character_00_input_stdio_msg_seek
__code_driver_character_input_tail = $04FE ; G 
__code_driver_character_output_head = $04FE ; G 
zalt_00_output_sysctrl          = $04FE ; G zalt_00_output_sysctrl_driver
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G page0
zalt_00_output_sysctrl_ochar_msg_putc = $0505 ; L zalt_00_output_sysctrl_driver
character_00_output             = $050E ; G character_00_output
character_00_output_ochar_msg_putc_bin = $0534 ; G character_00_output_ochar_putc_bin
putchar                         = $054A ; L character_00_output_ochar_putc_bin
character_00_output_stdio_msg_ictl = $054E ; G character_00_output_stdio_msg_ictl
exit_error                      = $055C ; L character_00_output_stdio_msg_ictl
character_00_output_stdio_msg_putc = $055E ; G character_00_output_stdio_msg_putc
putc_loop                       = $0562 ; L character_00_output_stdio_msg_putc
character_00_output_stdio_msg_writ = $0572 ; G character_00_output_stdio_msg_writ
writ_loop                       = $0576 ; L character_00_output_stdio_msg_writ
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G page0
writ_end                        = $0587 ; L character_00_output_stdio_msg_writ
__code_driver_character_output_tail = $058B ; G 
__code_driver_memstream_head    = $058B ; G 
__code_driver_memstream_tail    = $058B ; G 
__code_driver_terminal_input_head = $058B ; G 
__code_driver_terminal_input_tail = $058B ; G 
__code_driver_terminal_output_head = $058B ; G 
__code_driver_terminal_output_tail = $058B ; G 
__code_driver_tty_head          = $058B ; G 
__code_driver_tty_tail          = $058B ; G 
__code_error_head               = $058B ; G 
error_enolck_zc                 = $058D ; G error_enolck_zc
error_enolck_mc                 = $0593 ; G error_enolck_mc
errno_mc                        = $059D ; G errno_mc
error_enomem_zc                 = $05A7 ; G error_enomem_zc
error_enomem_mc                 = $05AD ; G error_enomem_mc
error_mc                        = $05B5 ; G error_mc
__ch_system                     = $05BE ; G page0
error_zc                        = $05BE ; G error_zc
error_einval_zc                 = $05C6 ; G error_einval_zc
error_einval_mc                 = $05CC ; G error_einval_mc
error_divide_by_zero_mc         = $05D2 ; G error_divide_by_zero_mc
error_edom_mc                   = $05D2 ; G error_edom_mc
error_znc                       = $05DA ; G error_znc
error_enotsup_zc                = $05E1 ; G error_enotsup_zc
error_enotsup_mc                = $05E7 ; G error_enotsup_mc
error_lzc                       = $05ED ; G error_lzc
error_lznc                      = $05F4 ; G error_lznc
error_ebdfd_zc                  = $05FB ; G error_ebdfd_zc
IOCTL_OTERM_GET_OTERM           = $0602 ; G page0
error_ebdfd_mc                  = $0602 ; G error_ebdfd_mc
__code_error_tail               = $0607 ; G 
__code_fcntl_head               = $0607 ; G 
asm_vioctl                      = $0607 ; G asm_vioctl
critical_section                = $0607 ; L asm_vioctl
find_driver_loop                = $0615 ; L asm_vioctl
deliver_message                 = $0625 ; L asm_vioctl
__bool                          = $0639 ; L asm_vioctl
__setf                          = $0640 ; L asm_vioctl
forward_ioctl                   = $064B ; L asm_vioctl
__getf                          = $0654 ; L asm_vioctl
asm_vioctl_driver               = $065F ; G asm_vioctl
__fcntl_fdchain_descend         = $067B ; G __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_2      = $0682 ; G __fcntl_fdstruct_from_fd_2
__fcntl_fdstruct_from_fd_1      = $068D ; G __fcntl_fdstruct_from_fd_1
__code_fcntl_tail               = $06A3 ; G 
__code_font_fzx_head            = $06A3 ; G 
__code_font_fzx_tail            = $06A3 ; G 
__code_fp_genmath_head          = $06A3 ; G 
__code_fp_genmath_tail          = $06A3 ; G 
__code_fp_math48_head           = $06A3 ; G 
__code_fp_math48_tail           = $06A3 ; G 
__code_input_head               = $06A3 ; G 
__code_input_tail               = $06A3 ; G 
__code_inttypes_head            = $06A3 ; G 
__code_inttypes_tail            = $06A3 ; G 
__code_l_head                   = $06A3 ; G 
l_jpix                          = $06A3 ; G l_jpix
__thread_block_timeout          = $06A6 ; G page0
__thread_context_switch         = $06A6 ; G page0
__thread_unblock                = $06A6 ; G page0
l_ret                           = $06A6 ; G l_ret
l_setmem_hl                     = $06C7 ; G l_setmem_hl
___sdcc_call_hl                 = $06C8 ; G ___sdcc_call_hl
l_jphl                          = $06C8 ; G l_jphl
l_valid_base                    = $06C9 ; G l_valid_base
l_neg_hl                        = $06D6 ; G l_neg_hl
l_num2char                      = $06DE ; G l_num2char
alpha                           = $06E5 ; L l_num2char
l_decu_dehl                     = $06E8 ; G l_decu_dehl
msw                             = $06EE ; L l_decu_dehl
limit                           = $06F4 ; L l_decu_dehl
__code_l_sccz80_head            = $06F9 ; G 
__code_l_sccz80_tail            = $06F9 ; G 
__code_l_sdcc_head              = $06F9 ; G 
__code_l_sdcc_tail              = $06F9 ; G 
__code_l_tail                   = $06F9 ; G 
__code_locale_head              = $06F9 ; G 
__code_locale_tail              = $06F9 ; G 
__code_math_head                = $06F9 ; G 
l_small_divu_16_16x16           = $06FA ; G l_small_divu_16_16x16
l0_small_divu_16_16x16          = $06FE ; G l_small_divu_16_16x16
IOCTL_OTERM_SCROLL              = $0702 ; G page0
divisor_sixteen_bit             = $0702 ; L l_small_divu_16_16x16
loop_16_0                       = $0708 ; L l_small_divu_16_16x16
loop_16_1                       = $0710 ; L l_small_divu_16_16x16
l_divu_16_16x8                  = $071A ; G l_divu_16_16x8
l_small_divu_16_16x8            = $071A ; G l_small_divu_16_16x16
l0_divu_16_16x8                 = $071E ; G l_divu_16_16x8
l0_small_divu_16_16x8           = $071E ; G l_small_divu_16_16x16
loop_8_0                        = $0722 ; L l_small_divu_16_16x16
loop_8_2                        = $0729 ; L l_small_divu_16_16x16
loop_8_1                        = $072B ; L l_small_divu_16_16x16
divide_zero                     = $0730 ; L l_small_divu_16_16x16
__code_math_tail                = $0734 ; G 
__code_network_head             = $0734 ; G 
__code_network_tail             = $0734 ; G 
__code_nirvanam_head            = $0734 ; G 
__code_nirvanam_tail            = $0734 ; G 
__code_nirvanap_head            = $0734 ; G 
__code_nirvanap_tail            = $0734 ; G 
__code_setjmp_head              = $0734 ; G 
__code_setjmp_tail              = $0734 ; G 
__code_sound_bit_head           = $0734 ; G 
__code_sound_bit_tail           = $0734 ; G 
__code_stdio_head               = $0734 ; G 
__stdio_nextarg_bc              = $0734 ; G __stdio_nextarg_bc
__code_stdio_tail               = $0739 ; G 
__code_stdlib_head              = $0739 ; G 
_itoa_callee                    = $0739 ; G itoa_callee
_utoa_callee                    = $0741 ; G utoa_callee
asm_exit                        = $0749 ; G asm_exit
asm0_exit                       = $074C ; G asm_exit
loop                            = $0758 ; L asm_exit
asm_itoa                        = $076A ; G asm_itoa
asm0_itoa                       = $076F ; G asm_itoa
asm_utoa                        = $078B ; G asm_utoa
asm0_utoa                       = $0790 ; G asm_utoa
asm1_utoa                       = $0796 ; G asm_utoa
compute_lp                      = $079D ; L asm_utoa
write_lp                        = $07AF ; L asm_utoa
__code_stdlib_tail              = $07B6 ; G 
__code_string_head              = $07B6 ; G 
_memset_callee                  = $07B6 ; G memset_callee
_strcmp_callee                  = $07BE ; G strcmp_callee
_strcasecmp_callee              = $07C4 ; G strcasecmp_callee
_stricmp_callee                 = $07C4 ; G stricmp_callee
_strlcpy_callee                 = $07CA ; G strlcpy_callee
_strncmp_callee                 = $07D2 ; G strncmp_callee
_strncasecmp_callee             = $07DA ; G strncasecmp_callee
_strnicmp_callee                = $07DA ; G strnicmp_callee
_strnlen_callee                 = $07E2 ; G strnlen_callee
asm_memset                      = $07E9 ; G asm_memset
asm_strcasecmp                  = $07FA ; G asm_strcasecmp
loop                            = $07FA ; L asm_strcasecmp
IOCTL_OTERM_FONT                = $0802 ; G page0
equal                           = $080B ; L asm_strcasecmp
different                       = $080F ; L asm_strcasecmp
asm_strcmp                      = $0812 ; G asm_strcmp
loop                            = $0812 ; L asm_strcmp
equal                           = $081B ; L asm_strcmp
different                       = $081F ; L asm_strcmp
asm_strlcpy                     = $0823 ; G asm_strlcpy
cpyloop                         = $0829 ; L asm_strlcpy
szexceeded0                     = $0831 ; L asm_strlcpy
szexceeded1                     = $0834 ; L asm_strlcpy
done                            = $083C ; L asm_strlcpy
_strlen_fastcall                = $0841 ; G strlen_fastcall
asm_strlen                      = $0841 ; G asm_strlen
asm_strncasecmp                 = $084C ; G asm_strncasecmp
loop                            = $084C ; L asm_strncasecmp
equal                           = $0865 ; L asm_strncasecmp
different                       = $0868 ; L asm_strncasecmp
asm_strncmp                     = $086C ; G asm_strncmp
loop                            = $0870 ; L asm_strncmp
equal                           = $087D ; L asm_strncmp
different                       = $0881 ; L asm_strncmp
asm_strnlen                     = $0885 ; G asm_strnlen
notend                          = $0892 ; L asm_strnlen
__code_string_tail              = $0895 ; G 
__code_temp_sp1_head            = $0895 ; G 
__code_temp_sp1_tail            = $0895 ; G 
__code_threads_head             = $0895 ; G 
__code_threads_mutex_head       = $0895 ; G 
__code_threads_tail             = $0895 ; G 
asm_mtx_init                    = $0895 ; G asm_mtx_init
unknown_type                    = $08AF ; L asm_mtx_init
__code_threads_mutex_tail       = $08B4 ; G 
__code_z80_head                 = $08B4 ; G 
asm_z80_pop_registers           = $08B4 ; G asm_z80_pop_registers
asm_z80_push_registers          = $08C5 ; G asm_z80_push_registers
_Error_Set__fast                = $08D5 ; G zcc23D03
__code_compiler_head            = $08D5 ; G 
__code_lib_head                 = $08D5 ; G 
__code_lib_tail                 = $08D5 ; G 
__code_z80_tail                 = $08D5 ; G 
_Error_Get                      = $08E1 ; G zcc23D03
_Heap_Construct__fast           = $08EA ; G zcc23D04
_Heap_Alloc                     = $08F0 ; G zcc23D04
l_Heap_Alloc_00109              = $0906 ; L zcc23D04
l_Heap_Alloc_00102              = $090B ; L zcc23D04
l_Heap_Alloc_00103              = $0914 ; L zcc23D04
_Heap_Free                      = $0917 ; G zcc23D04
l_Heap_Free_00103               = $0936 ; L zcc23D04
_Thread_Construct               = $0939 ; G zcc23D05
_Thread_GetCurrent              = $094D ; G zcc23D05
_Thread_GetId                   = $0951 ; G zcc23D05
_Thread_GetHeap__fast           = $0953 ; G zcc23D05
_Thread_Alloc__fast             = $095B ; G zcc23D05
l_Thread_Alloc__fast_00102      = $0966 ; L zcc23D05
l_Thread_Alloc__fast_00103      = $0970 ; L zcc23D05
_Thread_Free__fast              = $0971 ; G zcc23D05
_Async_IsComplete__fast         = $097F ; G zcc23D06
l_Async_IsComplete__fast_00103  = $098B ; L zcc23D06
l_Async_IsComplete__fast_00104  = $098E ; L zcc23D06
_asyncState_None                = $098F ; G zcc23D06
_asyncState_Pending             = $0990 ; G zcc23D06
_asyncState_Completed           = $0991 ; G zcc23D06
_asyncState_CompletedSync       = $0992 ; G zcc23D06
_AsyncResult_size               = $0993 ; G zcc23D06
_Async_Wait__fast               = $0994 ; G zcc23D06
_String_Copy                    = $0997 ; G zcc23D07
l_String_Copy_00102             = $09B2 ; L zcc23D07
l_String_Copy_00104             = $09C5 ; L zcc23D07
l_String_Copy_00106             = $09D8 ; L zcc23D07
l_String_Copy_00107             = $09F0 ; L zcc23D07
_String_Compare                 = $09F3 ; G zcc23D07
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G page0
l_String_Compare_00102          = $0A0E ; L zcc23D07
l_String_Compare_00104          = $0A21 ; L zcc23D07
l_String_Compare_00106          = $0A3C ; L zcc23D07
l_String_Compare_00107          = $0A54 ; L zcc23D07
_String_CompareExact            = $0A57 ; G zcc23D07
l_String_CompareExact_00102     = $0A72 ; L zcc23D07
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G page0
l_String_CompareExact_00104     = $0A85 ; L zcc23D07
l_String_CompareExact_00106     = $0AA0 ; L zcc23D07
l_String_CompareExact_00107     = $0AB8 ; L zcc23D07
_String_GetLength               = $0ABB ; G zcc23D07
l_String_GetLength_00102        = $0AD6 ; L zcc23D07
l_String_GetLength_00104        = $0AE9 ; L zcc23D07
l_String_GetLength_00105        = $0AFA ; L zcc23D07
_System_DebugConsole_Log__fast  = $0AFD ; G zcc23D08
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G page0
l_System_DebugConsole_Log__fast_00103 = $0B03 ; L zcc23D08
l_System_DebugConsole_Log__fast_00106 = $0B0F ; L zcc23D08
_System_DebugConsole_LogAssertFailed = $0B10 ; G zcc23D08
___str_0                        = $0B51 ; L zcc23D08
___str_1                        = $0B6C ; L zcc23D08
_StreamProvider_Construct       = $0B77 ; G zcc23D09
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G page0
l_StreamProvider_Construct_00103 = $0B8D ; L zcc23D09
l_StreamProvider_Construct_00104 = $0B8F ; L zcc23D09
_Stream_Construct__fast         = $0B92 ; G zcc23D09
_Stream_Open                    = $0BA3 ; G zcc23D09
l_Stream_Open_00102             = $0BD2 ; L zcc23D09
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G page0
l_Stream_Open_00104             = $0C19 ; L zcc23D09
l_Stream_Open_00105             = $0C1B ; L zcc23D09
_Stream_Close__fast             = $0C1E ; G zcc23D09
l_Stream_Close__fast_00102      = $0C29 ; L zcc23D09
l_Stream_Close__fast_00104      = $0C39 ; L zcc23D09
l_Stream_Close__fast_00106      = $0C4D ; L zcc23D09
l_Stream_Close__fast_00107      = $0C55 ; L zcc23D09
_Stream_Read                    = $0C56 ; G zcc23D09
l_Stream_Read_00102             = $0C72 ; L zcc23D09
l_Stream_Read_00104             = $0C90 ; L zcc23D09
l_Stream_Read_00106             = $0CA7 ; L zcc23D09
l_Stream_Read_00108             = $0CCA ; L zcc23D09
l_Stream_Read_00109             = $0CE1 ; L zcc23D09
_Stream_Write                   = $0CE6 ; G zcc23D09
l_Stream_Write_00102            = $0CFD ; L zcc23D09
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G page0
l_Stream_Write_00104            = $0D10 ; L zcc23D09
l_Stream_Write_00106            = $0D2E ; L zcc23D09
l_Stream_Write_00108            = $0D45 ; L zcc23D09
l_Stream_Write_00110            = $0D68 ; L zcc23D09
l_Stream_Write_00111            = $0D7F ; L zcc23D09
_Stream_HasFlags                = $0D84 ; G zcc23D09
l_Stream_HasFlags_00103         = $0D9E ; L zcc23D09
l_Stream_HasFlags_00104         = $0DA1 ; L zcc23D09
_StreamReader_TryReadByte       = $0DA4 ; G zcc23D010
l_StreamReader_TryReadByte_00103 = $0DCD ; L zcc23D010
l_StreamReader_TryReadByte_00104 = $0DD0 ; L zcc23D010
_GetByte__fast                  = $0DD3 ; G zcc23D010
l_GetByte__fast_00101           = $0DE2 ; L zcc23D010
l_GetByte__fast_00103           = $0DFF ; L zcc23D010
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G page0
_StreamReader_ReadLine          = $0E06 ; G zcc23D010
l_StreamReader_ReadLine_00102   = $0E19 ; L zcc23D010
l_StreamReader_ReadLine_00103   = $0E29 ; L zcc23D010
l_StreamReader_ReadLine_00117   = $0E35 ; L zcc23D010
l_StreamReader_ReadLine_00107   = $0E38 ; L zcc23D010
l_StreamReader_ReadLine_00109   = $0E72 ; L zcc23D010
_StreamWriter_Write             = $0E78 ; G zcc23D011
l_StreamWriter_Write_00102      = $0E95 ; L zcc23D011
l_StreamWriter_Write_00104      = $0EA9 ; L zcc23D011
l_StreamWriter_Write_00106      = $0EBC ; L zcc23D011
l_StreamWriter_Write_00111      = $0EE2 ; L zcc23D011
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G page0
l_StreamWriter_Write_00110      = $0F26 ; L zcc23D011
l_StreamWriter_Write_00113      = $0F2B ; L zcc23D011
l_StreamWriter_Write_00114      = $0F2D ; L zcc23D011
_StreamWriter_WriteLine         = $0F32 ; G zcc23D011
_ConsoleStreamProvider_CanProvide = $0F70 ; G zcc23D012
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G page0
l_ConsoleStreamProvider_CanProvide_00102 = $0F98 ; L zcc23D012
l_ConsoleStreamProvider_CanProvide_00103 = $0F9B ; L zcc23D012
_ConsoleStreamProvider_size     = $0F9E ; G zcc23D012
_ConsoleStream_size             = $0F9F ; L zcc23D012
_ConsoleStreamProvider_TryOpenStream = $0FA0 ; G zcc23D012
l_ConsoleStreamProvider_TryOpenStream_00102 = $0FB5 ; L zcc23D012
l_ConsoleStreamProvider_TryOpenStream_00103 = $0FCA ; L zcc23D012
_ConsoleStreamProvider_BeginReadStream = $0FCD ; G zcc23D012
l_ConsoleStreamProvider_BeginReadStream_00102 = $0FF2 ; L zcc23D012
l_ConsoleStreamProvider_BeginReadStream_00104 = $1006 ; L zcc23D012
l_ConsoleStreamProvider_BeginReadStream_00122 = $101A ; L zcc23D012
l_ConsoleStreamProvider_BeginReadStream_00112 = $101C ; L zcc23D012
l_ConsoleStreamProvider_BeginReadStream_00109 = $1069 ; L zcc23D012
l_ConsoleStreamProvider_BeginReadStream_00114 = $1095 ; L zcc23D012
_ConsoleStreamProvider_EndReadStream = $109A ; G zcc23D012
l_ConsoleStreamProvider_EndReadStream_00102 = $10B5 ; L zcc23D012
l_ConsoleStreamProvider_EndReadStream_00104 = $10C8 ; L zcc23D012
l_ConsoleStreamProvider_EndReadStream_00121 = $10D7 ; L zcc23D012
l_ConsoleStreamProvider_EndReadStream_00106 = $10E2 ; L zcc23D012
l_ConsoleStreamProvider_EndReadStream_00107 = $10E5 ; L zcc23D012
_ConsoleStreamProvider_BeginWriteStream = $10E8 ; G zcc23D012
l_ConsoleStreamProvider_BeginWriteStream_00102 = $1104 ; L zcc23D012
__code_compiler_size            = $1113 ; G 
l_ConsoleStreamProvider_BeginWriteStream_00104 = $1117 ; L zcc23D012
l_ConsoleStreamProvider_BeginWriteStream_00117 = $112A ; L zcc23D012
l_ConsoleStreamProvider_BeginWriteStream_00109 = $112D ; L zcc23D012
l_ConsoleStreamProvider_BeginWriteStream_00107 = $1148 ; L zcc23D012
l_ConsoleStreamProvider_BeginWriteStream_00111 = $117B ; L zcc23D012
_ConsoleStreamProvider_EndWriteStream = $117E ; G zcc23D012
l_ConsoleStreamProvider_EndWriteStream_00102 = $1199 ; L zcc23D012
l_ConsoleStreamProvider_EndWriteStream_00104 = $11AC ; L zcc23D012
l_ConsoleStreamProvider_EndWriteStream_00121 = $11BB ; L zcc23D012
l_ConsoleStreamProvider_EndWriteStream_00106 = $11C6 ; L zcc23D012
l_ConsoleStreamProvider_EndWriteStream_00107 = $11C9 ; L zcc23D012
_ConsoleStreamProvider_Construct__fast = $11CC ; G zcc23D012
l_ConsoleStreamProvider_Construct__fast_00102 = $11DD ; L zcc23D012
l_ConsoleStreamProvider_Construct__fast_00103 = $122F ; L zcc23D012
_KeyBoard_OnKey__isr            = $1230 ; G zcc23D012
l_KeyBoard_OnKey__isr_00104     = $1244 ; L zcc23D012
l_KeyBoard_OnKey__isr_00106     = $1250 ; L zcc23D012
l_KeyBoard_OnKey__isr_00108     = $125C ; L zcc23D012
l_KeyBoard_OnKey__isr_00110     = $1268 ; L zcc23D012
l_KeyBoard_OnKey__isr_00113     = $1273 ; L zcc23D012
_RingBuffer_Construct           = $1274 ; G zcc23D013
l_RingBuffer_Construct_00102    = $128D ; L zcc23D013
l_RingBuffer_Construct_00103    = $1296 ; L zcc23D013
_RingBuffer_size                = $1299 ; G zcc23D013
_RingBuffer_MaxCapacity         = $129B ; G zcc23D013
_RingBuffer_GetCount            = $129D ; G zcc23D013
_RingBuffer_IsFull              = $12B7 ; G zcc23D013
l_RingBuffer_IsFull_00103       = $12DD ; L zcc23D013
l_RingBuffer_IsFull_00104       = $12E0 ; L zcc23D013
_RingBuffer_IsEmpty             = $12E3 ; G zcc23D013
l_RingBuffer_IsEmpty_00103      = $12FF ; L zcc23D013
l_RingBuffer_IsEmpty_00104      = $1302 ; L zcc23D013
_RingBuffer_Read                = $1305 ; G zcc23D013
_RingBuffer_Peek                = $132B ; G zcc23D013
_RingBuffer_Write               = $1346 ; G zcc23D013
_RingBuffer_Clear               = $1369 ; G zcc23D013
_StringBuilder_Construct        = $137F ; G zcc23D014
l_StringBuilder_Construct_00102 = $139A ; L zcc23D014
l_StringBuilder_Construct_00104 = $13B2 ; L zcc23D014
l_StringBuilder_Construct_00105 = $13D9 ; L zcc23D014
_StringBuilder_AppendString     = $13DE ; G zcc23D014
l_StringBuilder_AppendString_00102 = $13F4 ; L zcc23D014
l_StringBuilder_AppendString_00104 = $1401 ; L zcc23D014
l_StringBuilder_AppendString_00106 = $1431 ; L zcc23D014
l_StringBuilder_AppendString_00107 = $1463 ; L zcc23D014
_StringBuilder_AppendChar       = $1468 ; G zcc23D014
l_StringBuilder_AppendChar_00102 = $147E ; L zcc23D014
l_StringBuilder_AppendChar_00104 = $14A4 ; L zcc23D014
l_StringBuilder_AppendChar_00105 = $14D1 ; L zcc23D014
_StringBuilder_AppendUint8      = $14D6 ; G zcc23D014
l_StringBuilder_AppendUint8_00102 = $14ED ; L zcc23D014
l_StringBuilder_AppendUint8_00104 = $1513 ; L zcc23D014
l_StringBuilder_AppendUint8_00105 = $1567 ; L zcc23D014
_StringBuilder_AppendUint16     = $156C ; G zcc23D014
l_StringBuilder_AppendUint16_00102 = $1582 ; L zcc23D014
l_StringBuilder_AppendUint16_00104 = $15A8 ; L zcc23D014
l_StringBuilder_AppendUint16_00105 = $15F2 ; L zcc23D014
_OpenConsole                    = $15F7 ; G zcc23D015
_ReadLineInto                   = $1608 ; G zcc23D015
_Monitor_Start                  = $1636 ; G zcc23D015
l_Monitor_Start_00106           = $1651 ; L zcc23D015
l_Monitor_Start_00108           = $16A5 ; L zcc23D015
___str_0                        = $16A8 ; L zcc23D015
_PrintLogo                      = $16AD ; G zcc23D016
_MaxCommandLength               = $16CF ; L zcc23D016
___str_0                        = $16D0 ; L zcc23D016
_ExecuteDump                    = $16E2 ; G zcc23D016
_ExecuteHelp                    = $16ED ; G zcc23D016
___str_1                        = $173D ; L zcc23D016
___str_2                        = $1756 ; L zcc23D016
___str_3                        = $177E ; L zcc23D016
_ExecuteReg                     = $17A9 ; G zcc23D016
_ExecuteCommand                 = $17B4 ; G zcc23D016
l_ExecuteCommand_00112          = $17CE ; L zcc23D016
l_ExecuteCommand_00101          = $17D6 ; L zcc23D016
l_ExecuteCommand_00102          = $17EB ; L zcc23D016
l_ExecuteCommand_00103          = $17F8 ; L zcc23D016
l_ExecuteCommand_00104          = $180D ; L zcc23D016
l_ExecuteCommand_00105          = $1811 ; L zcc23D016
l_ExecuteCommand_00106          = $1813 ; L zcc23D016
_Dispatch                       = $1816 ; G zcc23D016
l_Dispatch_00103                = $182B ; L zcc23D016
l_Dispatch_00102                = $1895 ; L zcc23D016
l_Dispatch_00105                = $18A0 ; L zcc23D016
l_Dispatch_00106                = $18B9 ; L zcc23D016
___str_4                        = $18BE ; L zcc23D016
_init                           = $18D1 ; G zcc23D017
_main                           = $18D7 ; G zcc23D017
l_main_00102                    = $18DA ; L zcc23D017
_HasKey                         = $18E5 ; G zcc23D018
l_HasKey_00102                  = $18FF ; L zcc23D018
l_HasKey_00103                  = $1901 ; L zcc23D018
_Task1_Execute                  = $1902 ; G zcc23D018
l_Task1_Execute_00101           = $1919 ; L zcc23D018
l_Task1_Execute_00106           = $1929 ; L zcc23D018
l_Task1_Execute_00102           = $192F ; L zcc23D018
l_Task1_Execute_00104           = $1939 ; L zcc23D018
l_Task1_Execute_00108           = $1941 ; L zcc23D018
l_Task1_Execute_00109           = $1949 ; L zcc23D018
_CountDown2                     = $194A ; G zcc23D019
l_CountDown2_00102              = $195F ; L zcc23D019
l_CountDown2_00103              = $1961 ; L zcc23D019
_Task2_Execute                  = $1962 ; G zcc23D019
l_Task2_Execute_00106           = $1979 ; L zcc23D019
l_Task2_Execute_00102           = $197F ; L zcc23D019
l_Task2_Execute_00104           = $1989 ; L zcc23D019
l_Task2_Execute_00108           = $1990 ; L zcc23D019
l_Task2_Execute_00109           = $1998 ; L zcc23D019
_CountDown3                     = $1999 ; G zcc23D020
l_CountDown3_00102              = $19AE ; L zcc23D020
l_CountDown3_00103              = $19B0 ; L zcc23D020
_Task3_Execute                  = $19B1 ; G zcc23D020
l_Task3_Execute_00106           = $19C8 ; L zcc23D020
l_Task3_Execute_00102           = $19CE ; L zcc23D020
l_Task3_Execute_00104           = $19D8 ; L zcc23D020
l_Task3_Execute_00108           = $19DF ; L zcc23D020
l_Task3_Execute_00109           = $19E7 ; L zcc23D020
__code_compiler_tail            = $19E8 ; G 
__code_user_head                = $19E8 ; G 
__code_user_tail                = $19E8 ; G 
__rodata_clib_head              = $19E8 ; G 
__rodata_clib_tail              = $19E8 ; G 
__rodata_driver_head            = $19E8 ; G 
__rodata_driver_tail            = $19E8 ; G 
__rodata_error_strings_head     = $19E8 ; G 
__rodata_font_head              = $19E8 ; G 
__rodata_font_tail              = $19E8 ; G 
__rodata_error_string_end_head  = $1A16 ; G 
__rodata_error_strings_tail     = $1A16 ; G 
_NewLineChar                    = $1A17 ; G zcc23D02
__rodata_compiler_head          = $1A17 ; G 
__rodata_error_string_end_tail  = $1A17 ; G 
__rodata_fcntl_head             = $1A17 ; G 
__rodata_fcntl_tail             = $1A17 ; G 
__rodata_font_4x8_head          = $1A17 ; G 
__rodata_font_4x8_tail          = $1A17 ; G 
__rodata_font_8x8_head          = $1A17 ; G 
__rodata_font_8x8_tail          = $1A17 ; G 
__rodata_font_fzx_head          = $1A17 ; G 
__rodata_font_fzx_tail          = $1A17 ; G 
__rodata_input_head             = $1A17 ; G 
__rodata_input_tail             = $1A17 ; G 
__rodata_lib_head               = $1A17 ; G 
__rodata_lib_tail               = $1A17 ; G 
__rodata_sound_bit_head         = $1A17 ; G 
__rodata_sound_bit_tail         = $1A17 ; G 
__rodata_stdio_head             = $1A17 ; G 
__rodata_stdio_tail             = $1A17 ; G 
__rodata_stdlib_head            = $1A17 ; G 
__rodata_stdlib_tail            = $1A17 ; G 
_CarriageReturnChar             = $1A18 ; G zcc23D02
_SmallArray8_size               = $1A19 ; G zcc23D02
_SmallArray8_MaxCapacity        = $1A1A ; G zcc23D02
_Array8_size                    = $1A1B ; G zcc23D02
_Array8_MaxCapacity             = $1A1C ; G zcc23D02
_Collection8_size               = $1A1E ; G zcc23D02
_Collection8_MaxCapacity        = $1A1F ; G zcc23D02
___str_0                        = $1A21 ; L zcc23D02
___str_0                        = $1A24 ; L zcc23D012
___str_5                        = $1A28 ; L zcc23D016
___str_6                        = $1A2D ; L zcc23D016
___str_7                        = $1A32 ; L zcc23D016
___str_8                        = $1A36 ; L zcc23D016
__CODE_END_head                 = $1A3B ; G 
__CODE_END_tail                 = $1A3B ; G 
__DATA_head                     = $1A3B ; G 
__rodata_compiler_tail          = $1A3B ; G 
__rodata_user_head              = $1A3B ; G 
__rodata_user_tail              = $1A3B ; G 
__DATA_tail                     = $1A3C ; G 
__data_alloc_balloc_head        = $1A3C ; G 
__data_alloc_balloc_tail        = $1A3C ; G 
__data_alloc_malloc_head        = $1A3C ; G 
__data_clib_head                = $1A3C ; G 
__data_clib_tail                = $1A3C ; G 
__data_driver_head              = $1A3C ; G 
__data_driver_tail              = $1A3C ; G 
__data_font_head                = $1A3C ; G 
__data_font_tail                = $1A3C ; G 
__malloc_heap                   = $1A3C ; G page0
__smc_clib_head                 = $1A3C ; G 
__smc_clib_tail                 = $1A3C ; G 
__smc_compiler_head             = $1A3C ; G 
__smc_compiler_tail             = $1A3C ; G 
__smc_driver_head               = $1A3C ; G 
__smc_driver_tail               = $1A3C ; G 
__smc_fcntl_head                = $1A3C ; G 
__smc_fcntl_tail                = $1A3C ; G 
__smc_font_head                 = $1A3C ; G 
__smc_font_tail                 = $1A3C ; G 
__smc_l_head                    = $1A3C ; G 
__smc_l_tail                    = $1A3C ; G 
__smc_lib_head                  = $1A3C ; G 
__smc_lib_tail                  = $1A3C ; G 
__smc_sound_bit_head            = $1A3C ; G 
__smc_sound_bit_tail            = $1A3C ; G 
__smc_user_head                 = $1A3C ; G 
__smc_user_tail                 = $1A3C ; G 
__data_alloc_malloc_tail        = $1A3E ; G 
__data_fcntl_head               = $1A3E ; G 
__stdio_heap                    = $1A3E ; G page0
__data_fcntl_stdio_heap_head_head = $1A40 ; G 
__data_fcntl_tail               = $1A40 ; G 
__stdio_block                   = $1A40 ; L page0
__data_fcntl_stdio_heap_body_head = $1A46 ; G 
__data_fcntl_stdio_heap_head_tail = $1A46 ; G 
__i_fcntl_heap_0                = $1A46 ; L page0
__i_fcntl_fdstruct_0            = $1A4C ; L page0
__i_fcntl_heap_1                = $1A5D ; L page0
__i_fcntl_fdstruct_1            = $1A63 ; L page0
__i_fcntl_fdstruct_2            = $1A63 ; L page0
__i_fcntl_heap_2                = $1A74 ; L page0
__data_fcntl_stdio_heap_body_tail = $1ABE ; G 
__data_fcntl_stdio_heap_tail_head = $1ABE ; G 
__i_fcntl_heap_3                = $1ABE ; L page0
__data_fcntl_fdtable_body_head  = $1AC0 ; G 
__data_fcntl_stdio_heap_tail_tail = $1AC0 ; G 
__fcntl_fdtbl                   = $1AC0 ; G page0
__data_fcntl_fdtable_body_tail  = $1AC6 ; G 
__data_sound_bit_head           = $1AC6 ; G 
__data_sound_bit_tail           = $1AC6 ; G 
__data_stdio_head               = $1AC6 ; G 
_stdin                          = $1AC6 ; G page0
__i_stdio_file_0                = $1AC8 ; L page0
_stdout                         = $1AD7 ; G page0
__i_stdio_file_1                = $1AD9 ; L page0
_stderr                         = $1AE8 ; G page0
__i_stdio_file_2                = $1AEA ; L page0
__stdio_open_file_list          = $1AF9 ; G page0
__stdio_closed_file_list        = $1AFB ; G page0
__data_stdio_tail               = $1AFF ; G 
__data_stdlib_head              = $1AFF ; G 
__data_stdlib_tail              = $1AFF ; G 
__data_threads_head             = $1AFF ; G 
__thrd_id                       = $1AFF ; G page0
_EndOfLine                      = $1B00 ; G zcc23D02
__data_compiler_head            = $1B00 ; G 
__data_lib_head                 = $1B00 ; G 
__data_lib_tail                 = $1B00 ; G 
__data_threads_tail             = $1B00 ; G 
_ConsoleProtocol                = $1B02 ; G zcc23D012
_Commands                       = $1B04 ; L zcc23D016
__task                          = $1B0E ; L zcc23D018
__task                          = $1B10 ; L zcc23D019
_count                          = $1B12 ; L zcc23D019
__task                          = $1B14 ; L zcc23D020
_count                          = $1B16 ; L zcc23D020
__BSS_head                      = $1B18 ; G 
__DATA_END_head                 = $1B18 ; G 
__DATA_END_tail                 = $1B18 ; G 
__data_compiler_tail            = $1B18 ; G 
__data_user_head                = $1B18 ; G 
__data_user_tail                = $1B18 ; G 
__BSS_UNINITIALIZED_head        = $1B19 ; G 
__BSS_UNINITIALIZED_tail        = $1B19 ; G 
__BSS_tail                      = $1B19 ; G 
__bss_alloc_balloc_head         = $1B19 ; G 
__bss_alloc_balloc_tail         = $1B19 ; G 
__bss_alloc_malloc_head         = $1B19 ; G 
__bss_alloc_malloc_tail         = $1B19 ; G 
__bss_arch_head                 = $1B19 ; G 
__bss_arch_tail                 = $1B19 ; G 
__bss_clib_head                 = $1B19 ; G 
__bss_clib_tail                 = $1B19 ; G 
__bss_compress_aplib_head       = $1B19 ; G 
__bss_compress_aplib_tail       = $1B19 ; G 
__bss_driver_head               = $1B19 ; G 
__bss_driver_tail               = $1B19 ; G 
__bss_error_head                = $1B19 ; G 
__bss_font_head                 = $1B19 ; G 
__bss_font_tail                 = $1B19 ; G 
_errno                          = $1B19 ; G _errno
__bss_error_tail                = $1B1B ; G 
__bss_fcntl_head                = $1B1B ; G 
__bss_fcntl_tail                = $1B1B ; G 
__bss_input_head                = $1B1B ; G 
__bss_input_tail                = $1B1B ; G 
__bss_sound_bit_head            = $1B1B ; G 
__bss_sound_bit_tail            = $1B1B ; G 
__bss_stdio_head                = $1B1B ; G 
__bss_stdio_tail                = $1B1B ; G 
__bss_stdlib_head               = $1B1B ; G 
__exit_stack                    = $1B1B ; G page0
__quickexit_stack               = $1B20 ; G page0
__bss_compiler_head             = $1B21 ; G 
__bss_lib_head                  = $1B21 ; G 
__bss_lib_tail                  = $1B21 ; G 
__bss_stdlib_tail               = $1B21 ; G 
__bss_string_head               = $1B21 ; G 
__bss_string_tail               = $1B21 ; G 
_crt_heap                       = $1B21 ; G zcc23D04
_CurrentThread                  = $1B22 ; L zcc23D05
_ConsoleStreamProvider          = $1B27 ; L zcc23D09
_DebugConsole                   = $1B29 ; L zcc23D012
_consoleAsyncResult             = $1B2B ; L zcc23D012
_Console                        = $1B2E ; L zcc23D015
_Console                        = $1B30 ; L zcc23D018
_Key                            = $1B32 ; L zcc23D018
__BSS_END_head                  = $1B33 ; G 
__BSS_END_tail                  = $1B33 ; G 
__IGNORE_head                   = $1B33 ; G 
__IGNORE_tail                   = $1B33 ; G 
__bss_compiler_tail             = $1B33 ; G 
__bss_user_head                 = $1B33 ; G 
__bss_user_tail                 = $1B33 ; G 
__size                          = $1B33 ; G 
__tail                          = $1B33 ; G 
IOCTL_ITERM_CAPS                = $C009 ; G page0
IOCTL_ITERM_COOK                = $C011 ; G page0
IOCTL_OTERM_CRLF                = $C012 ; G page0
IOCTL_OCHAR_CRLF                = $C014 ; G page0
IOCTL_ITERM_LINE                = $C021 ; G page0
IOCTL_OTERM_COOK                = $C022 ; G page0
IOCTL_ITERM_PASS                = $C041 ; G page0
IOCTL_OTERM_PAUSE               = $C042 ; G page0
IOCTL_ITERM_ECHO                = $C081 ; G page0
IOCTL_OTERM_PAGE                = $C082 ; G page0
IOCTL_ITERM_CRLF                = $C101 ; G page0
IOCTL_OTERM_BELL                = $C102 ; G page0
IOCTL_ICHAR_CRLF                = $C103 ; G page0
IOCTL_ITERM_CURS                = $C201 ; G page0
IOCTL_OTERM_SIGNAL              = $C202 ; G page0
IOCTL_OTERM_CLEAR               = $E002 ; G page0
DEF__crt_on_exit                = $10001 ; L page0
