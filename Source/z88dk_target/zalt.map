TAR__clib_malloc_heap_size      = $FFFFFFFF ; L page0
__clib_malloc_heap_size         = $FFFFFFFF ; L page0
CLIB_OPT_STDIO                  = $0000 ; L page0
DEF__crt_enable_eidi            = $0000 ; L page0
DEF__crt_include_preamble       = $0000 ; L page0
IOCTL_RESET                     = $0000 ; G page0
STDIO_SEEK_SET                  = $0000 ; G page0
TAR__clib_balloc_table_size     = $0000 ; L page0
TAR__clib_fopen_max             = $0000 ; L page0
TAR__clib_open_max              = $0000 ; L page0
TAR__clib_quickexit_stack_size  = $0000 ; L page0
TAR__crt_enable_commandline     = $0000 ; L page0
TAR__crt_enable_nmi             = $0000 ; L page0
TAR__crt_enable_restart         = $0000 ; L page0
TAR__crt_enable_rst             = $0000 ; L page0
TAR__crt_initialize_bss         = $0000 ; L page0
TAR__crt_model                  = $0000 ; L page0
TAR__crt_org_bss                = $0000 ; L page0
TAR__crt_org_code               = $0000 ; L page0
TAR__crt_org_data               = $0000 ; L page0
TAR__register_sp                = $0000 ; L page0
__BSS_END_size                  = $0000 ; G 
__BSS_UNINITIALIZED_size        = $0000 ; G 
__CLIB_OPT_FASTCOPY             = $0000 ; L asm_memset
__CLIB_OPT_IMATH                = $0000 ; L l_divu_16_16x8
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm_vioctl
__CLIB_OPT_MULTITHREAD          = $0000 ; L free_fastcall
__CLIB_OPT_MULTITHREAD          = $0000 ; L malloc_fastcall
__CLIB_OPT_NUM2TXT              = $0000 ; L asm_utoa
__CODE_END_size                 = $0000 ; G 
__CODE_head                     = $0000 ; G 
__CRTDEF                        = $0000 ; L page0
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G page0
__IGNORE_size                   = $0000 ; G 
__MMAP                          = $0000 ; L page0
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_stdio_size                = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L page0
__clib_fopen_max                = $0000 ; L page0
__clib_open_max                 = $0000 ; L page0
__clib_quickexit_stack_size     = $0000 ; L page0
__code_adt_b_array_size         = $0000 ; G 
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_forward_list_size  = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_arch_size                = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_common_size          = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_terminal_input_size = $0000 ; G 
__code_driver_terminal_output_size = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_fp_math48_size           = $0000 ; G 
__code_input_size               = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sccz80_size            = $0000 ; G 
__code_l_sdcc_size              = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_sound_bit_size           = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_user_size                = $0000 ; G 
__code_z80_size                 = $0000 ; G 
__crt_enable_restart            = $0000 ; L page0
__crt_initialize_bss            = $0000 ; L page0
__crt_model                     = $0000 ; L page0
__crt_org_bss                   = $0000 ; L page0
__crt_org_code                  = $0000 ; L page0
__crt_org_data                  = $0000 ; L page0
__data_alloc_balloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_sound_bit_size           = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G page0
__rodata_clib_size              = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_4x8_size          = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_input_size             = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_stdlib_size            = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
__zalt_lib_size                 = $0000 ; G 
startup                         = $0000 ; L page0
thrd_success                    = $0000 ; G page0
DEFINED_CLIB_OPT_STDIO          = $0001 ; L page0
DEFINED_Z88DK_USES_SDCC         = $0001 ; L page0
STDIO_MSG_PUTC                  = $0001 ; G page0
STDIO_SEEK_CUR                  = $0001 ; G page0
TAR__crt_enable_close           = $0001 ; L page0
Z88DK_USES_SDCC                 = $0001 ; L page0
_CLIB_CFG_ASM_                  = $0001 ; L asm_memset
_CLIB_CFG_ASM_                  = $0001 ; L asm_utoa
_CLIB_CFG_ASM_                  = $0001 ; L asm_vioctl
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_getc
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_read
_CLIB_CFG_ASM_                  = $0001 ; L character_00_output_ochar_putc_bin
_CLIB_CFG_ASM_                  = $0001 ; L console_01_input_terminal_fdriver
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_edom_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_einval_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_einval_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enomem_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enomem_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_zc
_CLIB_CFG_ASM_                  = $0001 ; L free_fastcall
_CLIB_CFG_ASM_                  = $0001 ; L l_divu_16_16x8
_CLIB_CFG_ASM_                  = $0001 ; L malloc_fastcall
__BSS_size                      = $0001 ; G 
__CLIB_OPT_ERROR                = $0001 ; L error_ebdfd_mc
__CLIB_OPT_ERROR                = $0001 ; L error_ebdfd_zc
__CLIB_OPT_ERROR                = $0001 ; L error_edom_mc
__CLIB_OPT_ERROR                = $0001 ; L error_einval_mc
__CLIB_OPT_ERROR                = $0001 ; L error_einval_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enolck_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enolck_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enomem_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enomem_zc
__CLIB_OPT_ERROR                = $0001 ; L error_enotsup_mc
__CLIB_OPT_ERROR                = $0001 ; L error_enotsup_zc
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G page0
__SDCC                          = $0001 ; L __stdio_nextarg_bc
__SDCC                          = $0001 ; L asm_memset
__SDCC                          = $0001 ; L asm_utoa
__SDCC                          = $0001 ; L asm_vioctl
__SDCC                          = $0001 ; L character_00_input_stdio_msg_getc
__SDCC                          = $0001 ; L character_00_input_stdio_msg_read
__SDCC                          = $0001 ; L character_00_output_ochar_putc_bin
__SDCC                          = $0001 ; L console_01_input_terminal_fdriver
__SDCC                          = $0001 ; L error_ebdfd_mc
__SDCC                          = $0001 ; L error_ebdfd_zc
__SDCC                          = $0001 ; L error_edom_mc
__SDCC                          = $0001 ; L error_einval_mc
__SDCC                          = $0001 ; L error_einval_zc
__SDCC                          = $0001 ; L error_enolck_mc
__SDCC                          = $0001 ; L error_enolck_zc
__SDCC                          = $0001 ; L error_enomem_mc
__SDCC                          = $0001 ; L error_enomem_zc
__SDCC                          = $0001 ; L error_enotsup_mc
__SDCC                          = $0001 ; L error_enotsup_zc
__SDCC                          = $0001 ; L free_fastcall
__SDCC                          = $0001 ; L l_divu_16_16x8
__SDCC                          = $0001 ; L malloc_fastcall
__SDCC_IY                       = $0001 ; L __stdio_nextarg_bc
__SDCC_IY                       = $0001 ; L asm_memset
__SDCC_IY                       = $0001 ; L asm_utoa
__SDCC_IY                       = $0001 ; L asm_vioctl
__SDCC_IY                       = $0001 ; L character_00_input_stdio_msg_getc
__SDCC_IY                       = $0001 ; L character_00_input_stdio_msg_read
__SDCC_IY                       = $0001 ; L character_00_output_ochar_putc_bin
__SDCC_IY                       = $0001 ; L console_01_input_terminal_fdriver
__SDCC_IY                       = $0001 ; L error_ebdfd_mc
__SDCC_IY                       = $0001 ; L error_ebdfd_zc
__SDCC_IY                       = $0001 ; L error_edom_mc
__SDCC_IY                       = $0001 ; L error_einval_mc
__SDCC_IY                       = $0001 ; L error_einval_zc
__SDCC_IY                       = $0001 ; L error_enolck_mc
__SDCC_IY                       = $0001 ; L error_enolck_zc
__SDCC_IY                       = $0001 ; L error_enomem_mc
__SDCC_IY                       = $0001 ; L error_enomem_zc
__SDCC_IY                       = $0001 ; L error_enotsup_mc
__SDCC_IY                       = $0001 ; L error_enotsup_zc
__SDCC_IY                       = $0001 ; L free_fastcall
__SDCC_IY                       = $0001 ; L l_divu_16_16x8
__SDCC_IY                       = $0001 ; L malloc_fastcall
__SDCC_IY                       = $0001 ; L page0
__crt_enable_close              = $0001 ; L page0
__data_threads_size             = $0001 ; G 
__rodata_error_string_end_size  = $0001 ; G 
isr_table_index                 = $0001 ; L page0
mtx_plain                       = $0001 ; G page0
thrd_error                      = $0001 ; G page0
STDIO_MSG_WRIT                  = $0002 ; G page0
STDIO_SEEK_END                  = $0002 ; G page0
TAR__clib_exit_stack_size       = $0002 ; L page0
__EBADF                         = $0002 ; G page0
__bss_error_size                = $0002 ; G 
__clib_exit_stack_size          = $0002 ; L page0
__data_alloc_malloc_size        = $0002 ; G 
__data_fcntl_size               = $0002 ; G 
__data_fcntl_stdio_heap_tail_size = $0002 ; G 
__exit_stack_size               = $0002 ; G page0
mtx_recursive                   = $0002 ; G page0
thrd_nomem                      = $0002 ; G page0
STDIO_MSG_GETC                  = $0003 ; G page0
__EBDFD                         = $0003 ; G page0
__code_crt_return_size          = $0003 ; G 
__fcntl_fdtbl_size              = $0003 ; G page0
STDIO_MSG_EATC                  = $0004 ; G page0
__EDOM                          = $0004 ; G page0
mtx_timed                       = $0004 ; G page0
thrd_busy                       = $0004 ; G page0
STDIO_MSG_READ                  = $0005 ; G page0
__EFBIG                         = $0005 ; G page0
__code_stdio_size               = $0005 ; G 
STDIO_MSG_SEEK                  = $0006 ; G page0
__EINVAL                        = $0006 ; G page0
__bss_stdlib_size               = $0006 ; G 
__data_fcntl_fdtable_body_size  = $0006 ; G 
__data_fcntl_stdio_heap_head_size = $0006 ; G 
DEF__crt_enable_streams         = $0007 ; L page0
STDIO_MSG_ICTL                  = $0007 ; G page0
__EMFILE                        = $0007 ; G page0
__code_crt_main_size            = $0007 ; G 
STDIO_MSG_FLSH                  = $0008 ; G page0
__ENFILE                        = $0008 ; G page0
thrd_timedout                   = $0008 ; G page0
STDIO_MSG_CLOS                  = $0009 ; G page0
__ENOLCK                        = $0009 ; G page0
__code_ctype_size               = $0009 ; G 
CHAR_LF                         = $000A ; L character_00_input_stdio_msg_read
CHAR_LF                         = $000A ; L character_00_output_ochar_putc_bin
__ENOMEM                        = $000A ; G page0
__ENOTSUP                       = $000B ; G page0
__EOVERFLOW                     = $000C ; G page0
CHAR_CR                         = $000D ; L character_00_input_stdio_msg_getc
CHAR_CR                         = $000D ; L character_00_output_ochar_putc_bin
__ERANGE                        = $000D ; G page0
__bss_compiler_size             = $000D ; G 
__ESTAT                         = $000E ; G page0
__data_compiler_size            = $000E ; G 
ICHAR_MSG_GETC                  = $000F ; G page0
ITERM_MSG_GETC                  = $000F ; G page0
__EAGAIN                        = $000F ; G page0
__EWOULDBLOCK                   = $000F ; G page0
ITERM_MSG_INTERRUPT             = $0010 ; G page0
__zalt_system_size              = $0010 ; G 
ITERM_MSG_PUTC                  = $0011 ; G page0
ITERM_MSG_PRINT_CURSOR          = $0012 ; G page0
ITERM_MSG_ERASE_CURSOR          = $0013 ; G page0
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G page0
ITERM_MSG_BS                    = $0015 ; G page0
ITERM_MSG_BS_PWD                = $0016 ; G page0
ITERM_MSG_READLINE_BEGIN        = $0017 ; G page0
ITERM_MSG_READLINE_END          = $0018 ; G page0
ITERM_MSG_BELL                  = $0019 ; G page0
OCHAR_MSG_PUTC_BIN              = $001E ; G page0
OTERM_MSG_PUTC                  = $001E ; G page0
OTERM_MSG_TTY                   = $001F ; G page0
__code_threads_mutex_size       = $001F ; G 
OCHAR_MSG_PUTC                  = $0020 ; G page0
OTERM_MSG_PRINTC                = $0020 ; G page0
bios_sysctrl_debugconsole       = $0020 ; L zccD1A29
OTERM_MSG_SCROLL                = $0021 ; G page0
OTERM_MSG_CLS                   = $0022 ; G page0
OTERM_MSG_PAUSE                 = $0023 ; G page0
OTERM_MSG_BELL                  = $0024 ; G page0
__code_crt_init_size            = $0024 ; G 
__rodata_compiler_size          = $0024 ; G 
OTERM_MSG_PSCROLL               = $0025 ; G page0
__code_driver_general_size      = $0025 ; G 
__rodata_error_strings_size     = $002E ; G 
__data_stdio_size               = $0039 ; G 
__code_math_size                = $003B ; G 
bios_var_ram_top_page           = $0040 ; G page0
bios_var_ram_top                = $0041 ; L page0
bios_var_ram_active_page        = $0043 ; G page0
__code_l_size                   = $0056 ; G 
bios_load_byte_instruction      = $0068 ; G page0
bios_load_word_instruction      = $006F ; G page0
BiosFn1                         = $0078 ; L page0
BiosFn2                         = $0078 ; L page0
BiosFn3                         = $0078 ; L page0
BiosFn4                         = $0078 ; L page0
BiosFn5                         = $0078 ; L page0
BiosFn6                         = $0078 ; L page0
__data_fcntl_stdio_heap_body_size = $0078 ; G 
__code_error_size               = $007C ; G 
__code_stdlib_size              = $007D ; G 
TAR__clib_stdio_heap_size       = $0080 ; L page0
__clib_stdio_heap_size          = $0080 ; L page0
__code_driver_character_output_size = $008D ; G 
__code_fcntl_size               = $009C ; G 
__code_alloc_malloc_size        = $00C1 ; G 
__code_driver_character_input_size = $00DB ; G 
__code_string_size              = $00DF ; G 
isr_table_address               = $0100 ; L page0
IOCTL_OTERM_CLS                 = $0102 ; G page0
TAR__crt_stack_size             = $0200 ; L page0
__crt_stack_size                = $0200 ; L page0
isr_null_vector                 = $0200 ; G page0
IOCTL_ITERM_TIE                 = $0201 ; G page0
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G page0
bios_trap_illegal               = $0203 ; G page0
bios_reset_init                 = $0204 ; G page0
resetWarm                       = $0229 ; L page0
__CODE_size                     = $0231 ; G 
__CODE_tail                     = $0231 ; G 
__Start                         = $0231 ; G page0
__code_crt_init_head            = $0231 ; G 
__code_crt_init_tail            = $0255 ; G 
__code_crt_main_head            = $0255 ; G 
__Exit                          = $025B ; G page0
__code_crt_exit_head            = $025C ; G 
__code_crt_exit_tail            = $025C ; G 
__code_crt_main_tail            = $025C ; G 
__code_crt_return_head          = $025C ; G 
zalt_oblivian                   = $025D ; L page0
_System_DebugConsole_Out__fast  = $025F ; G zccD1A29
__code_crt_common_head          = $025F ; G 
__code_crt_common_tail          = $025F ; G 
__code_crt_return_tail          = $025F ; G 
__zalt_system_head              = $025F ; G 
bios_sysctrl_debugconsole_out   = $025F ; G zccD1A29
_System_DebugConsole_In         = $0265 ; G zccD1A29
bios_sysctrl_debugconsole_in    = $0265 ; G zccD1A29
__code_adt_b_array_head         = $026F ; G 
__code_adt_b_array_tail         = $026F ; G 
__code_adt_b_vector_head        = $026F ; G 
__code_adt_b_vector_tail        = $026F ; G 
__code_adt_ba_priority_queue_head = $026F ; G 
__code_adt_ba_priority_queue_tail = $026F ; G 
__code_adt_ba_stack_head        = $026F ; G 
__code_adt_ba_stack_tail        = $026F ; G 
__code_adt_bv_priority_queue_head = $026F ; G 
__code_adt_bv_priority_queue_tail = $026F ; G 
__code_adt_bv_stack_head        = $026F ; G 
__code_adt_bv_stack_tail        = $026F ; G 
__code_adt_p_forward_list_alt_head = $026F ; G 
__code_adt_p_forward_list_alt_tail = $026F ; G 
__code_adt_p_forward_list_head  = $026F ; G 
__code_adt_p_forward_list_tail  = $026F ; G 
__code_adt_p_list_head          = $026F ; G 
__code_adt_p_list_tail          = $026F ; G 
__code_adt_p_queue_head         = $026F ; G 
__code_adt_p_queue_tail         = $026F ; G 
__code_adt_p_stack_head         = $026F ; G 
__code_adt_p_stack_tail         = $026F ; G 
__code_adt_w_array_head         = $026F ; G 
__code_adt_w_array_tail         = $026F ; G 
__code_adt_w_vector_head        = $026F ; G 
__code_adt_w_vector_tail        = $026F ; G 
__code_adt_wa_priority_queue_head = $026F ; G 
__code_adt_wa_priority_queue_tail = $026F ; G 
__code_adt_wa_stack_head        = $026F ; G 
__code_adt_wa_stack_tail        = $026F ; G 
__code_adt_wv_priority_queue_head = $026F ; G 
__code_adt_wv_priority_queue_tail = $026F ; G 
__code_adt_wv_stack_head        = $026F ; G 
__code_adt_wv_stack_tail        = $026F ; G 
__code_alloc_balloc_head        = $026F ; G 
__code_alloc_balloc_tail        = $026F ; G 
__code_alloc_malloc_head        = $026F ; G 
__code_clib_head                = $026F ; G 
__code_clib_tail                = $026F ; G 
__code_driver_head              = $026F ; G 
__code_driver_tail              = $026F ; G 
__code_font_head                = $026F ; G 
__code_font_tail                = $026F ; G 
__zalt_lib_head                 = $026F ; G 
__zalt_lib_tail                 = $026F ; G 
__zalt_system_tail              = $026F ; G 
_free_fastcall                  = $026F ; G free_fastcall
_free_unlocked_fastcall         = $026F ; G free_unlocked_fastcall
asm_free_unlocked               = $026F ; G asm_free_unlocked
asm_heap_free_unlocked          = $0276 ; G asm_heap_free_unlocked
remove_block                    = $0284 ; L asm_heap_free_unlocked
asm_heap_init                   = $029A ; G asm_heap_init
_malloc_fastcall                = $02BC ; G malloc_fastcall
_malloc_unlocked_fastcall       = $02BC ; G malloc_unlocked_fastcall
asm_malloc_unlocked             = $02BC ; G asm_malloc_unlocked
asm_heap_alloc_unlocked         = $02C3 ; G asm_heap_alloc_unlocked
block_loop                      = $02D3 ; L asm_heap_alloc_unlocked
found_memory                    = $02F2 ; L asm_heap_alloc_unlocked
__heap_allocate_block           = $02F6 ; G __heap_allocate_block
insert_block                    = $02FE ; L __heap_allocate_block
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G page0
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G page0
block_next_present              = $0313 ; L __heap_allocate_block
block_next_absent               = $031B ; L __heap_allocate_block
overlay_block                   = $0327 ; L __heap_allocate_block
__code_alloc_malloc_tail        = $0330 ; G 
__code_alloc_obstack_head       = $0330 ; G 
__code_alloc_obstack_tail       = $0330 ; G 
__code_arch_head                = $0330 ; G 
__code_arch_tail                = $0330 ; G 
__code_bifrost2_head            = $0330 ; G 
__code_bifrost2_tail            = $0330 ; G 
__code_bifrost_h_head           = $0330 ; G 
__code_bifrost_h_tail           = $0330 ; G 
__code_bifrost_l_head           = $0330 ; G 
__code_bifrost_l_tail           = $0330 ; G 
__code_compress_aplib_head      = $0330 ; G 
__code_compress_aplib_tail      = $0330 ; G 
__code_compress_zx7_head        = $0330 ; G 
__code_compress_zx7_tail        = $0330 ; G 
__code_ctype_head               = $0330 ; G 
asm_tolower                     = $0330 ; G asm_tolower
__code_ctype_tail               = $0339 ; G 
__code_driver_general_head      = $0339 ; G 
console_01_input_terminal_fdriver = $0339 ; G console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = $0339 ; G console_01_output_terminal_fdriver
device_reset_error              = $0341 ; G device_reset_error
device_return_error             = $034A ; G device_return_error
device_set_error                = $0351 ; G device_set_error
__code_driver_character_input_head = $035E ; G 
__code_driver_general_tail      = $035E ; G 
zalt_00_input_sysctrl           = $035E ; G zalt_00_input_sysctrl_driver
zalt_00_input_sysctrl_ichar_msg_getc = $0365 ; L zalt_00_input_sysctrl_driver
character_00_input              = $0370 ; G character_00_input
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G page0
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G page0
character_00_input_stdio_msg_eatc = $0396 ; G character_00_input_stdio_msg_eatc
eatc_loop                       = $039B ; L character_00_input_stdio_msg_eatc
eatc_exit                       = $03B5 ; L character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_getc = $03B8 ; G character_00_input_stdio_msg_getc
reject_cr                       = $03C0 ; L character_00_input_stdio_msg_getc
cr                              = $03D1 ; L character_00_input_stdio_msg_getc
character_00_input_stdio_msg_ictl = $03D8 ; G character_00_input_stdio_msg_ictl
_ictl_messages                  = $03E6 ; L character_00_input_stdio_msg_ictl
exit_error                      = $03EB ; L character_00_input_stdio_msg_ictl
character_00_input_stdio_msg_read = $03ED ; G character_00_input_stdio_msg_read
read_loop                       = $03EE ; L character_00_input_stdio_msg_read
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G page0
read_exit                       = $0404 ; L character_00_input_stdio_msg_read
read_exit_error                 = $040C ; L character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = $0417 ; G character_00_input_stdio_msg_seek
seek_loop                       = $0423 ; L character_00_input_stdio_msg_seek
__code_driver_character_input_tail = $0439 ; G 
__code_driver_character_output_head = $0439 ; G 
zalt_00_output_sysctrl          = $0439 ; G zalt_00_output_sysctrl_driver
zalt_00_output_sysctrl_ochar_msg_putc = $0440 ; L zalt_00_output_sysctrl_driver
character_00_output             = $0449 ; G character_00_output
character_00_output_ochar_msg_putc_bin = $046F ; G character_00_output_ochar_putc_bin
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G page0
putchar                         = $0485 ; L character_00_output_ochar_putc_bin
character_00_output_stdio_msg_ictl = $0489 ; G character_00_output_stdio_msg_ictl
exit_error                      = $0497 ; L character_00_output_stdio_msg_ictl
character_00_output_stdio_msg_putc = $0499 ; G character_00_output_stdio_msg_putc
putc_loop                       = $049D ; L character_00_output_stdio_msg_putc
character_00_output_stdio_msg_writ = $04AD ; G character_00_output_stdio_msg_writ
writ_loop                       = $04B1 ; L character_00_output_stdio_msg_writ
writ_end                        = $04C2 ; L character_00_output_stdio_msg_writ
__code_driver_character_output_tail = $04C6 ; G 
__code_driver_memstream_head    = $04C6 ; G 
__code_driver_memstream_tail    = $04C6 ; G 
__code_driver_terminal_input_head = $04C6 ; G 
__code_driver_terminal_input_tail = $04C6 ; G 
__code_driver_terminal_output_head = $04C6 ; G 
__code_driver_terminal_output_tail = $04C6 ; G 
__code_driver_tty_head          = $04C6 ; G 
__code_driver_tty_tail          = $04C6 ; G 
__code_error_head               = $04C6 ; G 
error_enolck_zc                 = $04C8 ; G error_enolck_zc
error_enolck_mc                 = $04CE ; G error_enolck_mc
errno_mc                        = $04D8 ; G errno_mc
error_enomem_zc                 = $04E2 ; G error_enomem_zc
error_enomem_mc                 = $04E8 ; G error_enomem_mc
error_mc                        = $04F0 ; G error_mc
__ch_system                     = $04F9 ; G page0
error_zc                        = $04F9 ; G error_zc
error_einval_zc                 = $0501 ; G error_einval_zc
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G page0
error_einval_mc                 = $0507 ; G error_einval_mc
error_divide_by_zero_mc         = $050D ; G error_divide_by_zero_mc
error_edom_mc                   = $050D ; G error_edom_mc
error_znc                       = $0515 ; G error_znc
error_enotsup_zc                = $051C ; G error_enotsup_zc
error_enotsup_mc                = $0522 ; G error_enotsup_mc
error_lzc                       = $0528 ; G error_lzc
error_lznc                      = $052F ; G error_lznc
error_ebdfd_zc                  = $0536 ; G error_ebdfd_zc
error_ebdfd_mc                  = $053D ; G error_ebdfd_mc
__code_error_tail               = $0542 ; G 
__code_fcntl_head               = $0542 ; G 
asm_vioctl                      = $0542 ; G asm_vioctl
critical_section                = $0542 ; L asm_vioctl
find_driver_loop                = $0550 ; L asm_vioctl
deliver_message                 = $0560 ; L asm_vioctl
__bool                          = $0574 ; L asm_vioctl
__setf                          = $057B ; L asm_vioctl
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G page0
forward_ioctl                   = $0586 ; L asm_vioctl
__getf                          = $058F ; L asm_vioctl
asm_vioctl_driver               = $059A ; G asm_vioctl
__fcntl_fdchain_descend         = $05B6 ; G __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_2      = $05BD ; G __fcntl_fdstruct_from_fd_2
__fcntl_fdstruct_from_fd_1      = $05C8 ; G __fcntl_fdstruct_from_fd_1
__code_fcntl_tail               = $05DE ; G 
__code_font_fzx_head            = $05DE ; G 
__code_font_fzx_tail            = $05DE ; G 
__code_fp_genmath_head          = $05DE ; G 
__code_fp_genmath_tail          = $05DE ; G 
__code_fp_math48_head           = $05DE ; G 
__code_fp_math48_tail           = $05DE ; G 
__code_input_head               = $05DE ; G 
__code_input_tail               = $05DE ; G 
__code_inttypes_head            = $05DE ; G 
__code_inttypes_tail            = $05DE ; G 
__code_l_head                   = $05DE ; G 
l_jpix                          = $05DE ; G l_jpix
__thread_block_timeout          = $05E1 ; G page0
__thread_context_switch         = $05E1 ; G page0
__thread_unblock                = $05E1 ; G page0
l_ret                           = $05E1 ; G l_ret
IOCTL_OTERM_GET_OTERM           = $0602 ; G page0
l_setmem_hl                     = $0602 ; G l_setmem_hl
___sdcc_call_hl                 = $0603 ; G ___sdcc_call_hl
l_jphl                          = $0603 ; G l_jphl
l_valid_base                    = $0604 ; G l_valid_base
l_neg_hl                        = $0611 ; G l_neg_hl
l_num2char                      = $0619 ; G l_num2char
alpha                           = $0620 ; L l_num2char
l_decu_dehl                     = $0623 ; G l_decu_dehl
msw                             = $0629 ; L l_decu_dehl
limit                           = $062F ; L l_decu_dehl
__code_l_sccz80_head            = $0634 ; G 
__code_l_sccz80_tail            = $0634 ; G 
__code_l_sdcc_head              = $0634 ; G 
__code_l_sdcc_tail              = $0634 ; G 
__code_l_tail                   = $0634 ; G 
__code_locale_head              = $0634 ; G 
__code_locale_tail              = $0634 ; G 
__code_math_head                = $0634 ; G 
l_small_divu_16_16x16           = $0635 ; G l_small_divu_16_16x16
l0_small_divu_16_16x16          = $0639 ; G l_small_divu_16_16x16
divisor_sixteen_bit             = $063D ; L l_small_divu_16_16x16
loop_16_0                       = $0643 ; L l_small_divu_16_16x16
loop_16_1                       = $064B ; L l_small_divu_16_16x16
l_divu_16_16x8                  = $0655 ; G l_divu_16_16x8
l_small_divu_16_16x8            = $0655 ; G l_small_divu_16_16x16
l0_divu_16_16x8                 = $0659 ; G l_divu_16_16x8
l0_small_divu_16_16x8           = $0659 ; G l_small_divu_16_16x16
loop_8_0                        = $065D ; L l_small_divu_16_16x16
loop_8_2                        = $0664 ; L l_small_divu_16_16x16
loop_8_1                        = $0666 ; L l_small_divu_16_16x16
divide_zero                     = $066B ; L l_small_divu_16_16x16
__code_math_tail                = $066F ; G 
__code_network_head             = $066F ; G 
__code_network_tail             = $066F ; G 
__code_nirvanam_head            = $066F ; G 
__code_nirvanam_tail            = $066F ; G 
__code_nirvanap_head            = $066F ; G 
__code_nirvanap_tail            = $066F ; G 
__code_setjmp_head              = $066F ; G 
__code_setjmp_tail              = $066F ; G 
__code_sound_bit_head           = $066F ; G 
__code_sound_bit_tail           = $066F ; G 
__code_stdio_head               = $066F ; G 
__stdio_nextarg_bc              = $066F ; G __stdio_nextarg_bc
__code_stdio_tail               = $0674 ; G 
__code_stdlib_head              = $0674 ; G 
_itoa_callee                    = $0674 ; G itoa_callee
_utoa_callee                    = $067C ; G utoa_callee
asm_exit                        = $0684 ; G asm_exit
asm0_exit                       = $0687 ; G asm_exit
loop                            = $0693 ; L asm_exit
asm_itoa                        = $06A5 ; G asm_itoa
asm0_itoa                       = $06AA ; G asm_itoa
asm_utoa                        = $06C6 ; G asm_utoa
asm0_utoa                       = $06CB ; G asm_utoa
asm1_utoa                       = $06D1 ; G asm_utoa
compute_lp                      = $06D8 ; L asm_utoa
write_lp                        = $06EA ; L asm_utoa
__code_stdlib_tail              = $06F1 ; G 
__code_string_head              = $06F1 ; G 
_memset_callee                  = $06F1 ; G memset_callee
_strcmp_callee                  = $06F9 ; G strcmp_callee
_strcasecmp_callee              = $06FF ; G strcasecmp_callee
_stricmp_callee                 = $06FF ; G stricmp_callee
IOCTL_OTERM_SCROLL              = $0702 ; G page0
_strlcpy_callee                 = $0705 ; G strlcpy_callee
_strncmp_callee                 = $070D ; G strncmp_callee
_strncasecmp_callee             = $0715 ; G strncasecmp_callee
_strnicmp_callee                = $0715 ; G strnicmp_callee
_strnlen_callee                 = $071D ; G strnlen_callee
asm_memset                      = $0724 ; G asm_memset
asm_strcasecmp                  = $0735 ; G asm_strcasecmp
loop                            = $0735 ; L asm_strcasecmp
equal                           = $0746 ; L asm_strcasecmp
different                       = $074A ; L asm_strcasecmp
asm_strcmp                      = $074D ; G asm_strcmp
loop                            = $074D ; L asm_strcmp
equal                           = $0756 ; L asm_strcmp
different                       = $075A ; L asm_strcmp
asm_strlcpy                     = $075E ; G asm_strlcpy
cpyloop                         = $0764 ; L asm_strlcpy
szexceeded0                     = $076C ; L asm_strlcpy
szexceeded1                     = $076F ; L asm_strlcpy
done                            = $0777 ; L asm_strlcpy
_strlen_fastcall                = $077C ; G strlen_fastcall
asm_strlen                      = $077C ; G asm_strlen
asm_strncasecmp                 = $0787 ; G asm_strncasecmp
loop                            = $0787 ; L asm_strncasecmp
equal                           = $07A0 ; L asm_strncasecmp
different                       = $07A3 ; L asm_strncasecmp
asm_strncmp                     = $07A7 ; G asm_strncmp
loop                            = $07AB ; L asm_strncmp
equal                           = $07B8 ; L asm_strncmp
different                       = $07BC ; L asm_strncmp
asm_strnlen                     = $07C0 ; G asm_strnlen
notend                          = $07CD ; L asm_strnlen
__code_string_tail              = $07D0 ; G 
__code_temp_sp1_head            = $07D0 ; G 
__code_temp_sp1_tail            = $07D0 ; G 
__code_threads_head             = $07D0 ; G 
__code_threads_mutex_head       = $07D0 ; G 
__code_threads_tail             = $07D0 ; G 
asm_mtx_init                    = $07D0 ; G asm_mtx_init
unknown_type                    = $07EA ; L asm_mtx_init
_Error_Set                      = $07EF ; G zccD1A23
__code_compiler_head            = $07EF ; G 
__code_lib_head                 = $07EF ; G 
__code_lib_tail                 = $07EF ; G 
__code_threads_mutex_tail       = $07EF ; G 
__code_z80_head                 = $07EF ; G 
__code_z80_tail                 = $07EF ; G 
IOCTL_OTERM_FONT                = $0802 ; G page0
_Error_Get                      = $0807 ; G zccD1A23
_Heap_Construct                 = $0810 ; G zccD1A24
_Heap_Alloc                     = $0822 ; G zccD1A24
l_Heap_Alloc_00109              = $0838 ; L zccD1A24
l_Heap_Alloc_00102              = $083D ; L zccD1A24
l_Heap_Alloc_00103              = $0846 ; L zccD1A24
_Heap_Free                      = $0849 ; G zccD1A24
l_Heap_Free_00103               = $0868 ; L zccD1A24
_Thread_Construct               = $086B ; G zccD1A25
_Thread_GetCurrent              = $0881 ; G zccD1A25
_Thread_GetId                   = $0885 ; G zccD1A25
_Thread_GetHeap__fast           = $0898 ; G zccD1A25
_Thread_Alloc                   = $08A0 ; G zccD1A25
l_Thread_Alloc_00102            = $08B5 ; L zccD1A25
l_Thread_Alloc_00103            = $08C6 ; L zccD1A25
_Thread_Free                    = $08C9 ; G zccD1A25
l_Thread_Free_00103             = $08EA ; L zccD1A25
_Async_IsComplete               = $08ED ; G zccD1A26
l_Async_IsComplete_00103        = $0908 ; L zccD1A26
l_Async_IsComplete_00104        = $090B ; L zccD1A26
_asyncState_None                = $090E ; G zccD1A26
_asyncState_Pending             = $090F ; G zccD1A26
_asyncState_Completed           = $0910 ; G zccD1A26
_asyncState_CompletedSync       = $0911 ; G zccD1A26
_AsyncResult_size               = $0912 ; G zccD1A26
_Async_Wait                     = $0913 ; G zccD1A26
_String_Copy                    = $0920 ; G zccD1A27
l_String_Copy_00102             = $093D ; L zccD1A27
l_String_Copy_00104             = $0952 ; L zccD1A27
l_String_Copy_00106             = $0967 ; L zccD1A27
l_String_Copy_00107             = $097F ; L zccD1A27
_String_Compare                 = $0982 ; G zccD1A27
l_String_Compare_00102          = $099F ; L zccD1A27
l_String_Compare_00104          = $09B4 ; L zccD1A27
l_String_Compare_00106          = $09CF ; L zccD1A27
l_String_Compare_00107          = $09E7 ; L zccD1A27
_String_CompareExact            = $09EA ; G zccD1A27
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G page0
l_String_CompareExact_00102     = $0A07 ; L zccD1A27
l_String_CompareExact_00104     = $0A1C ; L zccD1A27
l_String_CompareExact_00106     = $0A37 ; L zccD1A27
l_String_CompareExact_00107     = $0A4F ; L zccD1A27
_String_GetLength               = $0A52 ; G zccD1A27
l_String_GetLength_00102        = $0A6F ; L zccD1A27
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G page0
l_String_GetLength_00104        = $0A82 ; L zccD1A27
l_String_GetLength_00105        = $0A93 ; L zccD1A27
_System_DebugConsole_Log        = $0A96 ; G zccD1A28
l_System_DebugConsole_Log_00103 = $0AAC ; L zccD1A28
l_System_DebugConsole_Log_00106 = $0AB9 ; L zccD1A28
_System_DebugConsole_LogAssertFailed = $0ABC ; G zccD1A28
___str_0                        = $0B01 ; L zccD1A28
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G page0
___str_1                        = $0B1C ; L zccD1A28
_StreamProvider_Construct       = $0B27 ; G zccD1A210
l_StreamProvider_Construct_00103 = $0B41 ; L zccD1A210
l_StreamProvider_Construct_00104 = $0B43 ; L zccD1A210
_streamFlags_CanSeek            = $0B46 ; G zccD1A210
_streamFlags_CanRead            = $0B47 ; G zccD1A210
_streamFlags_CanWrite           = $0B48 ; G zccD1A210
_streamAccess_Read              = $0B49 ; G zccD1A210
_streamAccess_Write             = $0B4A ; G zccD1A210
_streamTransport_Block          = $0B4B ; G zccD1A210
_Stream_Construct               = $0B4C ; G zccD1A210
_Stream_Open                    = $0B74 ; G zccD1A210
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G page0
l_Stream_Open_00102             = $0BA3 ; L zccD1A210
l_Stream_Open_00104             = $0BEE ; L zccD1A210
l_Stream_Open_00105             = $0BF0 ; L zccD1A210
_Stream_Close                   = $0BF3 ; G zccD1A210
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G page0
l_Stream_Close_00102            = $0C08 ; L zccD1A210
l_Stream_Close_00104            = $0C1E ; L zccD1A210
l_Stream_Close_00106            = $0C32 ; L zccD1A210
l_Stream_Close_00107            = $0C40 ; L zccD1A210
_Stream_Read                    = $0C43 ; G zccD1A210
l_Stream_Read_00102             = $0C61 ; L zccD1A210
l_Stream_Read_00104             = $0C81 ; L zccD1A210
l_Stream_Read_00106             = $0C9A ; L zccD1A210
l_Stream_Read_00108             = $0CBD ; L zccD1A210
l_Stream_Read_00109             = $0CD4 ; L zccD1A210
_Stream_Write                   = $0CD9 ; G zccD1A210
l_Stream_Write_00102            = $0CF0 ; L zccD1A210
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G page0
l_Stream_Write_00104            = $0D05 ; L zccD1A210
l_Stream_Write_00106            = $0D25 ; L zccD1A210
l_Stream_Write_00108            = $0D3E ; L zccD1A210
l_Stream_Write_00110            = $0D61 ; L zccD1A210
l_Stream_Write_00111            = $0D78 ; L zccD1A210
_Stream_HasFlags                = $0D7D ; G zccD1A210
l_Stream_HasFlags_00103         = $0D96 ; L zccD1A210
l_Stream_HasFlags_00104         = $0D98 ; L zccD1A210
_StreamReader_TryReadByte       = $0D9B ; G zccD1A211
l_StreamReader_TryReadByte_00103 = $0DC4 ; L zccD1A211
l_StreamReader_TryReadByte_00104 = $0DC7 ; L zccD1A211
_GetByte                        = $0DCA ; G zccD1A211
l_GetByte_00101                 = $0DD7 ; L zccD1A211
l_GetByte_00103                 = $0DF7 ; L zccD1A211
_StreamReader_ReadLine          = $0DFE ; G zccD1A211
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G page0
l_StreamReader_ReadLine_00102   = $0E13 ; L zccD1A211
l_StreamReader_ReadLine_00103   = $0E23 ; L zccD1A211
l_StreamReader_ReadLine_00117   = $0E31 ; L zccD1A211
l_StreamReader_ReadLine_00107   = $0E34 ; L zccD1A211
l_StreamReader_ReadLine_00109   = $0E70 ; L zccD1A211
_StreamWriter_Write             = $0E76 ; G zccD1A212
l_StreamWriter_Write_00102      = $0E95 ; L zccD1A212
l_StreamWriter_Write_00104      = $0EAB ; L zccD1A212
l_StreamWriter_Write_00106      = $0EC0 ; L zccD1A212
l_StreamWriter_Write_00111      = $0EE6 ; L zccD1A212
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G page0
l_StreamWriter_Write_00110      = $0F2A ; L zccD1A212
l_StreamWriter_Write_00113      = $0F2F ; L zccD1A212
l_StreamWriter_Write_00114      = $0F31 ; L zccD1A212
_StreamWriter_WriteLine         = $0F36 ; G zccD1A212
_ConsoleStreamProvider_CanProvide = $0F74 ; G zccD1A213
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G page0
l_ConsoleStreamProvider_CanProvide_00102 = $0F9C ; L zccD1A213
l_ConsoleStreamProvider_CanProvide_00103 = $0F9F ; L zccD1A213
_ConsoleStreamProvider_size     = $0FA2 ; G zccD1A213
_ConsoleStream_size             = $0FA3 ; L zccD1A213
_ConsoleStreamProvider_TryOpenStream = $0FA4 ; G zccD1A213
l_ConsoleStreamProvider_TryOpenStream_00102 = $0FB9 ; L zccD1A213
l_ConsoleStreamProvider_TryOpenStream_00103 = $0FCB ; L zccD1A213
_ConsoleStreamProvider_BeginReadStream = $0FCE ; G zccD1A213
l_ConsoleStreamProvider_BeginReadStream_00102 = $0FEB ; L zccD1A213
l_ConsoleStreamProvider_BeginReadStream_00104 = $1000 ; L zccD1A213
l_ConsoleStreamProvider_BeginReadStream_00106 = $1015 ; L zccD1A213
l_ConsoleStreamProvider_BeginReadStream_00107 = $1047 ; L zccD1A213
_ConsoleStreamProvider_EndReadStream = $104A ; G zccD1A213
__code_compiler_size            = $1060 ; G 
l_ConsoleStreamProvider_EndReadStream_00102 = $1072 ; L zccD1A213
l_ConsoleStreamProvider_EndReadStream_00103 = $1075 ; L zccD1A213
_ConsoleStreamProvider_BeginWriteStream = $1078 ; G zccD1A213
l_ConsoleStreamProvider_BeginWriteStream_00102 = $1095 ; L zccD1A213
l_ConsoleStreamProvider_BeginWriteStream_00104 = $10AA ; L zccD1A213
l_ConsoleStreamProvider_BeginWriteStream_00117 = $10BF ; L zccD1A213
l_ConsoleStreamProvider_BeginWriteStream_00109 = $10C2 ; L zccD1A213
l_ConsoleStreamProvider_BeginWriteStream_00107 = $10E1 ; L zccD1A213
l_ConsoleStreamProvider_BeginWriteStream_00111 = $1103 ; L zccD1A213
_ConsoleStreamProvider_EndWriteStream = $1106 ; G zccD1A213
l_ConsoleStreamProvider_EndWriteStream_00102 = $1123 ; L zccD1A213
l_ConsoleStreamProvider_EndWriteStream_00104 = $1138 ; L zccD1A213
l_ConsoleStreamProvider_EndWriteStream_00121 = $1147 ; L zccD1A213
l_ConsoleStreamProvider_EndWriteStream_00106 = $1154 ; L zccD1A213
l_ConsoleStreamProvider_EndWriteStream_00107 = $1157 ; L zccD1A213
_ConsoleStreamProvider_Construct = $115A ; G zccD1A213
l_ConsoleStreamProvider_Construct_00102 = $117B ; L zccD1A213
l_ConsoleStreamProvider_Construct_00103 = $11C7 ; L zccD1A213
_RingBuffer_Construct           = $11CA ; G zccD1A214
l_RingBuffer_Construct_00102    = $11E3 ; L zccD1A214
l_RingBuffer_Construct_00103    = $11EC ; L zccD1A214
_RingBuffer_size                = $11EF ; G zccD1A214
_RingBuffer_MaxCapacity         = $11F1 ; G zccD1A214
_RingBuffer_GetCount            = $11F3 ; G zccD1A214
_RingBuffer_IsFull              = $120D ; G zccD1A214
l_RingBuffer_IsFull_00103       = $1233 ; L zccD1A214
l_RingBuffer_IsFull_00104       = $1236 ; L zccD1A214
_RingBuffer_IsEmpty             = $1239 ; G zccD1A214
l_RingBuffer_IsEmpty_00103      = $1255 ; L zccD1A214
l_RingBuffer_IsEmpty_00104      = $1258 ; L zccD1A214
_RingBuffer_Read                = $125B ; G zccD1A214
_RingBuffer_Peek                = $1281 ; G zccD1A214
_RingBuffer_Write               = $129C ; G zccD1A214
_RingBuffer_Clear               = $12BF ; G zccD1A214
_StringBuilder_Construct        = $12D5 ; G zccD1A215
l_StringBuilder_Construct_00102 = $12F0 ; L zccD1A215
l_StringBuilder_Construct_00104 = $1308 ; L zccD1A215
l_StringBuilder_Construct_00105 = $132F ; L zccD1A215
_StringBuilder_AppendString     = $1334 ; G zccD1A215
l_StringBuilder_AppendString_00102 = $134A ; L zccD1A215
l_StringBuilder_AppendString_00104 = $1357 ; L zccD1A215
l_StringBuilder_AppendString_00106 = $1387 ; L zccD1A215
l_StringBuilder_AppendString_00107 = $13B9 ; L zccD1A215
_StringBuilder_AppendChar       = $13BE ; G zccD1A215
l_StringBuilder_AppendChar_00102 = $13D4 ; L zccD1A215
l_StringBuilder_AppendChar_00104 = $13FA ; L zccD1A215
l_StringBuilder_AppendChar_00105 = $1427 ; L zccD1A215
_StringBuilder_AppendUint8      = $142C ; G zccD1A215
l_StringBuilder_AppendUint8_00102 = $1443 ; L zccD1A215
l_StringBuilder_AppendUint8_00104 = $1469 ; L zccD1A215
l_StringBuilder_AppendUint8_00105 = $14BD ; L zccD1A215
_StringBuilder_AppendUint16     = $14C2 ; G zccD1A215
l_StringBuilder_AppendUint16_00102 = $14D8 ; L zccD1A215
l_StringBuilder_AppendUint16_00104 = $14FE ; L zccD1A215
l_StringBuilder_AppendUint16_00105 = $1548 ; L zccD1A215
_OpenConsole                    = $154D ; G zccD1A216
_ReadLineInto                   = $1564 ; G zccD1A216
_Monitor_Start                  = $1592 ; G zccD1A216
l_Monitor_Start_00106           = $15AD ; L zccD1A216
l_Monitor_Start_00108           = $1603 ; L zccD1A216
___str_0                        = $1606 ; L zccD1A216
_PrintLogo                      = $160B ; G zccD1A217
_MaxCommandLength               = $162D ; L zccD1A217
___str_0                        = $162E ; L zccD1A217
_ExecuteDump                    = $1640 ; G zccD1A217
_ExecuteHelp                    = $164B ; G zccD1A217
___str_1                        = $169B ; L zccD1A217
___str_2                        = $16B4 ; L zccD1A217
___str_3                        = $16DC ; L zccD1A217
_ExecuteReg                     = $1707 ; G zccD1A217
_ExecuteCommand                 = $1712 ; G zccD1A217
l_ExecuteCommand_00112          = $172C ; L zccD1A217
l_ExecuteCommand_00101          = $1734 ; L zccD1A217
l_ExecuteCommand_00102          = $1749 ; L zccD1A217
l_ExecuteCommand_00103          = $1756 ; L zccD1A217
l_ExecuteCommand_00104          = $176B ; L zccD1A217
l_ExecuteCommand_00105          = $176F ; L zccD1A217
l_ExecuteCommand_00106          = $1771 ; L zccD1A217
_Dispatch                       = $1774 ; G zccD1A217
l_Dispatch_00103                = $1789 ; L zccD1A217
l_Dispatch_00102                = $17F3 ; L zccD1A217
l_Dispatch_00105                = $17FE ; L zccD1A217
l_Dispatch_00106                = $1817 ; L zccD1A217
___str_4                        = $181C ; L zccD1A217
_init                           = $182F ; G zccD1A218
_main                           = $1835 ; G zccD1A218
__code_compiler_tail            = $184F ; G 
__code_user_head                = $184F ; G 
__code_user_tail                = $184F ; G 
__rodata_clib_head              = $184F ; G 
__rodata_clib_tail              = $184F ; G 
__rodata_driver_head            = $184F ; G 
__rodata_driver_tail            = $184F ; G 
__rodata_error_strings_head     = $184F ; G 
__rodata_font_head              = $184F ; G 
__rodata_font_tail              = $184F ; G 
__rodata_error_string_end_head  = $187D ; G 
__rodata_error_strings_tail     = $187D ; G 
_NewLineChar                    = $187E ; G zccD1A22
__rodata_compiler_head          = $187E ; G 
__rodata_error_string_end_tail  = $187E ; G 
__rodata_fcntl_head             = $187E ; G 
__rodata_fcntl_tail             = $187E ; G 
__rodata_font_4x8_head          = $187E ; G 
__rodata_font_4x8_tail          = $187E ; G 
__rodata_font_8x8_head          = $187E ; G 
__rodata_font_8x8_tail          = $187E ; G 
__rodata_font_fzx_head          = $187E ; G 
__rodata_font_fzx_tail          = $187E ; G 
__rodata_input_head             = $187E ; G 
__rodata_input_tail             = $187E ; G 
__rodata_lib_head               = $187E ; G 
__rodata_lib_tail               = $187E ; G 
__rodata_sound_bit_head         = $187E ; G 
__rodata_sound_bit_tail         = $187E ; G 
__rodata_stdio_head             = $187E ; G 
__rodata_stdio_tail             = $187E ; G 
__rodata_stdlib_head            = $187E ; G 
__rodata_stdlib_tail            = $187E ; G 
_CarriageReturnChar             = $187F ; G zccD1A22
_SmallArray8_size               = $1880 ; G zccD1A22
_SmallArray8_MaxCapacity        = $1881 ; G zccD1A22
_Array8_size                    = $1882 ; G zccD1A22
_Array8_MaxCapacity             = $1883 ; G zccD1A22
_Collection8_size               = $1885 ; G zccD1A22
_Collection8_MaxCapacity        = $1886 ; G zccD1A22
___str_0                        = $1888 ; L zccD1A22
___str_0                        = $188B ; L zccD1A213
___str_5                        = $188F ; L zccD1A217
___str_6                        = $1894 ; L zccD1A217
___str_7                        = $1899 ; L zccD1A217
___str_8                        = $189D ; L zccD1A217
__CODE_END_head                 = $18A2 ; G 
__CODE_END_tail                 = $18A2 ; G 
__DATA_head                     = $18A2 ; G 
__rodata_compiler_tail          = $18A2 ; G 
__rodata_user_head              = $18A2 ; G 
__rodata_user_tail              = $18A2 ; G 
__DATA_tail                     = $18A3 ; G 
__data_alloc_balloc_head        = $18A3 ; G 
__data_alloc_balloc_tail        = $18A3 ; G 
__data_alloc_malloc_head        = $18A3 ; G 
__data_clib_head                = $18A3 ; G 
__data_clib_tail                = $18A3 ; G 
__data_driver_head              = $18A3 ; G 
__data_driver_tail              = $18A3 ; G 
__data_font_head                = $18A3 ; G 
__data_font_tail                = $18A3 ; G 
__malloc_heap                   = $18A3 ; G page0
__smc_clib_head                 = $18A3 ; G 
__smc_clib_tail                 = $18A3 ; G 
__smc_compiler_head             = $18A3 ; G 
__smc_compiler_tail             = $18A3 ; G 
__smc_driver_head               = $18A3 ; G 
__smc_driver_tail               = $18A3 ; G 
__smc_fcntl_head                = $18A3 ; G 
__smc_fcntl_tail                = $18A3 ; G 
__smc_font_head                 = $18A3 ; G 
__smc_font_tail                 = $18A3 ; G 
__smc_l_head                    = $18A3 ; G 
__smc_l_tail                    = $18A3 ; G 
__smc_lib_head                  = $18A3 ; G 
__smc_lib_tail                  = $18A3 ; G 
__smc_sound_bit_head            = $18A3 ; G 
__smc_sound_bit_tail            = $18A3 ; G 
__smc_user_head                 = $18A3 ; G 
__smc_user_tail                 = $18A3 ; G 
__data_alloc_malloc_tail        = $18A5 ; G 
__data_fcntl_head               = $18A5 ; G 
__stdio_heap                    = $18A5 ; G page0
__data_fcntl_stdio_heap_head_head = $18A7 ; G 
__data_fcntl_tail               = $18A7 ; G 
__stdio_block                   = $18A7 ; L page0
__data_fcntl_stdio_heap_body_head = $18AD ; G 
__data_fcntl_stdio_heap_head_tail = $18AD ; G 
__i_fcntl_heap_0                = $18AD ; L page0
__i_fcntl_fdstruct_0            = $18B3 ; L page0
__i_fcntl_heap_1                = $18C4 ; L page0
__i_fcntl_fdstruct_1            = $18CA ; L page0
__i_fcntl_fdstruct_2            = $18CA ; L page0
__i_fcntl_heap_2                = $18DB ; L page0
__data_fcntl_stdio_heap_body_tail = $1925 ; G 
__data_fcntl_stdio_heap_tail_head = $1925 ; G 
__i_fcntl_heap_3                = $1925 ; L page0
__data_fcntl_fdtable_body_head  = $1927 ; G 
__data_fcntl_stdio_heap_tail_tail = $1927 ; G 
__fcntl_fdtbl                   = $1927 ; G page0
__data_fcntl_fdtable_body_tail  = $192D ; G 
__data_sound_bit_head           = $192D ; G 
__data_sound_bit_tail           = $192D ; G 
__data_stdio_head               = $192D ; G 
_stdin                          = $192D ; G page0
__i_stdio_file_0                = $192F ; L page0
_stdout                         = $193E ; G page0
__i_stdio_file_1                = $1940 ; L page0
_stderr                         = $194F ; G page0
__i_stdio_file_2                = $1951 ; L page0
__stdio_open_file_list          = $1960 ; G page0
__stdio_closed_file_list        = $1962 ; G page0
__data_stdio_tail               = $1966 ; G 
__data_stdlib_head              = $1966 ; G 
__data_stdlib_tail              = $1966 ; G 
__data_threads_head             = $1966 ; G 
__thrd_id                       = $1966 ; G page0
_EndOfLine                      = $1967 ; G zccD1A22
__data_compiler_head            = $1967 ; G 
__data_lib_head                 = $1967 ; G 
__data_lib_tail                 = $1967 ; G 
__data_threads_tail             = $1967 ; G 
_ConsoleProtocol                = $1969 ; G zccD1A213
_Commands                       = $196B ; L zccD1A217
__BSS_head                      = $1975 ; G 
__DATA_END_head                 = $1975 ; G 
__DATA_END_tail                 = $1975 ; G 
__data_compiler_tail            = $1975 ; G 
__data_user_head                = $1975 ; G 
__data_user_tail                = $1975 ; G 
__BSS_UNINITIALIZED_head        = $1976 ; G 
__BSS_UNINITIALIZED_tail        = $1976 ; G 
__BSS_tail                      = $1976 ; G 
__bss_alloc_balloc_head         = $1976 ; G 
__bss_alloc_balloc_tail         = $1976 ; G 
__bss_alloc_malloc_head         = $1976 ; G 
__bss_alloc_malloc_tail         = $1976 ; G 
__bss_arch_head                 = $1976 ; G 
__bss_arch_tail                 = $1976 ; G 
__bss_clib_head                 = $1976 ; G 
__bss_clib_tail                 = $1976 ; G 
__bss_compress_aplib_head       = $1976 ; G 
__bss_compress_aplib_tail       = $1976 ; G 
__bss_driver_head               = $1976 ; G 
__bss_driver_tail               = $1976 ; G 
__bss_error_head                = $1976 ; G 
__bss_font_head                 = $1976 ; G 
__bss_font_tail                 = $1976 ; G 
_errno                          = $1976 ; G _errno
__bss_error_tail                = $1978 ; G 
__bss_fcntl_head                = $1978 ; G 
__bss_fcntl_tail                = $1978 ; G 
__bss_input_head                = $1978 ; G 
__bss_input_tail                = $1978 ; G 
__bss_sound_bit_head            = $1978 ; G 
__bss_sound_bit_tail            = $1978 ; G 
__bss_stdio_head                = $1978 ; G 
__bss_stdio_tail                = $1978 ; G 
__bss_stdlib_head               = $1978 ; G 
__exit_stack                    = $1978 ; G page0
__quickexit_stack               = $197D ; G page0
__bss_compiler_head             = $197E ; G 
__bss_lib_head                  = $197E ; G 
__bss_lib_tail                  = $197E ; G 
__bss_stdlib_tail               = $197E ; G 
__bss_string_head               = $197E ; G 
__bss_string_tail               = $197E ; G 
_crt_heap                       = $197E ; G zccD1A24
_CurrentThread                  = $197F ; L zccD1A25
_ConsoleStreamProvider          = $1984 ; L zccD1A210
_consoleAsyncResult             = $1986 ; L zccD1A213
_Console                        = $1989 ; L zccD1A216
__BSS_END_head                  = $198B ; G 
__BSS_END_tail                  = $198B ; G 
__IGNORE_head                   = $198B ; G 
__IGNORE_tail                   = $198B ; G 
__bss_compiler_tail             = $198B ; G 
__bss_user_head                 = $198B ; G 
__bss_user_tail                 = $198B ; G 
__size                          = $198B ; G 
__tail                          = $198B ; G 
IOCTL_ITERM_CAPS                = $C009 ; G page0
IOCTL_ITERM_COOK                = $C011 ; G page0
IOCTL_OTERM_CRLF                = $C012 ; G page0
IOCTL_OCHAR_CRLF                = $C014 ; G page0
IOCTL_ITERM_LINE                = $C021 ; G page0
IOCTL_OTERM_COOK                = $C022 ; G page0
IOCTL_ITERM_PASS                = $C041 ; G page0
IOCTL_OTERM_PAUSE               = $C042 ; G page0
IOCTL_ITERM_ECHO                = $C081 ; G page0
IOCTL_OTERM_PAGE                = $C082 ; G page0
IOCTL_ITERM_CRLF                = $C101 ; G page0
IOCTL_OTERM_BELL                = $C102 ; G page0
IOCTL_ICHAR_CRLF                = $C103 ; G page0
IOCTL_ITERM_CURS                = $C201 ; G page0
IOCTL_OTERM_SIGNAL              = $C202 ; G page0
IOCTL_OTERM_CLEAR               = $E002 ; G page0
DEF__crt_on_exit                = $10001 ; L page0
